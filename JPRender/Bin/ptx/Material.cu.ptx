//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z21PgmAH_radiance_shadowv
.global .align 4 .b8 dRay[36];
.global .align 4 .f32 dT;
.global .align 16 .b8 prdR[144];
.global .align 1 .b8 prdS[1];
.global .align 8 .b8 aInset[72];
.global .align 4 .b8 dataInstance[48];
.global .align 16 .b8 dataRenderer[224];
.global .align 4 .b8 topObject[4];
.global .align 4 .b8 GetSample1[4];
.global .align 4 .b8 GetSample2[4];
.global .align 4 .b8 GetTextur_Dir[4];
.global .align 4 .b8 GetEnvRadiance[4];
.global .align 4 .b8 CheckerBoard3[4];
.global .align 4 .b8 GetTexture_diffuse[4];
.global .align 4 .b8 GetTexture_glossy[4];
.global .align 4 .b8 GetTexture_normal[4];
.global .align 4 .b8 GetTriplanNormal[4];
.global .align 4 .b8 GetRandomSeed[4];
.global .align 1 .b8 buf_light_PDF[1];
.global .align 1 .b8 buf_light_Power[1];
.global .align 1 .b8 buf_light_sample_L[1];
.global .align 1 .b8 buf_lm_F[1];
.global .align 1 .b8 buf_lm_sample_F[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo4dRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2dTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4prdRE[8] = {82, 97, 121, 0, 144, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4prdSE[8] = {82, 97, 121, 0, 1, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6aInsetE[8] = {82, 97, 121, 0, 72, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataInstanceE[8] = {82, 97, 121, 0, 48, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataRendererE[8] = {82, 97, 121, 0, 224, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetTextur_DirE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14GetEnvRadianceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13CheckerBoard3E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18GetTexture_diffuseE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17GetTexture_glossyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17GetTexture_normalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16GetTriplanNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetRandomSeedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typename4dRayE[4] = {82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename2dTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename4prdRE[4] = {80, 82, 68, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4prdSE[11] = {80, 82, 68, 95, 83, 104, 97, 100, 111, 119, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6aInsetE[13] = {73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataInstanceE[15] = {83, 68, 97, 116, 97, 95, 73, 110, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataRendererE[15] = {83, 68, 97, 116, 97, 95, 82, 101, 110, 100, 101, 114, 101, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample1E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 49, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample2E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetTextur_DirE[49] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 67, 111, 108, 111, 114, 52, 40, 105, 110, 116, 32, 84, 83, 73, 68, 44, 99, 111, 110, 115, 116, 32, 68, 105, 114, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename14GetEnvRadianceE[61] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 40, 105, 110, 116, 44, 105, 110, 116, 44, 99, 111, 110, 115, 116, 32, 78, 111, 114, 38, 44, 102, 108, 111, 97, 116, 44, 67, 111, 108, 111, 114, 52, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13CheckerBoard3E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 40, 102, 108, 111, 97, 116, 51, 44, 102, 108, 111, 97, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename18GetTexture_diffuseE[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 67, 111, 108, 111, 114, 52, 40, 105, 110, 116, 44, 105, 110, 116, 44, 85, 86, 50, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17GetTexture_glossyE[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 67, 111, 108, 111, 114, 52, 40, 105, 110, 116, 44, 105, 110, 116, 44, 85, 86, 50, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17GetTexture_normalE[60] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 78, 111, 114, 40, 99, 111, 110, 115, 116, 32, 83, 68, 97, 116, 97, 95, 84, 101, 120, 116, 117, 114, 101, 38, 44, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename16GetTriplanNormalE[52] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 78, 111, 114, 40, 105, 110, 116, 44, 99, 111, 110, 115, 116, 32, 80, 111, 115, 38, 44, 99, 111, 110, 115, 116, 32, 78, 111, 114, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetRandomSeedE[37] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 117, 105, 110, 116, 40, 117, 105, 110, 116, 44, 117, 105, 110, 116, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum4dRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2dTE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4prdRE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4prdSE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6aInsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataInstanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataRendererE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample1E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample2E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetTextur_DirE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14GetEnvRadianceE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum13CheckerBoard3E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum18GetTexture_diffuseE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum17GetTexture_glossyE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum17GetTexture_normalE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum16GetTriplanNormalE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetRandomSeedE = 4920;
.global .align 16 .b8 _ZN21rti_internal_semantic4dRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic2dTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic4prdRE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic4prdSE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6aInsetE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 73, 110, 115, 101, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12dataInstanceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataRendererE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13GetTextur_DirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14GetEnvRadianceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13CheckerBoard3E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18GetTexture_diffuseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17GetTexture_glossyE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17GetTexture_normalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16GetTriplanNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13GetRandomSeedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4dRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2dTE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4prdRE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4prdSE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6aInsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataInstanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataRendererE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetTextur_DirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14GetEnvRadianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13CheckerBoard3E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18GetTexture_diffuseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17GetTexture_glossyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17GetTexture_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16GetTriplanNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetRandomSeedE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z21PgmAH_radiance_shadowv(

)
{
	.reg .b16 	%rs<2>;


	mov.u16 	%rs1, 0;
	st.global.u8 	[prdS], %rs1;
	// inline asm
	call _rt_terminate_ray, ();
	// inline asm
	ret;
}

	// .globl	_Z14PgmCH_radiancev
.visible .entry _Z14PgmCH_radiancev(

)
{
	.local .align 16 .b8 	__local_depot1[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<443>;
	.reg .b16 	%rs<44>;
	.reg .f32 	%f<3822>;
	.reg .b32 	%r<1711>;
	.reg .b64 	%rd<877>;


	mov.u64 	%rd876, __local_depot1;
	cvta.local.u64 	%SP, %rd876;
	add.u64 	%rd112, %SP, 192;
	cvta.to.local.u64 	%rd1, %rd112;
	ld.global.f32 	%f658, [dRay+12];
	neg.f32 	%f659, %f658;
	ld.global.f32 	%f660, [dRay+16];
	ld.global.f32 	%f661, [dRay+20];
	add.u64 	%rd113, %SP, 48;
	cvta.to.local.u64 	%rd114, %rd113;
	add.s64 	%rd2, %rd114, 12;
	ld.global.f32 	%f662, [dRay];
	ld.global.f32 	%f663, [dRay+4];
	ld.global.f32 	%f664, [dRay+8];
	st.local.f32 	[%rd114+12], %f659;
	neg.f32 	%f665, %f661;
	neg.f32 	%f666, %f660;
	st.local.v2.f32 	[%rd114+16], {%f666, %f665};
	ld.global.f32 	%f667, [dT];
	fma.rn.f32 	%f668, %f667, %f658, %f662;
	fma.rn.f32 	%f669, %f667, %f660, %f663;
	fma.rn.f32 	%f670, %f667, %f661, %f664;
	st.local.f32 	[%rd114+44], %f670;
	st.local.f32 	[%rd114+40], %f669;
	st.local.f32 	[%rd114+36], %f668;
	ld.global.f32 	%f654, [aInset+12];
	ld.global.v2.f32 	{%f671, %f672}, [aInset+16];
	mov.u32 	%r473, 7937;
	mov.f32 	%f657, 0f00000000;
	// inline asm
	call (%f650, %f651, %f652, %f653), _rt_transform_tuple, (%r473, %f654, %f671, %f672, %f657);
	// inline asm
	mul.f32 	%f673, %f651, %f651;
	fma.rn.f32 	%f674, %f650, %f650, %f673;
	fma.rn.f32 	%f675, %f652, %f652, %f674;
	sqrt.rn.f32 	%f676, %f675;
	rcp.rn.f32 	%f677, %f676;
	mul.f32 	%f678, %f652, %f677;
	mul.f32 	%f679, %f651, %f677;
	mul.f32 	%f680, %f650, %f677;
	st.local.v2.f32 	[%rd114], {%f680, %f679};
	st.local.f32 	[%rd114+8], %f678;
	ld.global.u32 	%r480, [prdR];
	st.local.u32 	[%rd1], %r480;
	ld.global.u32 	%r474, [dataInstance+32];
	ld.global.s32 	%rd106, [dataInstance+36];
	mov.u32 	%r475, 1;
	mov.u32 	%r476, 320;
	mov.u64 	%rd109, 0;
	// inline asm
	call (%rd105), _rt_buffer_get_id_64, (%r474, %r475, %r476, %rd106, %rd109, %rd109, %rd109);
	// inline asm
	ld.global.u32 	%r481, [dataInstance+32];
	ld.global.u32 	%r482, [dataInstance+36];
	ld.global.f32 	%f681, [aInset+28];
	ld.global.f32 	%f682, [aInset+24];
	ld.global.u32 	%r477, [GetTexture_diffuse];
	// inline asm
	call (%rd110), _rt_callable_program_from_id_64, (%r477);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r481;
	.param .b32 param1;
	st.param.b32	[param1+0], %r482;
	.param .align 8 .b8 param2[8];
	st.param.f32	[param2+0], %f682;
	st.param.f32	[param2+4], %f681;
	.param .align 16 .b8 retval0[16];
	prototype_0 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .b32 _, .param .align 8 .b8 _[8]);
	call (retval0), 
	%rd110, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_0;
	ld.param.f32	%f5, [retval0+0];
	ld.param.f32	%f6, [retval0+4];
	ld.param.f32	%f7, [retval0+8];
	ld.param.f32	%f8, [retval0+12];
	
	//{
	}// Callseq End 0
	ld.global.u32 	%r483, [dataInstance+32];
	ld.global.u32 	%r484, [dataInstance+36];
	ld.global.f32 	%f683, [aInset+28];
	ld.global.f32 	%f684, [aInset+24];
	ld.global.u32 	%r478, [GetTexture_glossy];
	// inline asm
	call (%rd111), _rt_callable_program_from_id_64, (%r478);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r483;
	.param .b32 param1;
	st.param.b32	[param1+0], %r484;
	.param .align 8 .b8 param2[8];
	st.param.f32	[param2+0], %f684;
	st.param.f32	[param2+4], %f683;
	.param .align 16 .b8 retval0[16];
	prototype_1 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .b32 _, .param .align 8 .b8 _[8]);
	call (retval0), 
	%rd111, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_1;
	ld.param.f32	%f13, [retval0+0];
	ld.param.f32	%f14, [retval0+4];
	ld.param.f32	%f15, [retval0+8];
	ld.param.f32	%f16, [retval0+12];
	
	//{
	}// Callseq End 1
	ld.u32 	%r479, [%rd105+316];
	setp.gt.s32	%p6, %r479, 6;
	@%p6 bra 	BB1_18;

	setp.gt.s32	%p16, %r479, 3;
	@%p16 bra 	BB1_10;

	setp.eq.s32	%p20, %r479, 1;
	@%p20 bra 	BB1_519;

	setp.eq.s32	%p21, %r479, 2;
	@%p21 bra 	BB1_507;
	bra.uni 	BB1_4;

BB1_507:
	mov.u32 	%r1575, 7937;
	add.s64 	%rd631, %rd105, 144;
	ld.global.v2.f32 	{%f3091, %f3092}, [aInset];
	ld.global.v2.f32 	{%f3095, %f3096}, [aInset+8];
	ld.global.v2.f32 	{%f3099, %f3100}, [aInset+16];
	ld.global.v2.f32 	{%f3103, %f3104}, [aInset+24];
	ld.global.v2.f32 	{%f3107, %f3108}, [aInset+32];
	ld.global.v2.f32 	{%f3111, %f3112}, [aInset+40];
	ld.global.v2.f32 	{%f3115, %f3116}, [aInset+48];
	ld.global.v2.f32 	{%f3119, %f3120}, [aInset+56];
	ld.global.v2.f32 	{%f3123, %f3124}, [aInset+64];
	mov.b32 	 %r1434, %f3124;
	ld.global.u32 	%r1429, [GetTexture_normal];
	// inline asm
	call (%rd626), _rt_callable_program_from_id_64, (%r1429);
	// inline asm
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd631;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f3091;
	st.param.f32	[param1+4], %f3092;
	st.param.f32	[param1+8], %f3095;
	st.param.f32	[param1+12], %f3096;
	st.param.f32	[param1+16], %f3099;
	st.param.f32	[param1+20], %f3100;
	st.param.f32	[param1+24], %f3103;
	st.param.f32	[param1+28], %f3104;
	st.param.f32	[param1+32], %f3107;
	st.param.f32	[param1+36], %f3108;
	st.param.f32	[param1+40], %f3111;
	st.param.f32	[param1+44], %f3112;
	st.param.f32	[param1+48], %f3115;
	st.param.f32	[param1+52], %f3116;
	st.param.f32	[param1+56], %f3119;
	st.param.f32	[param1+60], %f3120;
	st.param.f32	[param1+64], %f3123;
	st.param.b32	[param1+68], %r1434;
	.param .align 4 .b8 retval0[12];
	prototype_50 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd626, 
	(
	param0, 
	param1
	)
	, prototype_50;
	ld.param.f32	%f3083, [retval0+0];
	ld.param.f32	%f3084, [retval0+4];
	ld.param.f32	%f3085, [retval0+8];
	
	//{
	}// Callseq End 50
	mov.f32 	%f3805, 0f00000000;
	// inline asm
	call (%f3079, %f3080, %f3081, %f3082), _rt_transform_tuple, (%r1575, %f3083, %f3084, %f3085, %f3805);
	// inline asm
	mul.f32 	%f3127, %f3080, %f3080;
	fma.rn.f32 	%f3128, %f3079, %f3079, %f3127;
	fma.rn.f32 	%f3129, %f3081, %f3081, %f3128;
	sqrt.rn.f32 	%f3130, %f3129;
	rcp.rn.f32 	%f3131, %f3130;
	mul.f32 	%f3132, %f3081, %f3131;
	mul.f32 	%f3133, %f3080, %f3131;
	mul.f32 	%f3134, %f3079, %f3131;
	st.local.v2.f32 	[%rd2+-12], {%f3134, %f3133};
	st.local.f32 	[%rd2+-4], %f3132;
	ld.f32 	%f3135, [%rd105+284];
	rcp.rn.f32 	%f3136, %f3135;
	st.local.f32 	[%rd2+72], %f3136;
	ld.global.u32 	%r1431, [dataRenderer+160];
	mov.u32 	%r1433, 176;
	// inline asm
	call (%rd627, %rd628, %rd629, %rd630), _rt_buffer_get_id_size_64, (%r1431, %r475, %r1433);
	// inline asm
	cvt.u32.u64	%r457, %rd627;
	setp.eq.s32	%p412, %r457, 0;
	mov.f32 	%f3804, %f3805;
	mov.f32 	%f3803, %f3805;
	mov.f32 	%f3802, %f3805;
	@%p412 bra 	BB1_515;

	add.u64 	%rd633, %SP, 0;
	cvta.to.local.u64 	%rd97, %rd633;
	mov.f32 	%f3805, 0f00000000;
	mov.u32 	%r1705, 0;
	mov.u64 	%rd632, 0;
	mov.u64 	%rd874, %rd632;
	mov.f32 	%f3804, %f3805;
	mov.f32 	%f3803, %f3805;
	mov.f32 	%f3802, %f3805;

BB1_509:
	ld.global.u32 	%r1436, [dataRenderer+160];
	// inline asm
	call (%rd634), _rt_buffer_get_id_64, (%r1436, %r475, %r1433, %rd874, %rd632, %rd632, %rd632);
	// inline asm
	ld.u32 	%rd641, [%rd634];
	mov.u64 	%rd646, buf_light_sample_L;
	cvta.global.u64 	%rd640, %rd646;
	mov.u32 	%r1440, 4;
	// inline asm
	call (%rd639), _rt_buffer_get_64, (%rd640, %r475, %r1440, %rd641, %rd632, %rd632, %rd632);
	// inline asm
	ld.u32 	%r1441, [%rd639];
	// inline asm
	call (%rd645), _rt_callable_program_from_id_64, (%r1441);
	// inline asm
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd634;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_51 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd645, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_51;
	
	//{
	}// Callseq End 51
	ld.local.v4.f32 	{%f3141, %f3142, %f3143, %f3144}, [%rd2+52];
	mul.f32 	%f3146, %f3142, 0f3F170A3D;
	fma.rn.f32 	%f3148, %f3141, 0f3E99999A, %f3146;
	fma.rn.f32 	%f3150, %f3143, 0f3DE147AE, %f3148;
	fma.rn.f32 	%f3152, %f3144, 0f00000000, %f3150;
	setp.le.f32	%p413, %f3152, 0f358637BD;
	@%p413 bra 	BB1_514;

	ld.local.f32 	%f3153, [%rd2+36];
	setp.le.f32	%p414, %f3153, 0f3A83126F;
	@%p414 bra 	BB1_514;

	ld.local.v2.f32 	{%f3154, %f3155}, [%rd2+12];
	mul.f32 	%f3158, %f3155, %f3155;
	fma.rn.f32 	%f3159, %f3154, %f3154, %f3158;
	ld.local.f32 	%f3160, [%rd2+20];
	fma.rn.f32 	%f3161, %f3160, %f3160, %f3159;
	sqrt.rn.f32 	%f611, %f3161;
	rcp.rn.f32 	%f3162, %f611;
	mul.f32 	%f612, %f3162, %f3154;
	mul.f32 	%f613, %f3162, %f3155;
	mul.f32 	%f614, %f3162, %f3160;
	ld.local.v4.f32 	{%f3163, %f3164, %f3165, %f3166}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f612, %f613};
	st.local.f32 	[%rd2+20], %f614;
	ld.local.f32 	%f3167, [%rd2+16];
	mul.f32 	%f3169, %f3167, %f3164;
	fma.rn.f32 	%f3171, %f612, %f3163, %f3169;
	ld.local.f32 	%f3173, [%rd2+20];
	fma.rn.f32 	%f615, %f3173, %f3165, %f3171;
	setp.leu.f32	%p415, %f615, 0f00000000;
	@%p415 bra 	BB1_514;

	ld.global.f32 	%f3180, [dataRenderer+8];
	ld.local.f32 	%f3176, [%rd2+32];
	ld.local.f32 	%f3175, [%rd2+28];
	ld.local.f32 	%f3174, [%rd2+24];
	mov.u16 	%rs20, 1;
	st.local.u8 	[%rd97], %rs20;
	ld.global.u32 	%r1442, [topObject];
	mov.u32 	%r1443, 2;
	// inline asm
	call _rt_trace_64, (%r1442, %f3174, %f3175, %f3176, %f612, %f613, %f614, %r1443, %f3180, %f611, %rd633, %r475);
	// inline asm
	ld.local.u8 	%rs21, [%rd97];
	setp.eq.s16	%p416, %rs21, 0;
	@%p416 bra 	BB1_514;

	mov.u64 	%rd657, buf_lm_F;
	cvta.global.u64 	%rd651, %rd657;
	mov.u64 	%rd652, 1;
	mov.u64 	%rd655, 0;
	// inline asm
	call (%rd650), _rt_buffer_get_64, (%rd651, %r475, %r1440, %rd652, %rd655, %rd655, %rd655);
	// inline asm
	ld.u32 	%r1447, [%rd650];
	// inline asm
	call (%rd656), _rt_callable_program_from_id_64, (%r1447);
	// inline asm
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_52 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd656, 
	(
	param0, 
	param1
	)
	, prototype_52;
	
	//{
	}// Callseq End 52
	ld.local.v2.f32 	{%f3182, %f3183}, [%rd2+36];
	ld.local.v4.f32 	{%f3186, %f3187, %f3188, %f3189}, [%rd2+52];
	mul.f32 	%f3191, %f3183, %f3186;
	mul.f32 	%f3193, %f3183, %f3187;
	mul.f32 	%f3195, %f3183, %f3188;
	mul.f32 	%f3197, %f3183, %f3189;
	mul.f32 	%f3198, %f615, %f3191;
	mul.f32 	%f3199, %f615, %f3193;
	mul.f32 	%f3200, %f615, %f3195;
	mul.f32 	%f3201, %f615, %f3197;
	rcp.rn.f32 	%f3202, %f3182;
	fma.rn.f32 	%f3802, %f3198, %f3202, %f3802;
	fma.rn.f32 	%f3803, %f3199, %f3202, %f3803;
	fma.rn.f32 	%f3804, %f3200, %f3202, %f3804;
	fma.rn.f32 	%f3805, %f3201, %f3202, %f3805;

BB1_514:
	add.s64 	%rd874, %rd874, 1;
	add.s32 	%r1705, %r1705, 1;
	setp.lt.u32	%p417, %r1705, %r457;
	@%p417 bra 	BB1_509;

BB1_515:
	st.local.v4.f32 	[%rd2+52], {%f3802, %f3803, %f3804, %f3805};
	mul.f32 	%f3203, %f8, %f16;
	mul.f32 	%f3204, %f7, %f15;
	mul.f32 	%f3205, %f6, %f14;
	mul.f32 	%f3206, %f5, %f13;
	st.global.v4.f32 	[prdR+48], {%f3206, %f3205, %f3204, %f3203};
	mov.u64 	%rd667, buf_lm_sample_F;
	cvta.global.u64 	%rd661, %rd667;
	mov.u32 	%r1449, 4;
	mov.u64 	%rd662, 1;
	mov.u64 	%rd665, 0;
	// inline asm
	call (%rd660), _rt_buffer_get_64, (%rd661, %r475, %r1449, %rd662, %rd665, %rd665, %rd665);
	// inline asm
	ld.u32 	%r1450, [%rd660];
	// inline asm
	call (%rd666), _rt_callable_program_from_id_64, (%r1450);
	// inline asm
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_53 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd666, 
	(
	param0, 
	param1
	)
	, prototype_53;
	
	//{
	}// Callseq End 53
	ld.f32 	%f3207, [%rd105+284];
	mov.f32 	%f3208, 0f3F800000;
	sub.f32 	%f628, %f3208, %f3207;
	ld.global.f32 	%f3209, [prdR+80];
	setp.leu.f32	%p418, %f3209, %f628;
	@%p418 bra 	BB1_517;

	st.global.f32 	[prdR+80], %f628;

BB1_517:
	ld.global.u32 	%r1451, [prdR+4];
	ld.global.u32 	%r1452, [dataRenderer+164];
	add.s32 	%r460, %r1452, -1;
	setp.ge.u32	%p419, %r1451, %r460;
	@%p419 bra 	BB1_558;

	add.s32 	%r1564, %r1452, -1;
	st.global.u32 	[prdR+4], %r1564;
	bra.uni 	BB1_558;

BB1_18:
	setp.gt.s32	%p7, %r479, 9;
	@%p7 bra 	BB1_30;

	setp.eq.s32	%p13, %r479, 7;
	@%p13 bra 	BB1_389;

	setp.eq.s32	%p14, %r479, 8;
	@%p14 bra 	BB1_380;

	setp.eq.s32	%p15, %r479, 9;
	@%p15 bra 	BB1_22;
	bra.uni 	BB1_33;

BB1_22:
	ld.global.u32 	%r512, [GetSample2];
	// inline asm
	call (%rd159), _rt_callable_program_from_id_64, (%r512);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .align 8 .b8 retval0[8];
	prototype_6 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd159, 
	(
	param0
	)
	, prototype_6;
	ld.param.f32	%f38, [retval0+0];
	ld.param.f32	%f39, [retval0+4];
	
	//{
	}// Callseq End 6
	ld.f32 	%f885, [%rd105+256];
	setp.lt.f32	%p32, %f38, %f885;
	@%p32 bra 	BB1_204;
	bra.uni 	BB1_23;

BB1_204:
	ld.local.v4.f32 	{%f1308, %f1309, %f1310, %f1311}, [%rd2+-12];
	ld.local.v2.f32 	{%f1316, %f1317}, [%rd2+4];
	mul.f32 	%f1319, %f1316, %f1309;
	fma.rn.f32 	%f1320, %f1311, %f1308, %f1319;
	fma.rn.f32 	%f1322, %f1317, %f1310, %f1320;
	abs.f32 	%f1323, %f1322;
	ld.v4.f32 	{%f1324, %f1325, %f1326, %f1327}, [%rd105+192];
	sub.f32 	%f208, %f1326, %f1325;
	mov.f32 	%f1328, 0f3F800000;
	sub.f32 	%f1329, %f1328, %f1323;
	mov.f32 	%f3678, 0f00000000;
	max.f32 	%f209, %f3678, %f1329;
	mul.f32 	%f1331, %f1324, 0f3F000000;
	cvt.rzi.f32.f32	%f1332, %f1331;
	fma.rn.f32 	%f1333, %f1332, 0fC0000000, %f1324;
	abs.f32 	%f211, %f1333;
	abs.f32 	%f212, %f209;
	setp.lt.f32	%p128, %f212, 0f00800000;
	mul.f32 	%f1334, %f212, 0f4B800000;
	selp.f32	%f1335, 0fC3170000, 0fC2FE0000, %p128;
	selp.f32	%f1336, %f1334, %f212, %p128;
	mov.b32 	 %r832, %f1336;
	and.b32  	%r833, %r832, 8388607;
	or.b32  	%r834, %r833, 1065353216;
	mov.b32 	 %f1337, %r834;
	shr.u32 	%r835, %r832, 23;
	cvt.rn.f32.u32	%f1338, %r835;
	add.f32 	%f1339, %f1335, %f1338;
	setp.gt.f32	%p129, %f1337, 0f3FB504F3;
	mul.f32 	%f1340, %f1337, 0f3F000000;
	add.f32 	%f1341, %f1339, 0f3F800000;
	selp.f32	%f1342, %f1340, %f1337, %p129;
	selp.f32	%f1343, %f1341, %f1339, %p129;
	add.f32 	%f1344, %f1342, 0fBF800000;
	add.f32 	%f1307, %f1342, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1306,%f1307;
	// inline asm
	add.f32 	%f1345, %f1344, %f1344;
	mul.f32 	%f1346, %f1306, %f1345;
	mul.f32 	%f1347, %f1346, %f1346;
	mov.f32 	%f1348, 0f3C4CAF63;
	mov.f32 	%f1349, 0f3B18F0FE;
	fma.rn.f32 	%f1350, %f1349, %f1347, %f1348;
	mov.f32 	%f1351, 0f3DAAAABD;
	fma.rn.f32 	%f1352, %f1350, %f1347, %f1351;
	mul.rn.f32 	%f1353, %f1352, %f1347;
	mul.rn.f32 	%f1354, %f1353, %f1346;
	sub.f32 	%f1355, %f1344, %f1346;
	neg.f32 	%f1356, %f1346;
	add.f32 	%f1357, %f1355, %f1355;
	fma.rn.f32 	%f1358, %f1356, %f1344, %f1357;
	mul.rn.f32 	%f1359, %f1306, %f1358;
	add.f32 	%f1360, %f1354, %f1346;
	sub.f32 	%f1361, %f1346, %f1360;
	add.f32 	%f1362, %f1354, %f1361;
	add.f32 	%f1363, %f1359, %f1362;
	add.f32 	%f1364, %f1360, %f1363;
	sub.f32 	%f1365, %f1360, %f1364;
	add.f32 	%f1366, %f1363, %f1365;
	mov.f32 	%f1367, 0f3F317200;
	mul.rn.f32 	%f1368, %f1343, %f1367;
	mov.f32 	%f1369, 0f35BFBE8E;
	mul.rn.f32 	%f1370, %f1343, %f1369;
	add.f32 	%f1371, %f1368, %f1364;
	sub.f32 	%f1372, %f1368, %f1371;
	add.f32 	%f1373, %f1364, %f1372;
	add.f32 	%f1374, %f1366, %f1373;
	add.f32 	%f1375, %f1370, %f1374;
	add.f32 	%f1376, %f1371, %f1375;
	sub.f32 	%f1377, %f1371, %f1376;
	add.f32 	%f1378, %f1375, %f1377;
	abs.f32 	%f213, %f1324;
	setp.gt.f32	%p130, %f213, 0f77F684DF;
	mul.f32 	%f1379, %f1324, 0f39000000;
	selp.f32	%f1380, %f1379, %f1324, %p130;
	mul.rn.f32 	%f1381, %f1380, %f1376;
	neg.f32 	%f1382, %f1381;
	fma.rn.f32 	%f1383, %f1380, %f1376, %f1382;
	fma.rn.f32 	%f1384, %f1380, %f1378, %f1383;
	fma.rn.f32 	%f1385, %f3678, %f1376, %f1384;
	add.rn.f32 	%f1386, %f1381, %f1385;
	neg.f32 	%f1387, %f1386;
	add.rn.f32 	%f1388, %f1381, %f1387;
	add.rn.f32 	%f1389, %f1388, %f1385;
	mov.b32 	 %r836, %f1386;
	setp.eq.s32	%p131, %r836, 1118925336;
	add.s32 	%r837, %r836, -1;
	mov.b32 	 %f1390, %r837;
	add.f32 	%f1391, %f1389, 0f37000000;
	selp.f32	%f1392, %f1390, %f1386, %p131;
	selp.f32	%f214, %f1391, %f1389, %p131;
	mul.f32 	%f1393, %f1392, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1394, %f1393;
	mov.f32 	%f1395, 0fBF317200;
	fma.rn.f32 	%f1396, %f1394, %f1395, %f1392;
	mov.f32 	%f1397, 0fB5BFBE8E;
	fma.rn.f32 	%f1398, %f1394, %f1397, %f1396;
	mul.f32 	%f1399, %f1398, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1400, %f1399;
	add.f32 	%f1401, %f1394, 0f00000000;
	ex2.approx.f32 	%f1402, %f1401;
	mul.f32 	%f1403, %f1400, %f1402;
	setp.lt.f32	%p132, %f1392, 0fC2D20000;
	selp.f32	%f1404, 0f00000000, %f1403, %p132;
	setp.gt.f32	%p133, %f1392, 0f42D20000;
	selp.f32	%f3656, 0f7F800000, %f1404, %p133;
	setp.eq.f32	%p134, %f3656, 0f7F800000;
	@%p134 bra 	BB1_206;

	fma.rn.f32 	%f3656, %f3656, %f214, %f3656;

BB1_206:
	setp.lt.f32	%p135, %f209, 0f00000000;
	setp.eq.f32	%p136, %f211, 0f3F800000;
	and.pred  	%p1, %p135, %p136;
	mov.b32 	 %r838, %f3656;
	xor.b32  	%r839, %r838, -2147483648;
	mov.b32 	 %f1405, %r839;
	selp.f32	%f3658, %f1405, %f3656, %p1;
	setp.eq.f32	%p137, %f209, 0f00000000;
	@%p137 bra 	BB1_209;
	bra.uni 	BB1_207;

BB1_209:
	add.f32 	%f1407, %f209, %f209;
	mov.b32 	 %r840, %f1407;
	selp.b32	%r841, %r840, 0, %p136;
	or.b32  	%r842, %r841, 2139095040;
	setp.lt.f32	%p141, %f1324, 0f00000000;
	selp.b32	%r843, %r842, %r841, %p141;
	mov.b32 	 %f3658, %r843;
	bra.uni 	BB1_210;

BB1_10:
	setp.eq.s32	%p17, %r479, 4;
	@%p17 bra 	BB1_482;

	setp.eq.s32	%p18, %r479, 5;
	@%p18 bra 	BB1_451;
	bra.uni 	BB1_12;

BB1_451:
	mov.u32 	%r1571, 7937;
	ld.global.f32 	%f2510, [aInset+20];
	ld.global.f32 	%f2509, [aInset+16];
	ld.global.f32 	%f2508, [aInset+12];
	mov.f32 	%f3778, 0f00000000;
	// inline asm
	call (%f2504, %f2505, %f2506, %f2507), _rt_transform_tuple, (%r1571, %f2508, %f2509, %f2510, %f3778);
	// inline asm
	mul.f32 	%f2512, %f2505, %f2505;
	fma.rn.f32 	%f2513, %f2504, %f2504, %f2512;
	fma.rn.f32 	%f2514, %f2506, %f2506, %f2513;
	sqrt.rn.f32 	%f2515, %f2514;
	rcp.rn.f32 	%f2516, %f2515;
	mul.f32 	%f2517, %f2506, %f2516;
	mul.f32 	%f2518, %f2505, %f2516;
	mul.f32 	%f2519, %f2504, %f2516;
	st.local.v2.f32 	[%rd2+-12], {%f2519, %f2518};
	st.local.f32 	[%rd2+-4], %f2517;
	ld.u32 	%r1318, [%rd105+188];
	setp.eq.s32	%p338, %r1318, 0;
	@%p338 bra 	BB1_453;

	ld.u32 	%r1320, [%rd105+184];
	ld.local.f32 	%f2520, [%rd2+24];
	ld.f32 	%f2521, [%rd105+160];
	mul.f32 	%f2522, %f2521, %f2520;
	ld.local.v2.f32 	{%f2523, %f2524}, [%rd2+28];
	mul.f32 	%f2526, %f2521, %f2523;
	mul.f32 	%f2528, %f2521, %f2524;
	add.u64 	%rd488, %SP, 0;
	cvta.to.local.u64 	%rd489, %rd488;
	st.local.f32 	[%rd489], %f2522;
	st.local.f32 	[%rd489+4], %f2526;
	st.local.f32 	[%rd489+8], %f2528;
	ld.global.u32 	%r1319, [GetTriplanNormal];
	// inline asm
	call (%rd487), _rt_callable_program_from_id_64, (%r1319);
	// inline asm
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1320;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd488;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd113;
	.param .align 4 .b8 retval0[12];
	prototype_33 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b32 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd487, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_33;
	ld.param.f32	%f2529, [retval0+0];
	ld.param.f32	%f2530, [retval0+4];
	ld.param.f32	%f2531, [retval0+8];
	
	//{
	}// Callseq End 33
	ld.f32 	%f2532, [%rd105+172];
	add.f32 	%f2533, %f2532, 0f3F800000;
	ld.local.v4.f32 	{%f2534, %f2535, %f2536, %f2537}, [%rd2+-12];
	sub.f32 	%f2539, %f2534, %f2529;
	sub.f32 	%f2541, %f2535, %f2530;
	sub.f32 	%f2543, %f2536, %f2531;
	fma.rn.f32 	%f2544, %f2533, %f2543, %f2531;
	fma.rn.f32 	%f2545, %f2533, %f2541, %f2530;
	fma.rn.f32 	%f2546, %f2533, %f2539, %f2529;
	st.local.v2.f32 	[%rd2+-12], {%f2546, %f2545};
	st.local.f32 	[%rd2+-4], %f2544;

BB1_453:
	ld.local.v4.f32 	{%f2549, %f2550, %f2551, %f2552}, [%rd2+-12];
	mul.f32 	%f2554, %f2550, %f2550;
	fma.rn.f32 	%f2556, %f2549, %f2549, %f2554;
	fma.rn.f32 	%f2558, %f2551, %f2551, %f2556;
	sqrt.rn.f32 	%f2559, %f2558;
	rcp.rn.f32 	%f2560, %f2559;
	mul.f32 	%f2561, %f2560, %f2551;
	mul.f32 	%f2562, %f2560, %f2550;
	mul.f32 	%f2563, %f2560, %f2549;
	st.local.v2.f32 	[%rd2+-12], {%f2563, %f2562};
	st.local.f32 	[%rd2+-4], %f2561;
	ld.f32 	%f521, [%rd105+216];
	ld.f32 	%f522, [%rd105+212];
	ld.local.f32 	%f2564, [%rd2];
	ld.local.f32 	%f2565, [%rd2+4];
	mul.f32 	%f2566, %f2565, %f2562;
	fma.rn.f32 	%f2567, %f2564, %f2563, %f2566;
	ld.local.f32 	%f2568, [%rd2+8];
	fma.rn.f32 	%f2569, %f2568, %f2561, %f2567;
	abs.f32 	%f2570, %f2569;
	mov.f32 	%f2571, 0f3F800000;
	sub.f32 	%f2572, %f2571, %f2570;
	max.f32 	%f523, %f3778, %f2572;
	ld.f32 	%f524, [%rd105+208];
	mul.f32 	%f2574, %f524, 0f3F000000;
	cvt.rzi.f32.f32	%f2575, %f2574;
	fma.rn.f32 	%f2576, %f2575, 0fC0000000, %f524;
	abs.f32 	%f525, %f2576;
	abs.f32 	%f526, %f523;
	setp.lt.f32	%p339, %f526, 0f00800000;
	mul.f32 	%f2577, %f526, 0f4B800000;
	selp.f32	%f2578, 0fC3170000, 0fC2FE0000, %p339;
	selp.f32	%f2579, %f2577, %f526, %p339;
	mov.b32 	 %r1321, %f2579;
	and.b32  	%r1322, %r1321, 8388607;
	or.b32  	%r1323, %r1322, 1065353216;
	mov.b32 	 %f2580, %r1323;
	shr.u32 	%r1324, %r1321, 23;
	cvt.rn.f32.u32	%f2581, %r1324;
	add.f32 	%f2582, %f2578, %f2581;
	setp.gt.f32	%p340, %f2580, 0f3FB504F3;
	mul.f32 	%f2583, %f2580, 0f3F000000;
	add.f32 	%f2584, %f2582, 0f3F800000;
	selp.f32	%f2585, %f2583, %f2580, %p340;
	selp.f32	%f2586, %f2584, %f2582, %p340;
	add.f32 	%f2587, %f2585, 0fBF800000;
	add.f32 	%f2548, %f2585, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f2547,%f2548;
	// inline asm
	add.f32 	%f2588, %f2587, %f2587;
	mul.f32 	%f2589, %f2547, %f2588;
	mul.f32 	%f2590, %f2589, %f2589;
	mov.f32 	%f2591, 0f3C4CAF63;
	mov.f32 	%f2592, 0f3B18F0FE;
	fma.rn.f32 	%f2593, %f2592, %f2590, %f2591;
	mov.f32 	%f2594, 0f3DAAAABD;
	fma.rn.f32 	%f2595, %f2593, %f2590, %f2594;
	mul.rn.f32 	%f2596, %f2595, %f2590;
	mul.rn.f32 	%f2597, %f2596, %f2589;
	sub.f32 	%f2598, %f2587, %f2589;
	neg.f32 	%f2599, %f2589;
	add.f32 	%f2600, %f2598, %f2598;
	fma.rn.f32 	%f2601, %f2599, %f2587, %f2600;
	mul.rn.f32 	%f2602, %f2547, %f2601;
	add.f32 	%f2603, %f2597, %f2589;
	sub.f32 	%f2604, %f2589, %f2603;
	add.f32 	%f2605, %f2597, %f2604;
	add.f32 	%f2606, %f2602, %f2605;
	add.f32 	%f2607, %f2603, %f2606;
	sub.f32 	%f2608, %f2603, %f2607;
	add.f32 	%f2609, %f2606, %f2608;
	mov.f32 	%f2610, 0f3F317200;
	mul.rn.f32 	%f2611, %f2586, %f2610;
	mov.f32 	%f2612, 0f35BFBE8E;
	mul.rn.f32 	%f2613, %f2586, %f2612;
	add.f32 	%f2614, %f2611, %f2607;
	sub.f32 	%f2615, %f2611, %f2614;
	add.f32 	%f2616, %f2607, %f2615;
	add.f32 	%f2617, %f2609, %f2616;
	add.f32 	%f2618, %f2613, %f2617;
	add.f32 	%f2619, %f2614, %f2618;
	sub.f32 	%f2620, %f2614, %f2619;
	add.f32 	%f2621, %f2618, %f2620;
	abs.f32 	%f527, %f524;
	setp.gt.f32	%p341, %f527, 0f77F684DF;
	mul.f32 	%f2622, %f524, 0f39000000;
	selp.f32	%f2623, %f2622, %f524, %p341;
	mul.rn.f32 	%f2624, %f2623, %f2619;
	neg.f32 	%f2625, %f2624;
	fma.rn.f32 	%f2626, %f2623, %f2619, %f2625;
	fma.rn.f32 	%f2627, %f2623, %f2621, %f2626;
	fma.rn.f32 	%f2628, %f3778, %f2619, %f2627;
	add.rn.f32 	%f2629, %f2624, %f2628;
	neg.f32 	%f2630, %f2629;
	add.rn.f32 	%f2631, %f2624, %f2630;
	add.rn.f32 	%f2632, %f2631, %f2628;
	mov.b32 	 %r1325, %f2629;
	setp.eq.s32	%p342, %r1325, 1118925336;
	add.s32 	%r1326, %r1325, -1;
	mov.b32 	 %f2633, %r1326;
	add.f32 	%f2634, %f2632, 0f37000000;
	selp.f32	%f2635, %f2633, %f2629, %p342;
	selp.f32	%f528, %f2634, %f2632, %p342;
	mul.f32 	%f2636, %f2635, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f2637, %f2636;
	mov.f32 	%f2638, 0fBF317200;
	fma.rn.f32 	%f2639, %f2637, %f2638, %f2635;
	mov.f32 	%f2640, 0fB5BFBE8E;
	fma.rn.f32 	%f2641, %f2637, %f2640, %f2639;
	mul.f32 	%f2642, %f2641, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f2643, %f2642;
	add.f32 	%f2644, %f2637, 0f00000000;
	ex2.approx.f32 	%f2645, %f2644;
	mul.f32 	%f2646, %f2643, %f2645;
	setp.lt.f32	%p343, %f2635, 0fC2D20000;
	selp.f32	%f2647, 0f00000000, %f2646, %p343;
	setp.gt.f32	%p344, %f2635, 0f42D20000;
	selp.f32	%f3767, 0f7F800000, %f2647, %p344;
	setp.eq.f32	%p345, %f3767, 0f7F800000;
	@%p345 bra 	BB1_455;

	fma.rn.f32 	%f3767, %f3767, %f528, %f3767;

BB1_455:
	setp.lt.f32	%p346, %f523, 0f00000000;
	setp.eq.f32	%p347, %f525, 0f3F800000;
	and.pred  	%p4, %p346, %p347;
	mov.b32 	 %r1327, %f3767;
	xor.b32  	%r1328, %r1327, -2147483648;
	mov.b32 	 %f2648, %r1328;
	selp.f32	%f3769, %f2648, %f3767, %p4;
	setp.eq.f32	%p348, %f523, 0f00000000;
	@%p348 bra 	BB1_458;
	bra.uni 	BB1_456;

BB1_458:
	add.f32 	%f2650, %f523, %f523;
	mov.b32 	 %r1329, %f2650;
	selp.b32	%r1330, %r1329, 0, %p347;
	or.b32  	%r1331, %r1330, 2139095040;
	setp.lt.f32	%p352, %f524, 0f00000000;
	selp.b32	%r1332, %r1331, %r1330, %p352;
	mov.b32 	 %f3769, %r1332;
	bra.uni 	BB1_459;

BB1_30:
	setp.gt.s32	%p8, %r479, 11;
	@%p8 bra 	BB1_34;

	setp.eq.s32	%p11, %r479, 10;
	@%p11 bra 	BB1_380;
	bra.uni 	BB1_32;

BB1_380:
	ld.global.u32 	%r1177, [dataRenderer+160];
	mov.u32 	%r1179, 176;
	// inline asm
	call (%rd292, %rd293, %rd294, %rd295), _rt_buffer_get_id_size_64, (%r1177, %r475, %r1179);
	// inline asm
	cvt.u32.u64	%r437, %rd292;
	setp.eq.s32	%p252, %r437, 0;
	mov.f32 	%f3719, 0f00000000;
	mov.f32 	%f3718, %f3719;
	mov.f32 	%f3717, %f3719;
	mov.f32 	%f3716, %f3719;
	@%p252 bra 	BB1_388;

	add.u64 	%rd297, %SP, 0;
	cvta.to.local.u64 	%rd79, %rd297;
	mov.f32 	%f3719, 0f00000000;
	mov.u32 	%r1699, 0;
	mov.u64 	%rd296, 0;
	mov.u64 	%rd868, %rd296;
	mov.f32 	%f3718, %f3719;
	mov.f32 	%f3717, %f3719;
	mov.f32 	%f3716, %f3719;

BB1_382:
	ld.global.u32 	%r1181, [dataRenderer+160];
	// inline asm
	call (%rd298), _rt_buffer_get_id_64, (%r1181, %r475, %r1179, %rd868, %rd296, %rd296, %rd296);
	// inline asm
	ld.u32 	%rd305, [%rd298];
	mov.u64 	%rd310, buf_light_sample_L;
	cvta.global.u64 	%rd304, %rd310;
	mov.u32 	%r1185, 4;
	// inline asm
	call (%rd303), _rt_buffer_get_64, (%rd304, %r475, %r1185, %rd305, %rd296, %rd296, %rd296);
	// inline asm
	ld.u32 	%r1186, [%rd303];
	// inline asm
	call (%rd309), _rt_callable_program_from_id_64, (%r1186);
	// inline asm
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd298;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_15 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd309, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_15;
	
	//{
	}// Callseq End 15
	ld.local.v4.f32 	{%f1900, %f1901, %f1902, %f1903}, [%rd2+52];
	mul.f32 	%f1905, %f1901, 0f3F170A3D;
	fma.rn.f32 	%f1907, %f1900, 0f3E99999A, %f1905;
	fma.rn.f32 	%f1909, %f1902, 0f3DE147AE, %f1907;
	fma.rn.f32 	%f1911, %f1903, 0f00000000, %f1909;
	setp.le.f32	%p253, %f1911, 0f358637BD;
	@%p253 bra 	BB1_387;

	ld.local.f32 	%f1912, [%rd2+36];
	setp.le.f32	%p254, %f1912, 0f3A83126F;
	@%p254 bra 	BB1_387;

	ld.local.v2.f32 	{%f1913, %f1914}, [%rd2+12];
	mul.f32 	%f1917, %f1914, %f1914;
	fma.rn.f32 	%f1918, %f1913, %f1913, %f1917;
	ld.local.f32 	%f1919, [%rd2+20];
	fma.rn.f32 	%f1920, %f1919, %f1919, %f1918;
	sqrt.rn.f32 	%f395, %f1920;
	rcp.rn.f32 	%f1921, %f395;
	mul.f32 	%f396, %f1921, %f1913;
	mul.f32 	%f397, %f1921, %f1914;
	mul.f32 	%f398, %f1921, %f1919;
	ld.local.v4.f32 	{%f1922, %f1923, %f1924, %f1925}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f396, %f397};
	st.local.f32 	[%rd2+20], %f398;
	ld.local.f32 	%f1926, [%rd2+16];
	mul.f32 	%f1928, %f1926, %f1923;
	fma.rn.f32 	%f1930, %f396, %f1922, %f1928;
	ld.local.f32 	%f1932, [%rd2+20];
	fma.rn.f32 	%f399, %f1932, %f1924, %f1930;
	setp.leu.f32	%p255, %f399, 0f00000000;
	@%p255 bra 	BB1_387;

	ld.global.f32 	%f1939, [dataRenderer+8];
	ld.local.f32 	%f1935, [%rd2+32];
	ld.local.f32 	%f1934, [%rd2+28];
	ld.local.f32 	%f1933, [%rd2+24];
	mov.u16 	%rs8, 1;
	st.local.u8 	[%rd79], %rs8;
	ld.global.u32 	%r1187, [topObject];
	mov.u32 	%r1188, 2;
	// inline asm
	call _rt_trace_64, (%r1187, %f1933, %f1934, %f1935, %f396, %f397, %f398, %r1188, %f1939, %f395, %rd297, %r475);
	// inline asm
	ld.local.u8 	%rs9, [%rd79];
	setp.eq.s16	%p256, %rs9, 0;
	@%p256 bra 	BB1_387;

	mov.u64 	%rd321, buf_lm_F;
	cvta.global.u64 	%rd315, %rd321;
	mov.u64 	%rd319, 0;
	// inline asm
	call (%rd314), _rt_buffer_get_64, (%rd315, %r475, %r1185, %rd319, %rd319, %rd319, %rd319);
	// inline asm
	ld.u32 	%r1192, [%rd314];
	// inline asm
	call (%rd320), _rt_callable_program_from_id_64, (%r1192);
	// inline asm
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_16 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd320, 
	(
	param0, 
	param1
	)
	, prototype_16;
	
	//{
	}// Callseq End 16
	ld.local.v2.f32 	{%f1941, %f1942}, [%rd2+36];
	ld.local.v4.f32 	{%f1945, %f1946, %f1947, %f1948}, [%rd2+52];
	mul.f32 	%f1950, %f1942, %f1945;
	mul.f32 	%f1952, %f1942, %f1946;
	mul.f32 	%f1954, %f1942, %f1947;
	mul.f32 	%f1956, %f1942, %f1948;
	mul.f32 	%f1957, %f399, %f1950;
	mul.f32 	%f1958, %f399, %f1952;
	mul.f32 	%f1959, %f399, %f1954;
	mul.f32 	%f1960, %f399, %f1956;
	rcp.rn.f32 	%f1961, %f1941;
	fma.rn.f32 	%f3716, %f1957, %f1961, %f3716;
	fma.rn.f32 	%f3717, %f1958, %f1961, %f3717;
	fma.rn.f32 	%f3718, %f1959, %f1961, %f3718;
	fma.rn.f32 	%f3719, %f1960, %f1961, %f3719;

BB1_387:
	add.s64 	%rd868, %rd868, 1;
	add.s32 	%r1699, %r1699, 1;
	setp.lt.u32	%p257, %r1699, %r437;
	@%p257 bra 	BB1_382;

BB1_388:
	st.local.v4.f32 	[%rd2+52], {%f3716, %f3717, %f3718, %f3719};
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u64 	%rd331, buf_lm_sample_F;
	cvta.global.u64 	%rd325, %rd331;
	mov.u32 	%r1194, 4;
	mov.u64 	%rd329, 0;
	// inline asm
	call (%rd324), _rt_buffer_get_64, (%rd325, %r475, %r1194, %rd329, %rd329, %rd329, %rd329);
	// inline asm
	ld.u32 	%r1195, [%rd324];
	// inline asm
	call (%rd330), _rt_callable_program_from_id_64, (%r1195);
	// inline asm
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_17 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd330, 
	(
	param0, 
	param1
	)
	, prototype_17;
	
	//{
	}// Callseq End 17
	mov.u32 	%r1196, 0;
	st.global.u32 	[prdR+80], %r1196;
	ld.global.u32 	%r1197, [dataRenderer+164];
	st.global.u32 	[prdR+4], %r1197;
	bra.uni 	BB1_558;

BB1_34:
	setp.eq.s32	%p9, %r479, 13;
	@%p9 bra 	BB1_549;
	bra.uni 	BB1_35;

BB1_549:
	mov.f32 	%f3817, 0f00000000;
	ld.global.u32 	%r1535, [dataRenderer+160];
	mov.u32 	%r1537, 176;
	// inline asm
	call (%rd796, %rd797, %rd798, %rd799), _rt_buffer_get_id_size_64, (%r1535, %r475, %r1537);
	// inline asm
	cvt.u32.u64	%r470, %rd796;
	setp.eq.s32	%p436, %r470, 0;
	mov.f32 	%f3816, %f3817;
	mov.f32 	%f3815, %f3817;
	mov.f32 	%f3814, %f3817;
	@%p436 bra 	BB1_557;

	add.u64 	%rd801, %SP, 0;
	cvta.to.local.u64 	%rd102, %rd801;
	mov.f32 	%f3817, 0f00000000;
	mov.u32 	%r1710, 0;
	mov.u64 	%rd875, %rd109;
	mov.f32 	%f3816, %f3817;
	mov.f32 	%f3815, %f3817;
	mov.f32 	%f3814, %f3817;

BB1_551:
	ld.global.u32 	%r1539, [dataRenderer+160];
	// inline asm
	call (%rd802), _rt_buffer_get_id_64, (%r1539, %r475, %r1537, %rd875, %rd109, %rd109, %rd109);
	// inline asm
	ld.u32 	%rd809, [%rd802];
	mov.u64 	%rd814, buf_light_sample_L;
	cvta.global.u64 	%rd808, %rd814;
	mov.u32 	%r1543, 4;
	// inline asm
	call (%rd807), _rt_buffer_get_64, (%rd808, %r475, %r1543, %rd809, %rd109, %rd109, %rd109);
	// inline asm
	ld.u32 	%r1544, [%rd807];
	// inline asm
	call (%rd813), _rt_callable_program_from_id_64, (%r1544);
	// inline asm
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd802;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_63 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd813, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_63;
	
	//{
	}// Callseq End 63
	ld.local.v4.f32 	{%f3477, %f3478, %f3479, %f3480}, [%rd2+52];
	mul.f32 	%f3482, %f3478, 0f3F170A3D;
	fma.rn.f32 	%f3484, %f3477, 0f3E99999A, %f3482;
	fma.rn.f32 	%f3486, %f3479, 0f3DE147AE, %f3484;
	fma.rn.f32 	%f3488, %f3480, 0f00000000, %f3486;
	setp.le.f32	%p437, %f3488, 0f358637BD;
	@%p437 bra 	BB1_556;

	ld.local.f32 	%f3489, [%rd2+36];
	setp.le.f32	%p438, %f3489, 0f3A83126F;
	@%p438 bra 	BB1_556;

	ld.local.v2.f32 	{%f3490, %f3491}, [%rd2+12];
	mul.f32 	%f3494, %f3491, %f3491;
	fma.rn.f32 	%f3495, %f3490, %f3490, %f3494;
	ld.local.f32 	%f3496, [%rd2+20];
	fma.rn.f32 	%f3497, %f3496, %f3496, %f3495;
	sqrt.rn.f32 	%f633, %f3497;
	rcp.rn.f32 	%f3498, %f633;
	mul.f32 	%f634, %f3498, %f3490;
	mul.f32 	%f635, %f3498, %f3491;
	mul.f32 	%f636, %f3498, %f3496;
	ld.local.v4.f32 	{%f3499, %f3500, %f3501, %f3502}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f634, %f635};
	st.local.f32 	[%rd2+20], %f636;
	ld.local.f32 	%f3503, [%rd2+16];
	mul.f32 	%f3505, %f3503, %f3500;
	fma.rn.f32 	%f3507, %f634, %f3499, %f3505;
	ld.local.f32 	%f3509, [%rd2+20];
	fma.rn.f32 	%f637, %f3509, %f3501, %f3507;
	setp.leu.f32	%p439, %f637, 0f00000000;
	@%p439 bra 	BB1_556;

	ld.global.f32 	%f3516, [dataRenderer+8];
	ld.local.f32 	%f3512, [%rd2+32];
	ld.local.f32 	%f3511, [%rd2+28];
	ld.local.f32 	%f3510, [%rd2+24];
	mov.u16 	%rs40, 1;
	st.local.u8 	[%rd102], %rs40;
	ld.global.u32 	%r1545, [topObject];
	mov.u32 	%r1546, 2;
	// inline asm
	call _rt_trace_64, (%r1545, %f3510, %f3511, %f3512, %f634, %f635, %f636, %r1546, %f3516, %f633, %rd801, %r475);
	// inline asm
	ld.local.u8 	%rs41, [%rd102];
	setp.eq.s16	%p440, %rs41, 0;
	@%p440 bra 	BB1_556;

	mov.u64 	%rd825, buf_lm_F;
	cvta.global.u64 	%rd819, %rd825;
	mov.u64 	%rd823, 0;
	// inline asm
	call (%rd818), _rt_buffer_get_64, (%rd819, %r475, %r1543, %rd823, %rd823, %rd823, %rd823);
	// inline asm
	ld.u32 	%r1550, [%rd818];
	// inline asm
	call (%rd824), _rt_callable_program_from_id_64, (%r1550);
	// inline asm
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_64 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd824, 
	(
	param0, 
	param1
	)
	, prototype_64;
	
	//{
	}// Callseq End 64
	ld.local.v2.f32 	{%f3518, %f3519}, [%rd2+36];
	ld.local.v4.f32 	{%f3522, %f3523, %f3524, %f3525}, [%rd2+52];
	mul.f32 	%f3527, %f3519, %f3522;
	mul.f32 	%f3529, %f3519, %f3523;
	mul.f32 	%f3531, %f3519, %f3524;
	mul.f32 	%f3533, %f3519, %f3525;
	mul.f32 	%f3534, %f637, %f3527;
	mul.f32 	%f3535, %f637, %f3529;
	mul.f32 	%f3536, %f637, %f3531;
	mul.f32 	%f3537, %f637, %f3533;
	rcp.rn.f32 	%f3538, %f3518;
	fma.rn.f32 	%f3814, %f3534, %f3538, %f3814;
	fma.rn.f32 	%f3815, %f3535, %f3538, %f3815;
	fma.rn.f32 	%f3816, %f3536, %f3538, %f3816;
	fma.rn.f32 	%f3817, %f3537, %f3538, %f3817;

BB1_556:
	add.s64 	%rd875, %rd875, 1;
	add.s32 	%r1710, %r1710, 1;
	setp.lt.u32	%p441, %r1710, %r470;
	@%p441 bra 	BB1_551;

BB1_557:
	st.local.v4.f32 	[%rd2+52], {%f3814, %f3815, %f3816, %f3817};
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u64 	%rd835, buf_lm_sample_F;
	cvta.global.u64 	%rd829, %rd835;
	mov.u32 	%r1552, 4;
	mov.u64 	%rd833, 0;
	// inline asm
	call (%rd828), _rt_buffer_get_64, (%rd829, %r475, %r1552, %rd833, %rd833, %rd833, %rd833);
	// inline asm
	ld.u32 	%r1553, [%rd828];
	// inline asm
	call (%rd834), _rt_callable_program_from_id_64, (%r1553);
	// inline asm
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_65 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd834, 
	(
	param0, 
	param1
	)
	, prototype_65;
	
	//{
	}// Callseq End 65
	mov.u32 	%r1554, 0;
	st.global.u32 	[prdR+80], %r1554;
	ld.global.u32 	%r1555, [dataRenderer+164];
	st.global.u32 	[prdR+4], %r1555;
	bra.uni 	BB1_558;

BB1_519:
	add.u64 	%rd670, %SP, 28;
	cvta.to.local.u64 	%rd671, %rd670;
	ld.global.f32 	%f3210, [dRay+12];
	ld.global.f32 	%f3211, [dRay+16];
	ld.global.f32 	%f3212, [dRay+20];
	st.local.f32 	[%rd671+8], %f3212;
	st.local.f32 	[%rd671+4], %f3211;
	st.local.f32 	[%rd671], %f3210;
	ld.global.u32 	%r1453, [prdR+4];
	setp.eq.s32	%p420, %r1453, 0;
	@%p420 bra 	BB1_521;

	ld.global.u32 	%r1455, [dataRenderer+188];
	ld.global.u32 	%r1456, [dataRenderer+160];
	ld.global.f32 	%f3213, [prdR+80];
	ld.global.u32 	%r1454, [GetEnvRadiance];
	// inline asm
	call (%rd672), _rt_callable_program_from_id_64, (%r1454);
	// inline asm
	add.u64 	%rd674, %SP, 0;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1455;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1456;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd670;
	.param .b32 param3;
	st.param.f32	[param3+0], %f3213;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd674;
	.param .b32 retval0;
	prototype_54 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _, .param .b64 _, .param .b32 _, .param .b64 _);
	call (retval0), 
	%rd672, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	)
	, prototype_54;
	ld.param.f32	%f3214, [retval0+0];
	
	//{
	}// Callseq End 54
	st.global.v4.f32 	[prdR+96], {%f3214, %f3214, %f3214, %f3214};
	cvta.to.local.u64 	%rd675, %rd674;
	ld.local.v4.f32 	{%f3215, %f3216, %f3217, %f3218}, [%rd675];
	st.global.v4.f32 	[prdR+48], {%f3215, %f3216, %f3217, %f3218};
	bra.uni 	BB1_526;

BB1_4:
	setp.eq.s32	%p22, %r479, 3;
	@%p22 bra 	BB1_5;
	bra.uni 	BB1_33;

BB1_5:
	mov.u32 	%r1574, 7937;
	add.s64 	%rd604, %rd105, 144;
	ld.global.v2.f32 	{%f2937, %f2938}, [aInset];
	ld.global.v2.f32 	{%f2941, %f2942}, [aInset+8];
	ld.global.v2.f32 	{%f2945, %f2946}, [aInset+16];
	ld.global.v2.f32 	{%f2949, %f2950}, [aInset+24];
	ld.global.v2.f32 	{%f2953, %f2954}, [aInset+32];
	ld.global.v2.f32 	{%f2957, %f2958}, [aInset+40];
	ld.global.v2.f32 	{%f2961, %f2962}, [aInset+48];
	ld.global.v2.f32 	{%f2965, %f2966}, [aInset+56];
	ld.global.v2.f32 	{%f2969, %f2970}, [aInset+64];
	mov.b32 	 %r1402, %f2970;
	ld.global.u32 	%r1399, [GetTexture_normal];
	// inline asm
	call (%rd602), _rt_callable_program_from_id_64, (%r1399);
	// inline asm
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd604;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f2937;
	st.param.f32	[param1+4], %f2938;
	st.param.f32	[param1+8], %f2941;
	st.param.f32	[param1+12], %f2942;
	st.param.f32	[param1+16], %f2945;
	st.param.f32	[param1+20], %f2946;
	st.param.f32	[param1+24], %f2949;
	st.param.f32	[param1+28], %f2950;
	st.param.f32	[param1+32], %f2953;
	st.param.f32	[param1+36], %f2954;
	st.param.f32	[param1+40], %f2957;
	st.param.f32	[param1+44], %f2958;
	st.param.f32	[param1+48], %f2961;
	st.param.f32	[param1+52], %f2962;
	st.param.f32	[param1+56], %f2965;
	st.param.f32	[param1+60], %f2966;
	st.param.f32	[param1+64], %f2969;
	st.param.b32	[param1+68], %r1402;
	.param .align 4 .b8 retval0[12];
	prototype_46 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd602, 
	(
	param0, 
	param1
	)
	, prototype_46;
	ld.param.f32	%f2931, [retval0+0];
	ld.param.f32	%f2932, [retval0+4];
	ld.param.f32	%f2933, [retval0+8];
	
	//{
	}// Callseq End 46
	mov.f32 	%f2934, 0f00000000;
	// inline asm
	call (%f2927, %f2928, %f2929, %f2930), _rt_transform_tuple, (%r1574, %f2931, %f2932, %f2933, %f2934);
	// inline asm
	mul.f32 	%f2973, %f2928, %f2928;
	fma.rn.f32 	%f2974, %f2927, %f2927, %f2973;
	fma.rn.f32 	%f2975, %f2929, %f2929, %f2974;
	sqrt.rn.f32 	%f2976, %f2975;
	rcp.rn.f32 	%f2977, %f2976;
	mul.f32 	%f2978, %f2929, %f2977;
	mul.f32 	%f2979, %f2928, %f2977;
	mul.f32 	%f2980, %f2927, %f2977;
	st.local.v2.f32 	[%rd2+-12], {%f2980, %f2979};
	st.local.f32 	[%rd2+-4], %f2978;
	ld.f32 	%f2981, [%rd105+280];
	st.local.f32 	[%rd2+72], %f2981;
	ld.global.u32 	%r1401, [GetSample1];
	// inline asm
	call (%rd603), _rt_callable_program_from_id_64, (%r1401);
	// inline asm
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b32 retval0;
	prototype_47 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd603, 
	(
	param0
	)
	, prototype_47;
	ld.param.f32	%f586, [retval0+0];
	
	//{
	}// Callseq End 47
	ld.local.f32 	%f2982, [%rd2+-12];
	ld.local.f32 	%f2983, [%rd2];
	ld.local.f32 	%f2984, [%rd2+-8];
	ld.local.f32 	%f2985, [%rd2+4];
	mul.f32 	%f2986, %f2985, %f2984;
	fma.rn.f32 	%f2987, %f2983, %f2982, %f2986;
	ld.local.f32 	%f2988, [%rd2+-4];
	ld.local.f32 	%f2989, [%rd2+8];
	fma.rn.f32 	%f2990, %f2989, %f2988, %f2987;
	abs.f32 	%f2991, %f2990;
	ld.f32 	%f587, [%rd105+216];
	ld.f32 	%f588, [%rd105+212];
	sub.f32 	%f589, %f587, %f588;
	mov.f32 	%f2992, 0f3F800000;
	sub.f32 	%f2993, %f2992, %f2991;
	max.f32 	%f590, %f2934, %f2993;
	ld.f32 	%f591, [%rd105+208];
	mul.f32 	%f2994, %f591, 0f3F000000;
	cvt.rzi.f32.f32	%f2995, %f2994;
	fma.rn.f32 	%f2996, %f2995, 0fC0000000, %f591;
	abs.f32 	%f592, %f2996;
	abs.f32 	%f593, %f590;
	setp.lt.f32	%p383, %f593, 0f00800000;
	mul.f32 	%f2997, %f593, 0f4B800000;
	selp.f32	%f2998, 0fC3170000, 0fC2FE0000, %p383;
	selp.f32	%f2999, %f2997, %f593, %p383;
	mov.b32 	 %r1403, %f2999;
	and.b32  	%r1404, %r1403, 8388607;
	or.b32  	%r1405, %r1404, 1065353216;
	mov.b32 	 %f3000, %r1405;
	shr.u32 	%r1406, %r1403, 23;
	cvt.rn.f32.u32	%f3001, %r1406;
	add.f32 	%f3002, %f2998, %f3001;
	setp.gt.f32	%p384, %f3000, 0f3FB504F3;
	mul.f32 	%f3003, %f3000, 0f3F000000;
	add.f32 	%f3004, %f3002, 0f3F800000;
	selp.f32	%f3005, %f3003, %f3000, %p384;
	selp.f32	%f3006, %f3004, %f3002, %p384;
	add.f32 	%f3007, %f3005, 0fBF800000;
	add.f32 	%f2936, %f3005, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f2935,%f2936;
	// inline asm
	add.f32 	%f3008, %f3007, %f3007;
	mul.f32 	%f3009, %f2935, %f3008;
	mul.f32 	%f3010, %f3009, %f3009;
	mov.f32 	%f3011, 0f3C4CAF63;
	mov.f32 	%f3012, 0f3B18F0FE;
	fma.rn.f32 	%f3013, %f3012, %f3010, %f3011;
	mov.f32 	%f3014, 0f3DAAAABD;
	fma.rn.f32 	%f3015, %f3013, %f3010, %f3014;
	mul.rn.f32 	%f3016, %f3015, %f3010;
	mul.rn.f32 	%f3017, %f3016, %f3009;
	sub.f32 	%f3018, %f3007, %f3009;
	neg.f32 	%f3019, %f3009;
	add.f32 	%f3020, %f3018, %f3018;
	fma.rn.f32 	%f3021, %f3019, %f3007, %f3020;
	mul.rn.f32 	%f3022, %f2935, %f3021;
	add.f32 	%f3023, %f3017, %f3009;
	sub.f32 	%f3024, %f3009, %f3023;
	add.f32 	%f3025, %f3017, %f3024;
	add.f32 	%f3026, %f3022, %f3025;
	add.f32 	%f3027, %f3023, %f3026;
	sub.f32 	%f3028, %f3023, %f3027;
	add.f32 	%f3029, %f3026, %f3028;
	mov.f32 	%f3030, 0f3F317200;
	mul.rn.f32 	%f3031, %f3006, %f3030;
	mov.f32 	%f3032, 0f35BFBE8E;
	mul.rn.f32 	%f3033, %f3006, %f3032;
	add.f32 	%f3034, %f3031, %f3027;
	sub.f32 	%f3035, %f3031, %f3034;
	add.f32 	%f3036, %f3027, %f3035;
	add.f32 	%f3037, %f3029, %f3036;
	add.f32 	%f3038, %f3033, %f3037;
	add.f32 	%f3039, %f3034, %f3038;
	sub.f32 	%f3040, %f3034, %f3039;
	add.f32 	%f3041, %f3038, %f3040;
	abs.f32 	%f594, %f591;
	setp.gt.f32	%p385, %f594, 0f77F684DF;
	mul.f32 	%f3042, %f591, 0f39000000;
	selp.f32	%f3043, %f3042, %f591, %p385;
	mul.rn.f32 	%f3044, %f3043, %f3039;
	neg.f32 	%f3045, %f3044;
	fma.rn.f32 	%f3046, %f3043, %f3039, %f3045;
	fma.rn.f32 	%f3047, %f3043, %f3041, %f3046;
	fma.rn.f32 	%f3048, %f2934, %f3039, %f3047;
	add.rn.f32 	%f3049, %f3044, %f3048;
	neg.f32 	%f3050, %f3049;
	add.rn.f32 	%f3051, %f3044, %f3050;
	add.rn.f32 	%f3052, %f3051, %f3048;
	mov.b32 	 %r1407, %f3049;
	setp.eq.s32	%p386, %r1407, 1118925336;
	add.s32 	%r1408, %r1407, -1;
	mov.b32 	 %f3053, %r1408;
	add.f32 	%f3054, %f3052, 0f37000000;
	selp.f32	%f3055, %f3053, %f3049, %p386;
	selp.f32	%f595, %f3054, %f3052, %p386;
	mul.f32 	%f3056, %f3055, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f3057, %f3056;
	mov.f32 	%f3058, 0fBF317200;
	fma.rn.f32 	%f3059, %f3057, %f3058, %f3055;
	mov.f32 	%f3060, 0fB5BFBE8E;
	fma.rn.f32 	%f3061, %f3057, %f3060, %f3059;
	mul.f32 	%f3062, %f3061, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f3063, %f3062;
	add.f32 	%f3064, %f3057, 0f00000000;
	ex2.approx.f32 	%f3065, %f3064;
	mul.f32 	%f3066, %f3063, %f3065;
	setp.lt.f32	%p387, %f3055, 0fC2D20000;
	selp.f32	%f3067, 0f00000000, %f3066, %p387;
	setp.gt.f32	%p388, %f3055, 0f42D20000;
	selp.f32	%f3795, 0f7F800000, %f3067, %p388;
	setp.eq.f32	%p389, %f3795, 0f7F800000;
	@%p389 bra 	BB1_7;

	fma.rn.f32 	%f3795, %f3795, %f595, %f3795;

BB1_7:
	setp.lt.f32	%p390, %f590, 0f00000000;
	setp.eq.f32	%p391, %f592, 0f3F800000;
	and.pred  	%p5, %p390, %p391;
	mov.b32 	 %r1409, %f3795;
	xor.b32  	%r1410, %r1409, -2147483648;
	mov.b32 	 %f3068, %r1410;
	selp.f32	%f3797, %f3068, %f3795, %p5;
	setp.eq.f32	%p392, %f590, 0f00000000;
	@%p392 bra 	BB1_494;
	bra.uni 	BB1_8;

BB1_494:
	add.f32 	%f3070, %f590, %f590;
	mov.b32 	 %r1411, %f3070;
	selp.b32	%r1412, %r1411, 0, %p391;
	or.b32  	%r1413, %r1412, 2139095040;
	setp.lt.f32	%p396, %f591, 0f00000000;
	selp.b32	%r1414, %r1413, %r1412, %p396;
	mov.b32 	 %f3797, %r1414;
	bra.uni 	BB1_495;

BB1_389:
	ld.global.u32 	%r1198, [GetSample2];
	// inline asm
	call (%rd334), _rt_callable_program_from_id_64, (%r1198);
	// inline asm
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .align 8 .b8 retval0[8];
	prototype_18 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd334, 
	(
	param0
	)
	, prototype_18;
	ld.param.f32	%f412, [retval0+0];
	ld.param.f32	%f413, [retval0+4];
	
	//{
	}// Callseq End 18
	ld.f32 	%f1962, [%rd105+256];
	setp.lt.f32	%p258, %f412, %f1962;
	@%p258 bra 	BB1_400;
	bra.uni 	BB1_390;

BB1_400:
	ld.local.v4.f32 	{%f2035, %f2036, %f2037, %f2038}, [%rd2+-12];
	ld.local.v2.f32 	{%f2043, %f2044}, [%rd2+4];
	mul.f32 	%f2046, %f2043, %f2036;
	fma.rn.f32 	%f2047, %f2038, %f2035, %f2046;
	fma.rn.f32 	%f2049, %f2044, %f2037, %f2047;
	abs.f32 	%f2050, %f2049;
	ld.v4.f32 	{%f2051, %f2052, %f2053, %f2054}, [%rd105+192];
	sub.f32 	%f438, %f2053, %f2052;
	mov.f32 	%f2055, 0f3F800000;
	sub.f32 	%f2056, %f2055, %f2050;
	mov.f32 	%f3746, 0f00000000;
	max.f32 	%f439, %f3746, %f2056;
	mul.f32 	%f2058, %f2051, 0f3F000000;
	cvt.rzi.f32.f32	%f2059, %f2058;
	fma.rn.f32 	%f2060, %f2059, 0fC0000000, %f2051;
	abs.f32 	%f441, %f2060;
	abs.f32 	%f442, %f439;
	setp.lt.f32	%p266, %f442, 0f00800000;
	mul.f32 	%f2061, %f442, 0f4B800000;
	selp.f32	%f2062, 0fC3170000, 0fC2FE0000, %p266;
	selp.f32	%f2063, %f2061, %f442, %p266;
	mov.b32 	 %r1221, %f2063;
	and.b32  	%r1222, %r1221, 8388607;
	or.b32  	%r1223, %r1222, 1065353216;
	mov.b32 	 %f2064, %r1223;
	shr.u32 	%r1224, %r1221, 23;
	cvt.rn.f32.u32	%f2065, %r1224;
	add.f32 	%f2066, %f2062, %f2065;
	setp.gt.f32	%p267, %f2064, 0f3FB504F3;
	mul.f32 	%f2067, %f2064, 0f3F000000;
	add.f32 	%f2068, %f2066, 0f3F800000;
	selp.f32	%f2069, %f2067, %f2064, %p267;
	selp.f32	%f2070, %f2068, %f2066, %p267;
	add.f32 	%f2071, %f2069, 0fBF800000;
	add.f32 	%f2034, %f2069, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f2033,%f2034;
	// inline asm
	add.f32 	%f2072, %f2071, %f2071;
	mul.f32 	%f2073, %f2033, %f2072;
	mul.f32 	%f2074, %f2073, %f2073;
	mov.f32 	%f2075, 0f3C4CAF63;
	mov.f32 	%f2076, 0f3B18F0FE;
	fma.rn.f32 	%f2077, %f2076, %f2074, %f2075;
	mov.f32 	%f2078, 0f3DAAAABD;
	fma.rn.f32 	%f2079, %f2077, %f2074, %f2078;
	mul.rn.f32 	%f2080, %f2079, %f2074;
	mul.rn.f32 	%f2081, %f2080, %f2073;
	sub.f32 	%f2082, %f2071, %f2073;
	neg.f32 	%f2083, %f2073;
	add.f32 	%f2084, %f2082, %f2082;
	fma.rn.f32 	%f2085, %f2083, %f2071, %f2084;
	mul.rn.f32 	%f2086, %f2033, %f2085;
	add.f32 	%f2087, %f2081, %f2073;
	sub.f32 	%f2088, %f2073, %f2087;
	add.f32 	%f2089, %f2081, %f2088;
	add.f32 	%f2090, %f2086, %f2089;
	add.f32 	%f2091, %f2087, %f2090;
	sub.f32 	%f2092, %f2087, %f2091;
	add.f32 	%f2093, %f2090, %f2092;
	mov.f32 	%f2094, 0f3F317200;
	mul.rn.f32 	%f2095, %f2070, %f2094;
	mov.f32 	%f2096, 0f35BFBE8E;
	mul.rn.f32 	%f2097, %f2070, %f2096;
	add.f32 	%f2098, %f2095, %f2091;
	sub.f32 	%f2099, %f2095, %f2098;
	add.f32 	%f2100, %f2091, %f2099;
	add.f32 	%f2101, %f2093, %f2100;
	add.f32 	%f2102, %f2097, %f2101;
	add.f32 	%f2103, %f2098, %f2102;
	sub.f32 	%f2104, %f2098, %f2103;
	add.f32 	%f2105, %f2102, %f2104;
	abs.f32 	%f443, %f2051;
	setp.gt.f32	%p268, %f443, 0f77F684DF;
	mul.f32 	%f2106, %f2051, 0f39000000;
	selp.f32	%f2107, %f2106, %f2051, %p268;
	mul.rn.f32 	%f2108, %f2107, %f2103;
	neg.f32 	%f2109, %f2108;
	fma.rn.f32 	%f2110, %f2107, %f2103, %f2109;
	fma.rn.f32 	%f2111, %f2107, %f2105, %f2110;
	fma.rn.f32 	%f2112, %f3746, %f2103, %f2111;
	add.rn.f32 	%f2113, %f2108, %f2112;
	neg.f32 	%f2114, %f2113;
	add.rn.f32 	%f2115, %f2108, %f2114;
	add.rn.f32 	%f2116, %f2115, %f2112;
	mov.b32 	 %r1225, %f2113;
	setp.eq.s32	%p269, %r1225, 1118925336;
	add.s32 	%r1226, %r1225, -1;
	mov.b32 	 %f2117, %r1226;
	add.f32 	%f2118, %f2116, 0f37000000;
	selp.f32	%f2119, %f2117, %f2113, %p269;
	selp.f32	%f444, %f2118, %f2116, %p269;
	mul.f32 	%f2120, %f2119, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f2121, %f2120;
	mov.f32 	%f2122, 0fBF317200;
	fma.rn.f32 	%f2123, %f2121, %f2122, %f2119;
	mov.f32 	%f2124, 0fB5BFBE8E;
	fma.rn.f32 	%f2125, %f2121, %f2124, %f2123;
	mul.f32 	%f2126, %f2125, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f2127, %f2126;
	add.f32 	%f2128, %f2121, 0f00000000;
	ex2.approx.f32 	%f2129, %f2128;
	mul.f32 	%f2130, %f2127, %f2129;
	setp.lt.f32	%p270, %f2119, 0fC2D20000;
	selp.f32	%f2131, 0f00000000, %f2130, %p270;
	setp.gt.f32	%p271, %f2119, 0f42D20000;
	selp.f32	%f3736, 0f7F800000, %f2131, %p271;
	setp.eq.f32	%p272, %f3736, 0f7F800000;
	@%p272 bra 	BB1_402;

	fma.rn.f32 	%f3736, %f3736, %f444, %f3736;

BB1_402:
	setp.lt.f32	%p273, %f439, 0f00000000;
	setp.eq.f32	%p274, %f441, 0f3F800000;
	and.pred  	%p2, %p273, %p274;
	mov.b32 	 %r1227, %f3736;
	xor.b32  	%r1228, %r1227, -2147483648;
	mov.b32 	 %f2132, %r1228;
	selp.f32	%f3738, %f2132, %f3736, %p2;
	setp.eq.f32	%p275, %f439, 0f00000000;
	@%p275 bra 	BB1_405;
	bra.uni 	BB1_403;

BB1_405:
	add.f32 	%f2134, %f439, %f439;
	mov.b32 	 %r1229, %f2134;
	selp.b32	%r1230, %r1229, 0, %p274;
	or.b32  	%r1231, %r1230, 2139095040;
	setp.lt.f32	%p279, %f2051, 0f00000000;
	selp.b32	%r1232, %r1231, %r1230, %p279;
	mov.b32 	 %f3738, %r1232;
	bra.uni 	BB1_406;

BB1_482:
	ld.global.u32 	%r1366, [GetSample1];
	// inline asm
	call (%rd545), _rt_callable_program_from_id_64, (%r1366);
	// inline asm
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b32 retval0;
	prototype_39 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd545, 
	(
	param0
	)
	, prototype_39;
	ld.param.f32	%f2746, [retval0+0];
	
	//{
	}// Callseq End 39
	ld.f32 	%f2747, [%rd105+256];
	setp.lt.f32	%p375, %f2746, %f2747;
	@%p375 bra 	BB1_492;
	bra.uni 	BB1_483;

BB1_492:
	mov.u32 	%r1573, 7937;
	ld.global.v2.f32 	{%f2878, %f2879}, [aInset];
	ld.global.v2.f32 	{%f2882, %f2883}, [aInset+8];
	ld.global.v2.f32 	{%f2886, %f2887}, [aInset+16];
	ld.global.v2.f32 	{%f2890, %f2891}, [aInset+24];
	ld.global.v2.f32 	{%f2894, %f2895}, [aInset+32];
	ld.global.v2.f32 	{%f2898, %f2899}, [aInset+40];
	ld.global.v2.f32 	{%f2902, %f2903}, [aInset+48];
	ld.global.v2.f32 	{%f2906, %f2907}, [aInset+56];
	ld.global.v2.f32 	{%f2910, %f2911}, [aInset+64];
	mov.b32 	 %r1396, %f2911;
	ld.global.u32 	%r1391, [GetTexture_normal];
	// inline asm
	call (%rd591), _rt_callable_program_from_id_64, (%r1391);
	// inline asm
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd105;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f2878;
	st.param.f32	[param1+4], %f2879;
	st.param.f32	[param1+8], %f2882;
	st.param.f32	[param1+12], %f2883;
	st.param.f32	[param1+16], %f2886;
	st.param.f32	[param1+20], %f2887;
	st.param.f32	[param1+24], %f2890;
	st.param.f32	[param1+28], %f2891;
	st.param.f32	[param1+32], %f2894;
	st.param.f32	[param1+36], %f2895;
	st.param.f32	[param1+40], %f2898;
	st.param.f32	[param1+44], %f2899;
	st.param.f32	[param1+48], %f2902;
	st.param.f32	[param1+52], %f2903;
	st.param.f32	[param1+56], %f2906;
	st.param.f32	[param1+60], %f2907;
	st.param.f32	[param1+64], %f2910;
	st.param.b32	[param1+68], %r1396;
	.param .align 4 .b8 retval0[12];
	prototype_44 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd591, 
	(
	param0, 
	param1
	)
	, prototype_44;
	ld.param.f32	%f2874, [retval0+0];
	ld.param.f32	%f2875, [retval0+4];
	ld.param.f32	%f2876, [retval0+8];
	
	//{
	}// Callseq End 44
	mov.f32 	%f2877, 0f00000000;
	// inline asm
	call (%f2870, %f2871, %f2872, %f2873), _rt_transform_tuple, (%r1573, %f2874, %f2875, %f2876, %f2877);
	// inline asm
	mul.f32 	%f2914, %f2871, %f2871;
	fma.rn.f32 	%f2915, %f2870, %f2870, %f2914;
	fma.rn.f32 	%f2916, %f2872, %f2872, %f2915;
	sqrt.rn.f32 	%f2917, %f2916;
	rcp.rn.f32 	%f2918, %f2917;
	mul.f32 	%f2919, %f2872, %f2918;
	mul.f32 	%f2920, %f2871, %f2918;
	mul.f32 	%f2921, %f2870, %f2918;
	st.local.v2.f32 	[%rd2+-12], {%f2921, %f2920};
	st.local.f32 	[%rd2+-4], %f2919;
	mov.u64 	%rd599, buf_lm_sample_F;
	cvta.global.u64 	%rd593, %rd599;
	mov.u32 	%r1394, 4;
	mov.u64 	%rd594, 2;
	mov.u64 	%rd597, 0;
	// inline asm
	call (%rd592), _rt_buffer_get_64, (%rd593, %r475, %r1394, %rd594, %rd597, %rd597, %rd597);
	// inline asm
	ld.u32 	%r1395, [%rd592];
	// inline asm
	call (%rd598), _rt_callable_program_from_id_64, (%r1395);
	// inline asm
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_45 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd598, 
	(
	param0, 
	param1
	)
	, prototype_45;
	
	//{
	}// Callseq End 45
	mov.u32 	%r1397, 0;
	st.local.u32 	[%rd2+64], %r1397;
	st.local.u32 	[%rd2+60], %r1397;
	st.local.u32 	[%rd2+56], %r1397;
	st.local.u32 	[%rd2+52], %r1397;
	ld.f32 	%f2922, [%rd105];
	ld.f32 	%f2923, [%rd105+4];
	ld.f32 	%f2924, [%rd105+8];
	ld.f32 	%f2925, [%rd105+12];
	st.global.f32 	[prdR+60], %f2925;
	st.global.f32 	[prdR+56], %f2924;
	st.global.f32 	[prdR+52], %f2923;
	st.global.f32 	[prdR+48], %f2922;
	ld.global.f32 	%f2926, [prdR+80];
	setp.leu.f32	%p382, %f2926, 0f3F800000;
	@%p382 bra 	BB1_558;

	mov.u32 	%r1398, 1065353216;
	st.global.u32 	[prdR+80], %r1398;
	bra.uni 	BB1_558;

BB1_12:
	setp.eq.s32	%p19, %r479, 6;
	@%p19 bra 	BB1_13;
	bra.uni 	BB1_33;

BB1_13:
	mov.u32 	%r1570, 7937;
	add.s64 	%rd432, %rd105, 144;
	ld.global.v2.f32 	{%f2279, %f2280}, [aInset];
	ld.global.v2.f32 	{%f2283, %f2284}, [aInset+8];
	ld.global.v2.f32 	{%f2287, %f2288}, [aInset+16];
	ld.global.v2.f32 	{%f2291, %f2292}, [aInset+24];
	ld.global.v2.f32 	{%f2295, %f2296}, [aInset+32];
	ld.global.v2.f32 	{%f2299, %f2300}, [aInset+40];
	ld.global.v2.f32 	{%f2303, %f2304}, [aInset+48];
	ld.global.v2.f32 	{%f2307, %f2308}, [aInset+56];
	ld.global.v2.f32 	{%f2311, %f2312}, [aInset+64];
	mov.b32 	 %r1271, %f2312;
	ld.global.u32 	%r1269, [GetTexture_normal];
	// inline asm
	call (%rd431), _rt_callable_program_from_id_64, (%r1269);
	// inline asm
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd432;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f2279;
	st.param.f32	[param1+4], %f2280;
	st.param.f32	[param1+8], %f2283;
	st.param.f32	[param1+12], %f2284;
	st.param.f32	[param1+16], %f2287;
	st.param.f32	[param1+20], %f2288;
	st.param.f32	[param1+24], %f2291;
	st.param.f32	[param1+28], %f2292;
	st.param.f32	[param1+32], %f2295;
	st.param.f32	[param1+36], %f2296;
	st.param.f32	[param1+40], %f2299;
	st.param.f32	[param1+44], %f2300;
	st.param.f32	[param1+48], %f2303;
	st.param.f32	[param1+52], %f2304;
	st.param.f32	[param1+56], %f2307;
	st.param.f32	[param1+60], %f2308;
	st.param.f32	[param1+64], %f2311;
	st.param.b32	[param1+68], %r1271;
	.param .align 4 .b8 retval0[12];
	prototype_27 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd431, 
	(
	param0, 
	param1
	)
	, prototype_27;
	ld.param.f32	%f2273, [retval0+0];
	ld.param.f32	%f2274, [retval0+4];
	ld.param.f32	%f2275, [retval0+8];
	
	//{
	}// Callseq End 27
	mov.f32 	%f3762, 0f00000000;
	// inline asm
	call (%f2269, %f2270, %f2271, %f2272), _rt_transform_tuple, (%r1570, %f2273, %f2274, %f2275, %f3762);
	// inline asm
	mul.f32 	%f2315, %f2270, %f2270;
	fma.rn.f32 	%f2316, %f2269, %f2269, %f2315;
	fma.rn.f32 	%f2317, %f2271, %f2271, %f2316;
	sqrt.rn.f32 	%f2318, %f2317;
	rcp.rn.f32 	%f2319, %f2318;
	mul.f32 	%f2320, %f2271, %f2319;
	mul.f32 	%f2321, %f2270, %f2319;
	mul.f32 	%f2322, %f2269, %f2319;
	st.local.v2.f32 	[%rd2+-12], {%f2322, %f2321};
	st.local.f32 	[%rd2+-4], %f2320;
	ld.f32 	%f477, [%rd105+216];
	ld.f32 	%f478, [%rd105+212];
	ld.local.f32 	%f2323, [%rd2];
	ld.local.f32 	%f2324, [%rd2+4];
	mul.f32 	%f2325, %f2324, %f2321;
	fma.rn.f32 	%f2326, %f2323, %f2322, %f2325;
	ld.local.f32 	%f2327, [%rd2+8];
	fma.rn.f32 	%f2328, %f2327, %f2320, %f2326;
	abs.f32 	%f2329, %f2328;
	mov.f32 	%f2330, 0f3F800000;
	sub.f32 	%f2331, %f2330, %f2329;
	max.f32 	%f479, %f3762, %f2331;
	ld.f32 	%f480, [%rd105+208];
	mul.f32 	%f2332, %f480, 0f3F000000;
	cvt.rzi.f32.f32	%f2333, %f2332;
	fma.rn.f32 	%f2334, %f2333, 0fC0000000, %f480;
	abs.f32 	%f481, %f2334;
	abs.f32 	%f482, %f479;
	setp.lt.f32	%p302, %f482, 0f00800000;
	mul.f32 	%f2335, %f482, 0f4B800000;
	selp.f32	%f2336, 0fC3170000, 0fC2FE0000, %p302;
	selp.f32	%f2337, %f2335, %f482, %p302;
	mov.b32 	 %r1272, %f2337;
	and.b32  	%r1273, %r1272, 8388607;
	or.b32  	%r1274, %r1273, 1065353216;
	mov.b32 	 %f2338, %r1274;
	shr.u32 	%r1275, %r1272, 23;
	cvt.rn.f32.u32	%f2339, %r1275;
	add.f32 	%f2340, %f2336, %f2339;
	setp.gt.f32	%p303, %f2338, 0f3FB504F3;
	mul.f32 	%f2341, %f2338, 0f3F000000;
	add.f32 	%f2342, %f2340, 0f3F800000;
	selp.f32	%f2343, %f2341, %f2338, %p303;
	selp.f32	%f2344, %f2342, %f2340, %p303;
	add.f32 	%f2345, %f2343, 0fBF800000;
	add.f32 	%f2278, %f2343, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f2277,%f2278;
	// inline asm
	add.f32 	%f2346, %f2345, %f2345;
	mul.f32 	%f2347, %f2277, %f2346;
	mul.f32 	%f2348, %f2347, %f2347;
	mov.f32 	%f2349, 0f3C4CAF63;
	mov.f32 	%f2350, 0f3B18F0FE;
	fma.rn.f32 	%f2351, %f2350, %f2348, %f2349;
	mov.f32 	%f2352, 0f3DAAAABD;
	fma.rn.f32 	%f2353, %f2351, %f2348, %f2352;
	mul.rn.f32 	%f2354, %f2353, %f2348;
	mul.rn.f32 	%f2355, %f2354, %f2347;
	sub.f32 	%f2356, %f2345, %f2347;
	neg.f32 	%f2357, %f2347;
	add.f32 	%f2358, %f2356, %f2356;
	fma.rn.f32 	%f2359, %f2357, %f2345, %f2358;
	mul.rn.f32 	%f2360, %f2277, %f2359;
	add.f32 	%f2361, %f2355, %f2347;
	sub.f32 	%f2362, %f2347, %f2361;
	add.f32 	%f2363, %f2355, %f2362;
	add.f32 	%f2364, %f2360, %f2363;
	add.f32 	%f2365, %f2361, %f2364;
	sub.f32 	%f2366, %f2361, %f2365;
	add.f32 	%f2367, %f2364, %f2366;
	mov.f32 	%f2368, 0f3F317200;
	mul.rn.f32 	%f2369, %f2344, %f2368;
	mov.f32 	%f2370, 0f35BFBE8E;
	mul.rn.f32 	%f2371, %f2344, %f2370;
	add.f32 	%f2372, %f2369, %f2365;
	sub.f32 	%f2373, %f2369, %f2372;
	add.f32 	%f2374, %f2365, %f2373;
	add.f32 	%f2375, %f2367, %f2374;
	add.f32 	%f2376, %f2371, %f2375;
	add.f32 	%f2377, %f2372, %f2376;
	sub.f32 	%f2378, %f2372, %f2377;
	add.f32 	%f2379, %f2376, %f2378;
	abs.f32 	%f483, %f480;
	setp.gt.f32	%p304, %f483, 0f77F684DF;
	mul.f32 	%f2380, %f480, 0f39000000;
	selp.f32	%f2381, %f2380, %f480, %p304;
	mul.rn.f32 	%f2382, %f2381, %f2377;
	neg.f32 	%f2383, %f2382;
	fma.rn.f32 	%f2384, %f2381, %f2377, %f2383;
	fma.rn.f32 	%f2385, %f2381, %f2379, %f2384;
	fma.rn.f32 	%f2386, %f3762, %f2377, %f2385;
	add.rn.f32 	%f2387, %f2382, %f2386;
	neg.f32 	%f2388, %f2387;
	add.rn.f32 	%f2389, %f2382, %f2388;
	add.rn.f32 	%f2390, %f2389, %f2386;
	mov.b32 	 %r1276, %f2387;
	setp.eq.s32	%p305, %r1276, 1118925336;
	add.s32 	%r1277, %r1276, -1;
	mov.b32 	 %f2391, %r1277;
	add.f32 	%f2392, %f2390, 0f37000000;
	selp.f32	%f2393, %f2391, %f2387, %p305;
	selp.f32	%f484, %f2392, %f2390, %p305;
	mul.f32 	%f2394, %f2393, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f2395, %f2394;
	mov.f32 	%f2396, 0fBF317200;
	fma.rn.f32 	%f2397, %f2395, %f2396, %f2393;
	mov.f32 	%f2398, 0fB5BFBE8E;
	fma.rn.f32 	%f2399, %f2395, %f2398, %f2397;
	mul.f32 	%f2400, %f2399, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f2401, %f2400;
	add.f32 	%f2402, %f2395, 0f00000000;
	ex2.approx.f32 	%f2403, %f2402;
	mul.f32 	%f2404, %f2401, %f2403;
	setp.lt.f32	%p306, %f2393, 0fC2D20000;
	selp.f32	%f2405, 0f00000000, %f2404, %p306;
	setp.gt.f32	%p307, %f2393, 0f42D20000;
	selp.f32	%f3751, 0f7F800000, %f2405, %p307;
	setp.eq.f32	%p308, %f3751, 0f7F800000;
	@%p308 bra 	BB1_15;

	fma.rn.f32 	%f3751, %f3751, %f484, %f3751;

BB1_15:
	setp.lt.f32	%p309, %f479, 0f00000000;
	setp.eq.f32	%p310, %f481, 0f3F800000;
	and.pred  	%p3, %p309, %p310;
	mov.b32 	 %r1278, %f3751;
	xor.b32  	%r1279, %r1278, -2147483648;
	mov.b32 	 %f2406, %r1279;
	selp.f32	%f3753, %f2406, %f3751, %p3;
	setp.eq.f32	%p311, %f479, 0f00000000;
	@%p311 bra 	BB1_427;
	bra.uni 	BB1_16;

BB1_427:
	add.f32 	%f2408, %f479, %f479;
	mov.b32 	 %r1280, %f2408;
	selp.b32	%r1281, %r1280, 0, %p310;
	or.b32  	%r1282, %r1281, 2139095040;
	setp.lt.f32	%p315, %f480, 0f00000000;
	selp.b32	%r1283, %r1282, %r1281, %p315;
	mov.b32 	 %f3753, %r1283;
	bra.uni 	BB1_428;

BB1_32:
	setp.eq.s32	%p12, %r479, 11;
	@%p12 bra 	BB1_40;
	bra.uni 	BB1_33;

BB1_40:
	mov.u32 	%r1567, 7937;
	add.s64 	%rd120, %rd105, 144;
	ld.global.v2.f32 	{%f712, %f713}, [aInset];
	ld.global.v2.f32 	{%f716, %f717}, [aInset+8];
	ld.global.v2.f32 	{%f720, %f721}, [aInset+16];
	ld.global.v2.f32 	{%f724, %f725}, [aInset+24];
	ld.global.v2.f32 	{%f728, %f729}, [aInset+32];
	ld.global.v2.f32 	{%f732, %f733}, [aInset+40];
	ld.global.v2.f32 	{%f736, %f737}, [aInset+48];
	ld.global.v2.f32 	{%f740, %f741}, [aInset+56];
	ld.global.v2.f32 	{%f744, %f745}, [aInset+64];
	mov.b32 	 %r492, %f745;
	ld.global.u32 	%r486, [GetTexture_normal];
	// inline asm
	call (%rd115), _rt_callable_program_from_id_64, (%r486);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd120;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f712;
	st.param.f32	[param1+4], %f713;
	st.param.f32	[param1+8], %f716;
	st.param.f32	[param1+12], %f717;
	st.param.f32	[param1+16], %f720;
	st.param.f32	[param1+20], %f721;
	st.param.f32	[param1+24], %f724;
	st.param.f32	[param1+28], %f725;
	st.param.f32	[param1+32], %f728;
	st.param.f32	[param1+36], %f729;
	st.param.f32	[param1+40], %f732;
	st.param.f32	[param1+44], %f733;
	st.param.f32	[param1+48], %f736;
	st.param.f32	[param1+52], %f737;
	st.param.f32	[param1+56], %f740;
	st.param.f32	[param1+60], %f741;
	st.param.f32	[param1+64], %f744;
	st.param.b32	[param1+68], %r492;
	.param .align 4 .b8 retval0[12];
	prototype_2 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd115, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.f32	%f696, [retval0+0];
	ld.param.f32	%f697, [retval0+4];
	ld.param.f32	%f698, [retval0+8];
	
	//{
	}// Callseq End 2
	mov.f32 	%f3598, 0f00000000;
	// inline asm
	call (%f692, %f693, %f694, %f695), _rt_transform_tuple, (%r1567, %f696, %f697, %f698, %f3598);
	// inline asm
	mul.f32 	%f748, %f693, %f693;
	fma.rn.f32 	%f749, %f692, %f692, %f748;
	fma.rn.f32 	%f750, %f694, %f694, %f749;
	sqrt.rn.f32 	%f751, %f750;
	rcp.rn.f32 	%f752, %f751;
	mul.f32 	%f753, %f694, %f752;
	mul.f32 	%f754, %f693, %f752;
	mul.f32 	%f755, %f692, %f752;
	st.local.v2.f32 	[%rd2+-12], {%f755, %f754};
	st.local.f32 	[%rd2+-4], %f753;
	ld.f32 	%f704, [%rd105+240];
	ld.f32 	%f705, [%rd105+244];
	ld.f32 	%f706, [%rd105+248];
	mov.u32 	%r488, 3841;
	mov.f32 	%f707, 0f3F800000;
	// inline asm
	call (%f700, %f701, %f702, %f703), _rt_transform_tuple, (%r488, %f704, %f705, %f706, %f707);
	// inline asm
	div.rn.f32 	%f756, %f700, %f703;
	div.rn.f32 	%f757, %f701, %f703;
	div.rn.f32 	%f758, %f702, %f703;
	mul.f32 	%f759, %f757, %f757;
	fma.rn.f32 	%f760, %f756, %f756, %f759;
	fma.rn.f32 	%f761, %f758, %f758, %f760;
	sqrt.rn.f32 	%f762, %f761;
	rcp.rn.f32 	%f763, %f762;
	mul.f32 	%f764, %f756, %f763;
	mul.f32 	%f765, %f757, %f763;
	mul.f32 	%f766, %f758, %f763;
	ld.local.f32 	%f767, [%rd2+24];
	sub.f32 	%f768, %f764, %f767;
	ld.local.f32 	%f769, [%rd2+28];
	sub.f32 	%f770, %f765, %f769;
	ld.local.f32 	%f771, [%rd2+32];
	sub.f32 	%f772, %f766, %f771;
	ld.local.f32 	%f773, [%rd2+-8];
	mul.f32 	%f774, %f773, %f772;
	ld.local.f32 	%f775, [%rd2+-4];
	mul.f32 	%f776, %f770, %f775;
	sub.f32 	%f777, %f774, %f776;
	mul.f32 	%f778, %f768, %f775;
	ld.local.f32 	%f779, [%rd2+-12];
	mul.f32 	%f780, %f772, %f779;
	sub.f32 	%f781, %f778, %f780;
	mul.f32 	%f782, %f770, %f779;
	mul.f32 	%f783, %f768, %f773;
	sub.f32 	%f784, %f782, %f783;
	mul.f32 	%f785, %f781, %f781;
	fma.rn.f32 	%f786, %f777, %f777, %f785;
	fma.rn.f32 	%f787, %f784, %f784, %f786;
	sqrt.rn.f32 	%f788, %f787;
	rcp.rn.f32 	%f789, %f788;
	mul.f32 	%f790, %f777, %f789;
	mul.f32 	%f791, %f781, %f789;
	mul.f32 	%f792, %f784, %f789;
	st.local.f32 	[%rd2+92], %f790;
	st.local.f32 	[%rd2+96], %f791;
	st.local.f32 	[%rd2+100], %f792;
	mul.f32 	%f793, %f773, %f792;
	mul.f32 	%f794, %f775, %f791;
	sub.f32 	%f795, %f793, %f794;
	mul.f32 	%f796, %f775, %f790;
	mul.f32 	%f797, %f779, %f792;
	sub.f32 	%f798, %f796, %f797;
	mul.f32 	%f799, %f779, %f791;
	mul.f32 	%f800, %f773, %f790;
	sub.f32 	%f801, %f799, %f800;
	mul.f32 	%f802, %f798, %f798;
	fma.rn.f32 	%f803, %f795, %f795, %f802;
	fma.rn.f32 	%f804, %f801, %f801, %f803;
	sqrt.rn.f32 	%f805, %f804;
	rcp.rn.f32 	%f806, %f805;
	mul.f32 	%f807, %f795, %f806;
	mul.f32 	%f808, %f798, %f806;
	mul.f32 	%f809, %f801, %f806;
	st.local.f32 	[%rd2+104], %f807;
	st.local.f32 	[%rd2+108], %f808;
	st.local.f32 	[%rd2+112], %f809;
	ld.f32 	%f810, [%rd105+292];
	st.local.f32 	[%rd2+84], %f810;
	ld.f32 	%f811, [%rd105+288];
	st.local.f32 	[%rd2+88], %f811;
	ld.f32 	%f812, [%rd105+296];
	st.local.f32 	[%rd2+76], %f812;
	ld.f32 	%f813, [%rd105+300];
	st.local.f32 	[%rd2+80], %f813;
	ld.global.u32 	%r489, [dataRenderer+160];
	mov.u32 	%r491, 176;
	// inline asm
	call (%rd116, %rd117, %rd118, %rd119), _rt_buffer_get_id_size_64, (%r489, %r475, %r491);
	// inline asm
	cvt.u32.u64	%r1, %rd116;
	setp.eq.s32	%p24, %r1, 0;
	mov.f32 	%f3597, %f3598;
	mov.f32 	%f3596, %f3598;
	mov.f32 	%f3595, %f3598;
	@%p24 bra 	BB1_48;

	add.u64 	%rd122, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd122;
	mov.f32 	%f3598, 0f00000000;
	mov.u32 	%r1576, 0;
	mov.u64 	%rd121, 0;
	mov.u64 	%rd841, %rd121;
	mov.f32 	%f3597, %f3598;
	mov.f32 	%f3596, %f3598;
	mov.f32 	%f3595, %f3598;

BB1_42:
	ld.global.u32 	%r494, [dataRenderer+160];
	// inline asm
	call (%rd123), _rt_buffer_get_id_64, (%r494, %r475, %r491, %rd841, %rd121, %rd121, %rd121);
	// inline asm
	ld.u32 	%rd130, [%rd123];
	mov.u64 	%rd135, buf_light_sample_L;
	cvta.global.u64 	%rd129, %rd135;
	mov.u32 	%r498, 4;
	// inline asm
	call (%rd128), _rt_buffer_get_64, (%rd129, %r475, %r498, %rd130, %rd121, %rd121, %rd121);
	// inline asm
	ld.u32 	%r499, [%rd128];
	// inline asm
	call (%rd134), _rt_callable_program_from_id_64, (%r499);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd123;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_3 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd134, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_3;
	
	//{
	}// Callseq End 3
	ld.local.v4.f32 	{%f818, %f819, %f820, %f821}, [%rd2+52];
	mul.f32 	%f823, %f819, 0f3F170A3D;
	fma.rn.f32 	%f825, %f818, 0f3E99999A, %f823;
	fma.rn.f32 	%f827, %f820, 0f3DE147AE, %f825;
	fma.rn.f32 	%f829, %f821, 0f00000000, %f827;
	setp.le.f32	%p25, %f829, 0f358637BD;
	@%p25 bra 	BB1_47;

	ld.local.f32 	%f830, [%rd2+36];
	setp.le.f32	%p26, %f830, 0f3A83126F;
	@%p26 bra 	BB1_47;

	ld.local.v2.f32 	{%f831, %f832}, [%rd2+12];
	mul.f32 	%f835, %f832, %f832;
	fma.rn.f32 	%f836, %f831, %f831, %f835;
	ld.local.f32 	%f837, [%rd2+20];
	fma.rn.f32 	%f838, %f837, %f837, %f836;
	sqrt.rn.f32 	%f21, %f838;
	rcp.rn.f32 	%f839, %f21;
	mul.f32 	%f22, %f839, %f831;
	mul.f32 	%f23, %f839, %f832;
	mul.f32 	%f24, %f839, %f837;
	ld.local.v4.f32 	{%f840, %f841, %f842, %f843}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f22, %f23};
	st.local.f32 	[%rd2+20], %f24;
	ld.local.f32 	%f844, [%rd2+16];
	mul.f32 	%f846, %f844, %f841;
	fma.rn.f32 	%f848, %f22, %f840, %f846;
	ld.local.f32 	%f850, [%rd2+20];
	fma.rn.f32 	%f25, %f850, %f842, %f848;
	setp.leu.f32	%p27, %f25, 0f00000000;
	@%p27 bra 	BB1_47;

	ld.global.f32 	%f857, [dataRenderer+8];
	ld.local.f32 	%f853, [%rd2+32];
	ld.local.f32 	%f852, [%rd2+28];
	ld.local.f32 	%f851, [%rd2+24];
	mov.u16 	%rs2, 1;
	st.local.u8 	[%rd4], %rs2;
	ld.global.u32 	%r500, [topObject];
	mov.u32 	%r501, 2;
	// inline asm
	call _rt_trace_64, (%r500, %f851, %f852, %f853, %f22, %f23, %f24, %r501, %f857, %f21, %rd122, %r475);
	// inline asm
	ld.local.u8 	%rs3, [%rd4];
	setp.eq.s16	%p28, %rs3, 0;
	@%p28 bra 	BB1_47;

	mov.u64 	%rd146, buf_lm_F;
	cvta.global.u64 	%rd140, %rd146;
	mov.u64 	%rd141, 4;
	mov.u64 	%rd144, 0;
	// inline asm
	call (%rd139), _rt_buffer_get_64, (%rd140, %r475, %r498, %rd141, %rd144, %rd144, %rd144);
	// inline asm
	ld.u32 	%r505, [%rd139];
	// inline asm
	call (%rd145), _rt_callable_program_from_id_64, (%r505);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_4 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd145, 
	(
	param0, 
	param1
	)
	, prototype_4;
	
	//{
	}// Callseq End 4
	ld.local.v2.f32 	{%f859, %f860}, [%rd2+36];
	ld.local.v4.f32 	{%f863, %f864, %f865, %f866}, [%rd2+52];
	mul.f32 	%f868, %f860, %f863;
	mul.f32 	%f870, %f860, %f864;
	mul.f32 	%f872, %f860, %f865;
	mul.f32 	%f874, %f860, %f866;
	mul.f32 	%f875, %f25, %f868;
	mul.f32 	%f876, %f25, %f870;
	mul.f32 	%f877, %f25, %f872;
	mul.f32 	%f878, %f25, %f874;
	rcp.rn.f32 	%f879, %f859;
	fma.rn.f32 	%f3595, %f875, %f879, %f3595;
	fma.rn.f32 	%f3596, %f876, %f879, %f3596;
	fma.rn.f32 	%f3597, %f877, %f879, %f3597;
	fma.rn.f32 	%f3598, %f878, %f879, %f3598;

BB1_47:
	add.s64 	%rd841, %rd841, 1;
	add.s32 	%r1576, %r1576, 1;
	setp.lt.u32	%p29, %r1576, %r1;
	@%p29 bra 	BB1_42;

BB1_48:
	st.local.v4.f32 	[%rd2+52], {%f3595, %f3596, %f3597, %f3598};
	mul.f32 	%f880, %f8, %f16;
	mul.f32 	%f881, %f7, %f15;
	mul.f32 	%f882, %f6, %f14;
	mul.f32 	%f883, %f5, %f13;
	st.global.v4.f32 	[prdR+48], {%f883, %f882, %f881, %f880};
	mov.u64 	%rd156, buf_lm_sample_F;
	cvta.global.u64 	%rd150, %rd156;
	mov.u32 	%r507, 4;
	mov.u64 	%rd151, 4;
	mov.u64 	%rd154, 0;
	// inline asm
	call (%rd149), _rt_buffer_get_64, (%rd150, %r475, %r507, %rd151, %rd154, %rd154, %rd154);
	// inline asm
	ld.u32 	%r508, [%rd149];
	// inline asm
	call (%rd155), _rt_callable_program_from_id_64, (%r508);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_5 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd155, 
	(
	param0, 
	param1
	)
	, prototype_5;
	
	//{
	}// Callseq End 5
	ld.global.f32 	%f884, [prdR+80];
	setp.leu.f32	%p30, %f884, 0f3F800000;
	@%p30 bra 	BB1_50;

	mov.u32 	%r509, 1065353216;
	st.global.u32 	[prdR+80], %r509;

BB1_50:
	ld.global.u32 	%r510, [prdR+4];
	ld.global.u32 	%r511, [dataRenderer+164];
	add.s32 	%r4, %r511, -1;
	setp.ge.u32	%p31, %r510, %r4;
	@%p31 bra 	BB1_558;

	add.s32 	%r1559, %r511, -1;
	st.global.u32 	[prdR+4], %r1559;
	bra.uni 	BB1_558;

BB1_35:
	setp.ne.s32	%p10, %r479, 12;
	@%p10 bra 	BB1_33;

	ld.global.u32 	%r485, [prdR+4];
	setp.eq.s32	%p23, %r485, 0;
	@%p23 bra 	BB1_38;

	mov.f32 	%f3589, 0f00000000;
	st.global.v4.f32 	[prdR+96], {%f3589, %f3589, %f3589, %f3589};
	bra.uni 	BB1_39;

BB1_33:
	ld.local.f32 	%f3578, [%rd2+32];
	ld.local.f32 	%f3579, [%rd2+28];
	ld.local.f32 	%f3580, [%rd2+24];
	ld.f32 	%f3581, [%rd105+308];
	ld.global.u32 	%r1558, [CheckerBoard3];
	// inline asm
	call (%rd838), _rt_callable_program_from_id_64, (%r1558);
	// inline asm
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .align 4 .b8 param0[12];
	st.param.f32	[param0+0], %f3580;
	st.param.f32	[param0+4], %f3579;
	st.param.f32	[param0+8], %f3578;
	.param .b32 param1;
	st.param.f32	[param1+0], %f3581;
	.param .b32 retval0;
	prototype_66 : .callprototype (.param .b32 _) _ (.param .align 4 .b8 _[12], .param .b32 _);
	call (retval0), 
	%rd838, 
	(
	param0, 
	param1
	)
	, prototype_66;
	ld.param.f32	%f3582, [retval0+0];
	
	//{
	}// Callseq End 66
	fma.rn.f32 	%f3583, %f3582, 0f3F733333, 0f3D4CCCCD;
	mul.f32 	%f3584, %f8, %f3583;
	mul.f32 	%f3585, %f7, %f3583;
	mul.f32 	%f3586, %f6, %f3583;
	mul.f32 	%f3587, %f5, %f3583;
	st.global.v4.f32 	[prdR+48], {%f3587, %f3586, %f3585, %f3584};
	mov.f32 	%f3588, 0f3F800000;
	st.global.v4.f32 	[prdR+96], {%f3588, %f3588, %f3588, %f3588};
	mov.u16 	%rs43, 1;
	st.global.u8 	[prdR+124], %rs43;
	bra.uni 	BB1_560;

BB1_390:
	ld.global.u32 	%r1199, [dataRenderer+160];
	mov.u32 	%r1201, 176;
	// inline asm
	call (%rd336, %rd337, %rd338, %rd339), _rt_buffer_get_id_size_64, (%r1199, %r475, %r1201);
	// inline asm
	cvt.u32.u64	%r440, %rd336;
	setp.eq.s32	%p259, %r440, 0;
	mov.f32 	%f3731, 0f00000000;
	mov.f32 	%f3730, %f3731;
	mov.f32 	%f3729, %f3731;
	mov.f32 	%f3728, %f3731;
	@%p259 bra 	BB1_398;

	add.u64 	%rd341, %SP, 0;
	cvta.to.local.u64 	%rd82, %rd341;
	mov.f32 	%f3731, 0f00000000;
	mov.u32 	%r1700, 0;
	mov.u64 	%rd340, 0;
	mov.u64 	%rd869, %rd340;
	mov.f32 	%f3730, %f3731;
	mov.f32 	%f3729, %f3731;
	mov.f32 	%f3728, %f3731;

BB1_392:
	ld.global.u32 	%r1203, [dataRenderer+160];
	// inline asm
	call (%rd342), _rt_buffer_get_id_64, (%r1203, %r475, %r1201, %rd869, %rd340, %rd340, %rd340);
	// inline asm
	ld.u32 	%rd349, [%rd342];
	mov.u64 	%rd354, buf_light_sample_L;
	cvta.global.u64 	%rd348, %rd354;
	mov.u32 	%r1207, 4;
	// inline asm
	call (%rd347), _rt_buffer_get_64, (%rd348, %r475, %r1207, %rd349, %rd340, %rd340, %rd340);
	// inline asm
	ld.u32 	%r1208, [%rd347];
	// inline asm
	call (%rd353), _rt_callable_program_from_id_64, (%r1208);
	// inline asm
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd342;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_19 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd353, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_19;
	
	//{
	}// Callseq End 19
	ld.local.v4.f32 	{%f1971, %f1972, %f1973, %f1974}, [%rd2+52];
	mul.f32 	%f1976, %f1972, 0f3F170A3D;
	fma.rn.f32 	%f1978, %f1971, 0f3E99999A, %f1976;
	fma.rn.f32 	%f1980, %f1973, 0f3DE147AE, %f1978;
	fma.rn.f32 	%f1982, %f1974, 0f00000000, %f1980;
	setp.le.f32	%p260, %f1982, 0f358637BD;
	@%p260 bra 	BB1_397;

	ld.local.f32 	%f1983, [%rd2+36];
	setp.le.f32	%p261, %f1983, 0f3A83126F;
	@%p261 bra 	BB1_397;

	ld.local.v2.f32 	{%f1984, %f1985}, [%rd2+12];
	mul.f32 	%f1988, %f1985, %f1985;
	fma.rn.f32 	%f1989, %f1984, %f1984, %f1988;
	ld.local.f32 	%f1990, [%rd2+20];
	fma.rn.f32 	%f1991, %f1990, %f1990, %f1989;
	sqrt.rn.f32 	%f418, %f1991;
	rcp.rn.f32 	%f1992, %f418;
	mul.f32 	%f419, %f1992, %f1984;
	mul.f32 	%f420, %f1992, %f1985;
	mul.f32 	%f421, %f1992, %f1990;
	ld.local.v4.f32 	{%f1993, %f1994, %f1995, %f1996}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f419, %f420};
	st.local.f32 	[%rd2+20], %f421;
	ld.local.f32 	%f1997, [%rd2+16];
	mul.f32 	%f1999, %f1997, %f1994;
	fma.rn.f32 	%f2001, %f419, %f1993, %f1999;
	ld.local.f32 	%f2003, [%rd2+20];
	fma.rn.f32 	%f422, %f2003, %f1995, %f2001;
	setp.leu.f32	%p262, %f422, 0f00000000;
	@%p262 bra 	BB1_397;

	ld.global.f32 	%f2010, [dataRenderer+8];
	ld.local.f32 	%f2006, [%rd2+32];
	ld.local.f32 	%f2005, [%rd2+28];
	ld.local.f32 	%f2004, [%rd2+24];
	mov.u16 	%rs10, 1;
	st.local.u8 	[%rd82], %rs10;
	ld.global.u32 	%r1209, [topObject];
	mov.u32 	%r1210, 2;
	// inline asm
	call _rt_trace_64, (%r1209, %f2004, %f2005, %f2006, %f419, %f420, %f421, %r1210, %f2010, %f418, %rd341, %r475);
	// inline asm
	ld.local.u8 	%rs11, [%rd82];
	setp.eq.s16	%p263, %rs11, 0;
	@%p263 bra 	BB1_397;

	mov.u64 	%rd365, buf_lm_F;
	cvta.global.u64 	%rd359, %rd365;
	mov.u64 	%rd363, 0;
	// inline asm
	call (%rd358), _rt_buffer_get_64, (%rd359, %r475, %r1207, %rd363, %rd363, %rd363, %rd363);
	// inline asm
	ld.u32 	%r1214, [%rd358];
	// inline asm
	call (%rd364), _rt_callable_program_from_id_64, (%r1214);
	// inline asm
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_20 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd364, 
	(
	param0, 
	param1
	)
	, prototype_20;
	
	//{
	}// Callseq End 20
	ld.local.v2.f32 	{%f2012, %f2013}, [%rd2+36];
	ld.local.v4.f32 	{%f2016, %f2017, %f2018, %f2019}, [%rd2+52];
	mul.f32 	%f2021, %f2013, %f2016;
	mul.f32 	%f2023, %f2013, %f2017;
	mul.f32 	%f2025, %f2013, %f2018;
	mul.f32 	%f2027, %f2013, %f2019;
	mul.f32 	%f2028, %f422, %f2021;
	mul.f32 	%f2029, %f422, %f2023;
	mul.f32 	%f2030, %f422, %f2025;
	mul.f32 	%f2031, %f422, %f2027;
	rcp.rn.f32 	%f2032, %f2012;
	fma.rn.f32 	%f3728, %f2028, %f2032, %f3728;
	fma.rn.f32 	%f3729, %f2029, %f2032, %f3729;
	fma.rn.f32 	%f3730, %f2030, %f2032, %f3730;
	fma.rn.f32 	%f3731, %f2031, %f2032, %f3731;

BB1_397:
	add.s64 	%rd869, %rd869, 1;
	add.s32 	%r1700, %r1700, 1;
	setp.lt.u32	%p264, %r1700, %r440;
	@%p264 bra 	BB1_392;

BB1_398:
	st.local.v4.f32 	[%rd2+52], {%f3728, %f3729, %f3730, %f3731};
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u64 	%rd375, buf_lm_sample_F;
	cvta.global.u64 	%rd369, %rd375;
	mov.u32 	%r1216, 4;
	mov.u64 	%rd373, 0;
	// inline asm
	call (%rd368), _rt_buffer_get_64, (%rd369, %r475, %r1216, %rd373, %rd373, %rd373, %rd373);
	// inline asm
	ld.u32 	%r1217, [%rd368];
	// inline asm
	call (%rd374), _rt_callable_program_from_id_64, (%r1217);
	// inline asm
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_21 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd374, 
	(
	param0, 
	param1
	)
	, prototype_21;
	
	//{
	}// Callseq End 21
	mov.u32 	%r1218, 0;
	st.global.u32 	[prdR+80], %r1218;
	ld.global.u32 	%r1219, [dataRenderer+164];
	add.s32 	%r443, %r1219, -1;
	ld.global.u32 	%r1220, [prdR+4];
	setp.ge.u32	%p265, %r1220, %r443;
	@%p265 bra 	BB1_558;

	add.s32 	%r1562, %r1219, -1;
	st.global.u32 	[prdR+4], %r1562;
	bra.uni 	BB1_558;

BB1_483:
	mov.u32 	%r1572, 7937;
	add.s64 	%rd552, %rd105, 144;
	ld.global.v2.f32 	{%f2760, %f2761}, [aInset];
	ld.global.v2.f32 	{%f2764, %f2765}, [aInset+8];
	ld.global.v2.f32 	{%f2768, %f2769}, [aInset+16];
	ld.global.v2.f32 	{%f2772, %f2773}, [aInset+24];
	ld.global.v2.f32 	{%f2776, %f2777}, [aInset+32];
	ld.global.v2.f32 	{%f2780, %f2781}, [aInset+40];
	ld.global.v2.f32 	{%f2784, %f2785}, [aInset+48];
	ld.global.v2.f32 	{%f2788, %f2789}, [aInset+56];
	ld.global.v2.f32 	{%f2792, %f2793}, [aInset+64];
	mov.b32 	 %r1372, %f2793;
	ld.global.u32 	%r1367, [GetTexture_normal];
	// inline asm
	call (%rd547), _rt_callable_program_from_id_64, (%r1367);
	// inline asm
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd552;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f2760;
	st.param.f32	[param1+4], %f2761;
	st.param.f32	[param1+8], %f2764;
	st.param.f32	[param1+12], %f2765;
	st.param.f32	[param1+16], %f2768;
	st.param.f32	[param1+20], %f2769;
	st.param.f32	[param1+24], %f2772;
	st.param.f32	[param1+28], %f2773;
	st.param.f32	[param1+32], %f2776;
	st.param.f32	[param1+36], %f2777;
	st.param.f32	[param1+40], %f2780;
	st.param.f32	[param1+44], %f2781;
	st.param.f32	[param1+48], %f2784;
	st.param.f32	[param1+52], %f2785;
	st.param.f32	[param1+56], %f2788;
	st.param.f32	[param1+60], %f2789;
	st.param.f32	[param1+64], %f2792;
	st.param.b32	[param1+68], %r1372;
	.param .align 4 .b8 retval0[12];
	prototype_40 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd547, 
	(
	param0, 
	param1
	)
	, prototype_40;
	ld.param.f32	%f2752, [retval0+0];
	ld.param.f32	%f2753, [retval0+4];
	ld.param.f32	%f2754, [retval0+8];
	
	//{
	}// Callseq End 40
	mov.f32 	%f3790, 0f00000000;
	// inline asm
	call (%f2748, %f2749, %f2750, %f2751), _rt_transform_tuple, (%r1572, %f2752, %f2753, %f2754, %f3790);
	// inline asm
	mul.f32 	%f2796, %f2749, %f2749;
	fma.rn.f32 	%f2797, %f2748, %f2748, %f2796;
	fma.rn.f32 	%f2798, %f2750, %f2750, %f2797;
	sqrt.rn.f32 	%f2799, %f2798;
	rcp.rn.f32 	%f2800, %f2799;
	mul.f32 	%f2801, %f2750, %f2800;
	mul.f32 	%f2802, %f2749, %f2800;
	mul.f32 	%f2803, %f2748, %f2800;
	st.local.v2.f32 	[%rd2+-12], {%f2803, %f2802};
	st.local.f32 	[%rd2+-4], %f2801;
	ld.global.u32 	%r1369, [dataRenderer+160];
	mov.u32 	%r1371, 176;
	// inline asm
	call (%rd548, %rd549, %rd550, %rd551), _rt_buffer_get_id_size_64, (%r1369, %r475, %r1371);
	// inline asm
	cvt.u32.u64	%r454, %rd548;
	setp.eq.s32	%p376, %r454, 0;
	mov.f32 	%f3789, %f3790;
	mov.f32 	%f3788, %f3790;
	mov.f32 	%f3787, %f3790;
	@%p376 bra 	BB1_491;

	add.u64 	%rd554, %SP, 0;
	cvta.to.local.u64 	%rd94, %rd554;
	mov.f32 	%f3790, 0f00000000;
	mov.u32 	%r1704, 0;
	mov.u64 	%rd553, 0;
	mov.u64 	%rd873, %rd553;
	mov.f32 	%f3789, %f3790;
	mov.f32 	%f3788, %f3790;
	mov.f32 	%f3787, %f3790;

BB1_485:
	ld.global.u32 	%r1374, [dataRenderer+160];
	// inline asm
	call (%rd555), _rt_buffer_get_id_64, (%r1374, %r475, %r1371, %rd873, %rd553, %rd553, %rd553);
	// inline asm
	ld.u32 	%rd562, [%rd555];
	mov.u64 	%rd567, buf_light_sample_L;
	cvta.global.u64 	%rd561, %rd567;
	mov.u32 	%r1378, 4;
	// inline asm
	call (%rd560), _rt_buffer_get_64, (%rd561, %r475, %r1378, %rd562, %rd553, %rd553, %rd553);
	// inline asm
	ld.u32 	%r1379, [%rd560];
	// inline asm
	call (%rd566), _rt_callable_program_from_id_64, (%r1379);
	// inline asm
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd555;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_41 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd566, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_41;
	
	//{
	}// Callseq End 41
	ld.local.v4.f32 	{%f2808, %f2809, %f2810, %f2811}, [%rd2+52];
	mul.f32 	%f2813, %f2809, 0f3F170A3D;
	fma.rn.f32 	%f2815, %f2808, 0f3E99999A, %f2813;
	fma.rn.f32 	%f2817, %f2810, 0f3DE147AE, %f2815;
	fma.rn.f32 	%f2819, %f2811, 0f00000000, %f2817;
	setp.le.f32	%p377, %f2819, 0f358637BD;
	@%p377 bra 	BB1_490;

	ld.local.f32 	%f2820, [%rd2+36];
	setp.le.f32	%p378, %f2820, 0f3A83126F;
	@%p378 bra 	BB1_490;

	ld.local.v2.f32 	{%f2821, %f2822}, [%rd2+12];
	mul.f32 	%f2825, %f2822, %f2822;
	fma.rn.f32 	%f2826, %f2821, %f2821, %f2825;
	ld.local.f32 	%f2827, [%rd2+20];
	fma.rn.f32 	%f2828, %f2827, %f2827, %f2826;
	sqrt.rn.f32 	%f569, %f2828;
	rcp.rn.f32 	%f2829, %f569;
	mul.f32 	%f570, %f2829, %f2821;
	mul.f32 	%f571, %f2829, %f2822;
	mul.f32 	%f572, %f2829, %f2827;
	ld.local.v4.f32 	{%f2830, %f2831, %f2832, %f2833}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f570, %f571};
	st.local.f32 	[%rd2+20], %f572;
	ld.local.f32 	%f2834, [%rd2+16];
	mul.f32 	%f2836, %f2834, %f2831;
	fma.rn.f32 	%f2838, %f570, %f2830, %f2836;
	ld.local.f32 	%f2840, [%rd2+20];
	fma.rn.f32 	%f573, %f2840, %f2832, %f2838;
	setp.leu.f32	%p379, %f573, 0f00000000;
	@%p379 bra 	BB1_490;

	ld.global.f32 	%f2847, [dataRenderer+8];
	ld.local.f32 	%f2843, [%rd2+32];
	ld.local.f32 	%f2842, [%rd2+28];
	ld.local.f32 	%f2841, [%rd2+24];
	mov.u16 	%rs18, 1;
	st.local.u8 	[%rd94], %rs18;
	ld.global.u32 	%r1380, [topObject];
	mov.u32 	%r1381, 2;
	// inline asm
	call _rt_trace_64, (%r1380, %f2841, %f2842, %f2843, %f570, %f571, %f572, %r1381, %f2847, %f569, %rd554, %r475);
	// inline asm
	ld.local.u8 	%rs19, [%rd94];
	setp.eq.s16	%p380, %rs19, 0;
	@%p380 bra 	BB1_490;

	mov.u64 	%rd578, buf_lm_F;
	cvta.global.u64 	%rd572, %rd578;
	mov.u64 	%rd576, 0;
	// inline asm
	call (%rd571), _rt_buffer_get_64, (%rd572, %r475, %r1378, %rd576, %rd576, %rd576, %rd576);
	// inline asm
	ld.u32 	%r1385, [%rd571];
	// inline asm
	call (%rd577), _rt_callable_program_from_id_64, (%r1385);
	// inline asm
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_42 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd577, 
	(
	param0, 
	param1
	)
	, prototype_42;
	
	//{
	}// Callseq End 42
	ld.local.v2.f32 	{%f2849, %f2850}, [%rd2+36];
	ld.local.v4.f32 	{%f2853, %f2854, %f2855, %f2856}, [%rd2+52];
	mul.f32 	%f2858, %f2850, %f2853;
	mul.f32 	%f2860, %f2850, %f2854;
	mul.f32 	%f2862, %f2850, %f2855;
	mul.f32 	%f2864, %f2850, %f2856;
	mul.f32 	%f2865, %f573, %f2858;
	mul.f32 	%f2866, %f573, %f2860;
	mul.f32 	%f2867, %f573, %f2862;
	mul.f32 	%f2868, %f573, %f2864;
	rcp.rn.f32 	%f2869, %f2849;
	fma.rn.f32 	%f3787, %f2865, %f2869, %f3787;
	fma.rn.f32 	%f3788, %f2866, %f2869, %f3788;
	fma.rn.f32 	%f3789, %f2867, %f2869, %f3789;
	fma.rn.f32 	%f3790, %f2868, %f2869, %f3790;

BB1_490:
	add.s64 	%rd873, %rd873, 1;
	add.s32 	%r1704, %r1704, 1;
	setp.lt.u32	%p381, %r1704, %r454;
	@%p381 bra 	BB1_485;

BB1_491:
	st.local.v4.f32 	[%rd2+52], {%f3787, %f3788, %f3789, %f3790};
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u64 	%rd588, buf_lm_sample_F;
	cvta.global.u64 	%rd582, %rd588;
	mov.u32 	%r1387, 4;
	mov.u64 	%rd586, 0;
	// inline asm
	call (%rd581), _rt_buffer_get_64, (%rd582, %r475, %r1387, %rd586, %rd586, %rd586, %rd586);
	// inline asm
	ld.u32 	%r1388, [%rd581];
	// inline asm
	call (%rd587), _rt_callable_program_from_id_64, (%r1388);
	// inline asm
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_43 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd587, 
	(
	param0, 
	param1
	)
	, prototype_43;
	
	//{
	}// Callseq End 43
	mov.u32 	%r1389, 0;
	st.global.u32 	[prdR+80], %r1389;
	ld.global.u32 	%r1390, [dataRenderer+164];
	st.global.u32 	[prdR+4], %r1390;
	bra.uni 	BB1_558;

BB1_456:
	setp.geu.f32	%p349, %f523, 0f00000000;
	@%p349 bra 	BB1_459;

	cvt.rzi.f32.f32	%f2649, %f524;
	setp.neu.f32	%p350, %f2649, %f524;
	selp.f32	%f3769, 0f7FFFFFFF, %f3769, %p350;

BB1_459:
	add.f32 	%f2651, %f526, %f527;
	mov.b32 	 %r1333, %f2651;
	setp.lt.s32	%p353, %r1333, 2139095040;
	@%p353 bra 	BB1_466;

	setp.gtu.f32	%p354, %f526, 0f7F800000;
	setp.gtu.f32	%p355, %f527, 0f7F800000;
	or.pred  	%p356, %p354, %p355;
	@%p356 bra 	BB1_465;
	bra.uni 	BB1_461;

BB1_465:
	add.f32 	%f3769, %f524, %f523;
	bra.uni 	BB1_466;

BB1_521:
	ld.global.u64 	%rd100, [dataRenderer+184];
	cvt.u16.u64	%rs22, %rd100;
	and.b16  	%rs23, %rs22, 255;
	setp.eq.s16	%p421, %rs23, 0;
	@%p421 bra 	BB1_523;

	shr.u64 	%rd677, %rd100, 32;
	cvt.u32.u64	%r1458, %rd677;
	ld.global.u32 	%r1457, [GetTextur_Dir];
	// inline asm
	call (%rd676), _rt_callable_program_from_id_64, (%r1457);
	// inline asm
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r1458;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd670;
	.param .align 16 .b8 retval0[16];
	prototype_55 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .b64 _);
	call (retval0), 
	%rd676, 
	(
	param0, 
	param1
	)
	, prototype_55;
	ld.param.f32	%f3223, [retval0+0];
	ld.param.f32	%f3224, [retval0+4];
	ld.param.f32	%f3225, [retval0+8];
	ld.param.f32	%f3226, [retval0+12];
	
	//{
	}// Callseq End 55
	st.global.v4.f32 	[prdR+48], {%f3223, %f3224, %f3225, %f3226};
	mov.f32 	%f3227, 0f3F800000;
	st.global.v4.f32 	[prdR+96], {%f3227, %f3227, %f3227, %f3227};
	bra.uni 	BB1_524;

BB1_23:
	mov.u32 	%r1565, 320;
	ld.global.u32 	%r513, [dataInstance+32];
	ld.global.s32 	%rd162, [dataInstance+36];
	mov.u64 	%rd165, 0;
	// inline asm
	call (%rd161), _rt_buffer_get_id_64, (%r513, %r475, %r1565, %rd162, %rd165, %rd165, %rd165);
	// inline asm
	ld.f32 	%f886, [%rd161+272];
	rcp.rn.f32 	%f887, %f886;
	ld.local.f32 	%f888, [%rd2+24];
	ld.local.v2.f32 	{%f889, %f890}, [%rd2+28];
	mul.f32 	%f892, %f889, 0fBFB50481;
	fma.rn.f32 	%f893, %f888, 0f3FB50481, %f892;
	fma.rn.f32 	%f895, %f890, 0f00000000, %f893;
	mul.f32 	%f896, %f887, %f895;
	cvt.rmi.f32.f32	%f897, %f896;
	cvt.rzi.s32.f32	%r516, %f897;
	cvt.rn.f32.s32	%f898, %r516;
	mul.f32 	%f899, %f889, 0f3FB50481;
	fma.rn.f32 	%f900, %f888, 0f00000000, %f899;
	fma.rn.f32 	%f901, %f890, 0fBFB50481, %f900;
	mul.f32 	%f902, %f887, %f901;
	cvt.rmi.f32.f32	%f903, %f902;
	cvt.rzi.s32.f32	%r517, %f903;
	cvt.rn.f32.s32	%f904, %r517;
	mul.f32 	%f905, %f889, 0f00000000;
	fma.rn.f32 	%f906, %f888, 0f3FB50481, %f905;
	fma.rn.f32 	%f907, %f890, 0fBFB50481, %f906;
	mul.f32 	%f908, %f887, %f907;
	cvt.rmi.f32.f32	%f909, %f908;
	cvt.rzi.s32.f32	%r518, %f909;
	cvt.rn.f32.s32	%f910, %r518;
	mul.f32 	%f40, %f886, %f898;
	mul.f32 	%f41, %f886, %f904;
	mul.f32 	%f42, %f886, %f910;
	mul.f32 	%f911, %f889, 0f3E800000;
	fma.rn.f32 	%f912, %f888, 0f3F6F5C29, %f911;
	fma.rn.f32 	%f913, %f890, 0f3E800000, %f912;
	mul.f32 	%f914, %f887, %f913;
	cvt.rmi.f32.f32	%f915, %f914;
	cvt.rzi.s32.f32	%r519, %f915;
	cvt.rn.f32.s32	%f916, %r519;
	mul.f32 	%f917, %f889, 0f3F6F5C29;
	fma.rn.f32 	%f918, %f888, 0f3E800000, %f917;
	fma.rn.f32 	%f919, %f890, 0f3E800000, %f918;
	mul.f32 	%f920, %f887, %f919;
	cvt.rmi.f32.f32	%f921, %f920;
	cvt.rzi.s32.f32	%r520, %f921;
	cvt.rn.f32.s32	%f922, %r520;
	fma.rn.f32 	%f923, %f888, 0f3E800000, %f911;
	fma.rn.f32 	%f924, %f890, 0f3F6F5C29, %f923;
	mul.f32 	%f925, %f887, %f924;
	cvt.rmi.f32.f32	%f926, %f925;
	cvt.rzi.s32.f32	%r521, %f926;
	cvt.rn.f32.s32	%f927, %r521;
	mul.f32 	%f43, %f886, %f916;
	mul.f32 	%f44, %f886, %f922;
	mul.f32 	%f45, %f886, %f927;
	mul.f32 	%f928, %f41, 0f429C774C;
	fma.rn.f32 	%f929, %f40, 0f414FD639, %f928;
	fma.rn.f32 	%f930, %f42, 0f4234A7F0, %f929;
	fma.rn.f32 	%f931, %f43, 0f42BD5893, %f930;
	fma.rn.f32 	%f932, %f44, 0f4234A7F0, %f931;
	fma.rn.f32 	%f3603, %f45, 0f429C774C, %f932;
	add.u64 	%rd166, %SP, 0;
	cvta.to.local.u64 	%rd8, %rd166;
	abs.f32 	%f933, %f3603;
	setp.neu.f32	%p33, %f933, 0f7F800000;
	@%p33 bra 	BB1_25;

	mov.f32 	%f934, 0f00000000;
	mul.rn.f32 	%f3603, %f3603, %f934;

BB1_25:
	mul.f32 	%f935, %f3603, 0f3F22F983;
	cvt.rni.s32.f32	%r1586, %f935;
	cvt.rn.f32.s32	%f936, %r1586;
	neg.f32 	%f937, %f936;
	mov.f32 	%f938, 0f3FC90FDA;
	fma.rn.f32 	%f939, %f937, %f938, %f3603;
	mov.f32 	%f940, 0f33A22168;
	fma.rn.f32 	%f941, %f937, %f940, %f939;
	mov.f32 	%f942, 0f27C234C5;
	fma.rn.f32 	%f3604, %f937, %f942, %f941;
	abs.f32 	%f943, %f3603;
	add.s64 	%rd9, %rd8, 24;
	setp.leu.f32	%p34, %f943, 0f47CE4780;
	@%p34 bra 	BB1_58;

	mov.b32 	 %r6, %f3603;
	shr.u32 	%r7, %r6, 23;
	shl.b32 	%r524, %r6, 8;
	or.b32  	%r8, %r524, -2147483648;
	mov.u32 	%r1578, 0;
	mov.u64 	%rd842, __cudart_i2opi_f;
	mov.u32 	%r1577, -6;
	mov.u64 	%rd843, %rd8;

BB1_27:
	.pragma "nounroll";
	ld.const.u32 	%r527, [%rd842];
	// inline asm
	{
	mad.lo.cc.u32   %r525, %r527, %r8, %r1578;
	madc.hi.u32     %r1578, %r527, %r8,  0;
	}
	// inline asm
	st.local.u32 	[%rd843], %r525;
	add.s64 	%rd843, %rd843, 4;
	add.s64 	%rd842, %rd842, 4;
	add.s32 	%r1577, %r1577, 1;
	setp.ne.s32	%p35, %r1577, 0;
	@%p35 bra 	BB1_27;

	and.b32  	%r530, %r7, 255;
	add.s32 	%r531, %r530, -128;
	shr.u32 	%r532, %r531, 5;
	and.b32  	%r13, %r6, -2147483648;
	st.local.u32 	[%rd9], %r1578;
	mov.u32 	%r533, 6;
	sub.s32 	%r534, %r533, %r532;
	mul.wide.s32 	%rd168, %r534, 4;
	add.s64 	%rd14, %rd8, %rd168;
	ld.local.u32 	%r1579, [%rd14];
	ld.local.u32 	%r1580, [%rd14+-4];
	and.b32  	%r16, %r7, 31;
	setp.eq.s32	%p36, %r16, 0;
	@%p36 bra 	BB1_52;

	mov.u32 	%r535, 32;
	sub.s32 	%r536, %r535, %r16;
	shr.u32 	%r537, %r1580, %r536;
	shl.b32 	%r538, %r1579, %r16;
	add.s32 	%r1579, %r537, %r538;
	ld.local.u32 	%r539, [%rd14+-8];
	shr.u32 	%r540, %r539, %r536;
	shl.b32 	%r541, %r1580, %r16;
	add.s32 	%r1580, %r540, %r541;

BB1_52:
	shr.u32 	%r542, %r1580, 30;
	shl.b32 	%r543, %r1579, 2;
	add.s32 	%r1581, %r542, %r543;
	shl.b32 	%r22, %r1580, 2;
	shr.u32 	%r544, %r1581, 31;
	shr.u32 	%r545, %r1579, 30;
	add.s32 	%r23, %r544, %r545;
	setp.eq.s32	%p37, %r544, 0;
	@%p37 bra 	BB1_53;

	not.b32 	%r546, %r1581;
	neg.s32 	%r1583, %r22;
	setp.eq.s32	%p38, %r22, 0;
	selp.u32	%r547, 1, 0, %p38;
	add.s32 	%r1581, %r547, %r546;
	xor.b32  	%r1582, %r13, -2147483648;
	bra.uni 	BB1_55;

BB1_461:
	setp.eq.f32	%p357, %f527, 0f7F800000;
	@%p357 bra 	BB1_464;
	bra.uni 	BB1_462;

BB1_464:
	setp.gt.f32	%p360, %f526, 0f3F800000;
	selp.b32	%r1337, 2139095040, 0, %p360;
	xor.b32  	%r1338, %r1337, 2139095040;
	setp.lt.f32	%p361, %f524, 0f00000000;
	selp.b32	%r1339, %r1338, %r1337, %p361;
	mov.b32 	 %f2652, %r1339;
	setp.eq.f32	%p362, %f523, 0fBF800000;
	selp.f32	%f3769, 0f3F800000, %f2652, %p362;
	bra.uni 	BB1_466;

BB1_8:
	setp.geu.f32	%p393, %f590, 0f00000000;
	@%p393 bra 	BB1_495;

	cvt.rzi.f32.f32	%f3069, %f591;
	setp.neu.f32	%p394, %f3069, %f591;
	selp.f32	%f3797, 0f7FFFFFFF, %f3797, %p394;

BB1_495:
	add.f32 	%f3071, %f593, %f594;
	mov.b32 	 %r1415, %f3071;
	setp.lt.s32	%p397, %r1415, 2139095040;
	@%p397 bra 	BB1_502;

	setp.gtu.f32	%p398, %f593, 0f7F800000;
	setp.gtu.f32	%p399, %f594, 0f7F800000;
	or.pred  	%p400, %p398, %p399;
	@%p400 bra 	BB1_501;
	bra.uni 	BB1_497;

BB1_501:
	add.f32 	%f3797, %f591, %f590;
	bra.uni 	BB1_502;

BB1_403:
	setp.geu.f32	%p276, %f439, 0f00000000;
	@%p276 bra 	BB1_406;

	cvt.rzi.f32.f32	%f2133, %f2051;
	setp.neu.f32	%p277, %f2133, %f2051;
	selp.f32	%f3738, 0f7FFFFFFF, %f3738, %p277;

BB1_406:
	add.f32 	%f2135, %f442, %f443;
	mov.b32 	 %r1233, %f2135;
	setp.lt.s32	%p280, %r1233, 2139095040;
	@%p280 bra 	BB1_413;

	setp.gtu.f32	%p281, %f442, 0f7F800000;
	setp.gtu.f32	%p282, %f443, 0f7F800000;
	or.pred  	%p283, %p281, %p282;
	@%p283 bra 	BB1_412;
	bra.uni 	BB1_408;

BB1_412:
	add.f32 	%f3738, %f2051, %f439;
	bra.uni 	BB1_413;

BB1_16:
	setp.geu.f32	%p312, %f479, 0f00000000;
	@%p312 bra 	BB1_428;

	cvt.rzi.f32.f32	%f2407, %f480;
	setp.neu.f32	%p313, %f2407, %f480;
	selp.f32	%f3753, 0f7FFFFFFF, %f3753, %p313;

BB1_428:
	add.f32 	%f2409, %f482, %f483;
	mov.b32 	 %r1284, %f2409;
	setp.lt.s32	%p316, %r1284, 2139095040;
	@%p316 bra 	BB1_435;

	setp.gtu.f32	%p317, %f482, 0f7F800000;
	setp.gtu.f32	%p318, %f483, 0f7F800000;
	or.pred  	%p319, %p317, %p318;
	@%p319 bra 	BB1_434;
	bra.uni 	BB1_430;

BB1_434:
	add.f32 	%f3753, %f480, %f479;
	bra.uni 	BB1_435;

BB1_38:
	ld.f32 	%f686, [%rd105+304];
	mul.f32 	%f687, %f8, %f686;
	mul.f32 	%f688, %f7, %f686;
	mul.f32 	%f689, %f6, %f686;
	mul.f32 	%f690, %f5, %f686;
	st.global.v4.f32 	[prdR+48], {%f690, %f689, %f688, %f687};
	mov.f32 	%f691, 0f3F800000;
	st.global.v4.f32 	[prdR+96], {%f691, %f691, %f691, %f691};

BB1_39:
	mov.u16 	%rs1, 1;
	st.global.u8 	[prdR+124], %rs1;
	bra.uni 	BB1_560;

BB1_523:
	mov.f32 	%f3228, 0f00000000;
	st.global.v4.f32 	[prdR+96], {%f3228, %f3228, %f3228, %f3228};

BB1_524:
	ld.global.u8 	%rs24, [dataRenderer+178];
	setp.eq.s16	%p422, %rs24, 0;
	@%p422 bra 	BB1_526;

	mov.f32 	%f3229, 0f3F800000;
	mov.f32 	%f3230, 0f00000000;
	st.global.v4.f32 	[prdR+64], {%f3230, %f3230, %f3230, %f3229};
	mov.u32 	%r1459, 0;
	st.global.u32 	[prdR+28], %r1459;
	st.global.u32 	[prdR+24], %r1459;
	st.global.u32 	[prdR+20], %r1459;

BB1_526:
	mov.u16 	%rs25, 1;
	st.global.u8 	[prdR+124], %rs25;
	ld.global.u32 	%r1460, [dataRenderer+160];
	mov.u32 	%r1462, 176;
	// inline asm
	call (%rd679, %rd680, %rd681, %rd682), _rt_buffer_get_id_size_64, (%r1460, %r475, %r1462);
	// inline asm
	cvt.u32.u64	%r461, %rd679;
	setp.eq.s32	%p423, %r461, 0;
	@%p423 bra 	BB1_548;

	and.b32  	%r462, %r461, 3;
	setp.eq.s32	%p424, %r462, 0;
	add.u64 	%rd683, %SP, 196;
	cvta.to.local.u64 	%rd101, %rd683;
	mov.u32 	%r1709, 0;
	@%p424 bra 	BB1_538;

	setp.eq.s32	%p425, %r462, 1;
	mov.u32 	%r1707, 0;
	@%p425 bra 	BB1_535;

	setp.eq.s32	%p426, %r462, 2;
	mov.u32 	%r1706, 0;
	@%p426 bra 	BB1_532;

	ld.global.u32 	%r1466, [dataRenderer+160];
	mov.u64 	%rd694, 0;
	// inline asm
	call (%rd684), _rt_buffer_get_id_64, (%r1466, %r475, %r1462, %rd694, %rd694, %rd694, %rd694);
	// inline asm
	ld.u32 	%rd691, [%rd684];
	mov.u64 	%rd697, buf_light_sample_L;
	cvta.global.u64 	%rd690, %rd697;
	mov.u32 	%r1470, 4;
	// inline asm
	call (%rd689), _rt_buffer_get_64, (%rd690, %r475, %r1470, %rd691, %rd694, %rd694, %rd694);
	// inline asm
	ld.u32 	%r1471, [%rd689];
	// inline asm
	call (%rd695), _rt_callable_program_from_id_64, (%r1471);
	// inline asm
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd684;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_56 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd695, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_56;
	
	//{
	}// Callseq End 56
	ld.local.v2.f32 	{%f3239, %f3240}, [%rd2+12];
	mul.f32 	%f3243, %f3240, %f3240;
	fma.rn.f32 	%f3244, %f3239, %f3239, %f3243;
	ld.local.v4.f32 	{%f3245, %f3246, %f3247, %f3248}, [%rd2+20];
	fma.rn.f32 	%f3250, %f3245, %f3245, %f3244;
	sqrt.rn.f32 	%f3238, %f3250;
	rcp.rn.f32 	%f3251, %f3238;
	mul.f32 	%f3236, %f3251, %f3245;
	mul.f32 	%f3235, %f3251, %f3240;
	mul.f32 	%f3234, %f3251, %f3239;
	st.local.v2.f32 	[%rd2+12], {%f3234, %f3235};
	st.local.f32 	[%rd2+20], %f3236;
	ld.global.f32 	%f3237, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1472, [topObject];
	mov.u32 	%r1473, 2;
	// inline asm
	call _rt_trace_64, (%r1472, %f3246, %f3247, %f3248, %f3234, %f3235, %f3236, %r1473, %f3237, %f3238, %rd683, %r475);
	// inline asm
	ld.local.u8 	%rs27, [%rd101];
	setp.ne.s16	%p427, %rs27, 0;
	mov.u32 	%r1706, %r475;
	@%p427 bra 	BB1_532;

	ld.f32 	%f3252, [%rd105+312];
	ld.global.v4.f32 	{%f3253, %f3254, %f3255, %f3256}, [prdR+96];
	mul.f32 	%f3258, %f3252, %f3256;
	mul.f32 	%f3260, %f3252, %f3255;
	mul.f32 	%f3262, %f3252, %f3254;
	mul.f32 	%f3264, %f3252, %f3253;
	st.global.v4.f32 	[prdR+96], {%f3264, %f3262, %f3260, %f3258};
	mov.u32 	%r1706, %r475;

BB1_532:
	ld.global.u32 	%r1477, [dataRenderer+160];
	cvt.u64.u32	%rd701, %r1706;
	mov.u64 	%rd710, 0;
	// inline asm
	call (%rd700), _rt_buffer_get_id_64, (%r1477, %r475, %r1462, %rd701, %rd710, %rd710, %rd710);
	// inline asm
	ld.u32 	%rd707, [%rd700];
	mov.u64 	%rd713, buf_light_sample_L;
	cvta.global.u64 	%rd706, %rd713;
	mov.u32 	%r1481, 4;
	// inline asm
	call (%rd705), _rt_buffer_get_64, (%rd706, %r475, %r1481, %rd707, %rd710, %rd710, %rd710);
	// inline asm
	ld.u32 	%r1482, [%rd705];
	// inline asm
	call (%rd711), _rt_callable_program_from_id_64, (%r1482);
	// inline asm
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd700;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_57 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd711, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_57;
	
	//{
	}// Callseq End 57
	ld.local.v2.f32 	{%f3273, %f3274}, [%rd2+12];
	mul.f32 	%f3277, %f3274, %f3274;
	fma.rn.f32 	%f3278, %f3273, %f3273, %f3277;
	ld.local.v4.f32 	{%f3279, %f3280, %f3281, %f3282}, [%rd2+20];
	fma.rn.f32 	%f3284, %f3279, %f3279, %f3278;
	sqrt.rn.f32 	%f3272, %f3284;
	rcp.rn.f32 	%f3285, %f3272;
	mul.f32 	%f3270, %f3285, %f3279;
	mul.f32 	%f3269, %f3285, %f3274;
	mul.f32 	%f3268, %f3285, %f3273;
	st.local.v2.f32 	[%rd2+12], {%f3268, %f3269};
	st.local.f32 	[%rd2+20], %f3270;
	ld.global.f32 	%f3271, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1483, [topObject];
	mov.u32 	%r1484, 2;
	// inline asm
	call _rt_trace_64, (%r1483, %f3280, %f3281, %f3282, %f3268, %f3269, %f3270, %r1484, %f3271, %f3272, %rd683, %r475);
	// inline asm
	ld.local.u8 	%rs29, [%rd101];
	setp.ne.s16	%p428, %rs29, 0;
	@%p428 bra 	BB1_534;

	ld.f32 	%f3286, [%rd105+312];
	ld.global.v4.f32 	{%f3287, %f3288, %f3289, %f3290}, [prdR+96];
	mul.f32 	%f3292, %f3286, %f3290;
	mul.f32 	%f3294, %f3286, %f3289;
	mul.f32 	%f3296, %f3286, %f3288;
	mul.f32 	%f3298, %f3286, %f3287;
	st.global.v4.f32 	[prdR+96], {%f3298, %f3296, %f3294, %f3292};

BB1_534:
	add.s32 	%r1707, %r1706, 1;

BB1_535:
	ld.global.u32 	%r1486, [dataRenderer+160];
	cvt.u64.u32	%rd717, %r1707;
	mov.u32 	%r1494, 1;
	mov.u64 	%rd726, 0;
	// inline asm
	call (%rd716), _rt_buffer_get_id_64, (%r1486, %r1494, %r1462, %rd717, %rd726, %rd726, %rd726);
	// inline asm
	ld.u32 	%rd723, [%rd716];
	mov.u64 	%rd729, buf_light_sample_L;
	cvta.global.u64 	%rd722, %rd729;
	mov.u32 	%r1490, 4;
	// inline asm
	call (%rd721), _rt_buffer_get_64, (%rd722, %r1494, %r1490, %rd723, %rd726, %rd726, %rd726);
	// inline asm
	ld.u32 	%r1491, [%rd721];
	// inline asm
	call (%rd727), _rt_callable_program_from_id_64, (%r1491);
	// inline asm
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd716;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_58 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd727, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_58;
	
	//{
	}// Callseq End 58
	ld.local.v2.f32 	{%f3307, %f3308}, [%rd2+12];
	mul.f32 	%f3311, %f3308, %f3308;
	fma.rn.f32 	%f3312, %f3307, %f3307, %f3311;
	ld.local.v4.f32 	{%f3313, %f3314, %f3315, %f3316}, [%rd2+20];
	fma.rn.f32 	%f3318, %f3313, %f3313, %f3312;
	sqrt.rn.f32 	%f3306, %f3318;
	rcp.rn.f32 	%f3319, %f3306;
	mul.f32 	%f3304, %f3319, %f3313;
	mul.f32 	%f3303, %f3319, %f3308;
	mul.f32 	%f3302, %f3319, %f3307;
	st.local.v2.f32 	[%rd2+12], {%f3302, %f3303};
	st.local.f32 	[%rd2+20], %f3304;
	ld.global.f32 	%f3305, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1492, [topObject];
	mov.u32 	%r1493, 2;
	// inline asm
	call _rt_trace_64, (%r1492, %f3314, %f3315, %f3316, %f3302, %f3303, %f3304, %r1493, %f3305, %f3306, %rd683, %r1494);
	// inline asm
	ld.local.u8 	%rs31, [%rd101];
	setp.ne.s16	%p429, %rs31, 0;
	@%p429 bra 	BB1_537;

	ld.f32 	%f3320, [%rd105+312];
	ld.global.v4.f32 	{%f3321, %f3322, %f3323, %f3324}, [prdR+96];
	mul.f32 	%f3326, %f3320, %f3324;
	mul.f32 	%f3328, %f3320, %f3323;
	mul.f32 	%f3330, %f3320, %f3322;
	mul.f32 	%f3332, %f3320, %f3321;
	st.global.v4.f32 	[prdR+96], {%f3332, %f3330, %f3328, %f3326};

BB1_537:
	add.s32 	%r1709, %r1707, 1;

BB1_538:
	setp.lt.u32	%p430, %r461, 4;
	@%p430 bra 	BB1_548;

BB1_539:
	ld.global.u32 	%r1495, [dataRenderer+160];
	cvt.u64.u32	%rd733, %r1709;
	mov.u32 	%r1503, 1;
	mov.u64 	%rd742, 0;
	// inline asm
	call (%rd732), _rt_buffer_get_id_64, (%r1495, %r1503, %r1462, %rd733, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%rd739, [%rd732];
	mov.u64 	%rd745, buf_light_sample_L;
	cvta.global.u64 	%rd738, %rd745;
	mov.u32 	%r1499, 4;
	// inline asm
	call (%rd737), _rt_buffer_get_64, (%rd738, %r1503, %r1499, %rd739, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%r1500, [%rd737];
	// inline asm
	call (%rd743), _rt_callable_program_from_id_64, (%r1500);
	// inline asm
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd732;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_59 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd743, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_59;
	
	//{
	}// Callseq End 59
	ld.local.v2.f32 	{%f3341, %f3342}, [%rd2+12];
	mul.f32 	%f3345, %f3342, %f3342;
	fma.rn.f32 	%f3346, %f3341, %f3341, %f3345;
	ld.local.v4.f32 	{%f3347, %f3348, %f3349, %f3350}, [%rd2+20];
	fma.rn.f32 	%f3352, %f3347, %f3347, %f3346;
	sqrt.rn.f32 	%f3340, %f3352;
	rcp.rn.f32 	%f3353, %f3340;
	mul.f32 	%f3338, %f3353, %f3347;
	mul.f32 	%f3337, %f3353, %f3342;
	mul.f32 	%f3336, %f3353, %f3341;
	st.local.v2.f32 	[%rd2+12], {%f3336, %f3337};
	st.local.f32 	[%rd2+20], %f3338;
	ld.global.f32 	%f3339, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1501, [topObject];
	mov.u32 	%r1502, 2;
	// inline asm
	call _rt_trace_64, (%r1501, %f3348, %f3349, %f3350, %f3336, %f3337, %f3338, %r1502, %f3339, %f3340, %rd683, %r1503);
	// inline asm
	ld.local.u8 	%rs33, [%rd101];
	setp.ne.s16	%p431, %rs33, 0;
	@%p431 bra 	BB1_541;

	ld.f32 	%f3354, [%rd105+312];
	ld.global.v4.f32 	{%f3355, %f3356, %f3357, %f3358}, [prdR+96];
	mul.f32 	%f3360, %f3354, %f3358;
	mul.f32 	%f3362, %f3354, %f3357;
	mul.f32 	%f3364, %f3354, %f3356;
	mul.f32 	%f3366, %f3354, %f3355;
	st.global.v4.f32 	[prdR+96], {%f3366, %f3364, %f3362, %f3360};

BB1_541:
	ld.global.u32 	%r1504, [dataRenderer+160];
	add.s32 	%r1513, %r1709, 1;
	cvt.u64.u32	%rd749, %r1513;
	// inline asm
	call (%rd748), _rt_buffer_get_id_64, (%r1504, %r1503, %r1462, %rd749, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%rd755, [%rd748];
	// inline asm
	call (%rd753), _rt_buffer_get_64, (%rd738, %r1503, %r1499, %rd755, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%r1509, [%rd753];
	// inline asm
	call (%rd759), _rt_callable_program_from_id_64, (%r1509);
	// inline asm
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd748;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_60 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd759, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_60;
	
	//{
	}// Callseq End 60
	ld.local.v2.f32 	{%f3375, %f3376}, [%rd2+12];
	mul.f32 	%f3379, %f3376, %f3376;
	fma.rn.f32 	%f3380, %f3375, %f3375, %f3379;
	ld.local.v4.f32 	{%f3381, %f3382, %f3383, %f3384}, [%rd2+20];
	fma.rn.f32 	%f3386, %f3381, %f3381, %f3380;
	sqrt.rn.f32 	%f3374, %f3386;
	rcp.rn.f32 	%f3387, %f3374;
	mul.f32 	%f3372, %f3387, %f3381;
	mul.f32 	%f3371, %f3387, %f3376;
	mul.f32 	%f3370, %f3387, %f3375;
	st.local.v2.f32 	[%rd2+12], {%f3370, %f3371};
	st.local.f32 	[%rd2+20], %f3372;
	ld.global.f32 	%f3373, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1510, [topObject];
	// inline asm
	call _rt_trace_64, (%r1510, %f3382, %f3383, %f3384, %f3370, %f3371, %f3372, %r1502, %f3373, %f3374, %rd683, %r1503);
	// inline asm
	ld.local.u8 	%rs35, [%rd101];
	setp.ne.s16	%p432, %rs35, 0;
	@%p432 bra 	BB1_543;

	ld.f32 	%f3388, [%rd105+312];
	ld.global.v4.f32 	{%f3389, %f3390, %f3391, %f3392}, [prdR+96];
	mul.f32 	%f3394, %f3388, %f3392;
	mul.f32 	%f3396, %f3388, %f3391;
	mul.f32 	%f3398, %f3388, %f3390;
	mul.f32 	%f3400, %f3388, %f3389;
	st.global.v4.f32 	[prdR+96], {%f3400, %f3398, %f3396, %f3394};

BB1_543:
	ld.global.u32 	%r1514, [dataRenderer+160];
	add.s32 	%r1523, %r1709, 2;
	cvt.u64.u32	%rd765, %r1523;
	// inline asm
	call (%rd764), _rt_buffer_get_id_64, (%r1514, %r1503, %r1462, %rd765, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%rd771, [%rd764];
	// inline asm
	call (%rd769), _rt_buffer_get_64, (%rd738, %r1503, %r1499, %rd771, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%r1519, [%rd769];
	// inline asm
	call (%rd775), _rt_callable_program_from_id_64, (%r1519);
	// inline asm
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd764;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_61 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd775, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_61;
	
	//{
	}// Callseq End 61
	ld.local.v2.f32 	{%f3409, %f3410}, [%rd2+12];
	mul.f32 	%f3413, %f3410, %f3410;
	fma.rn.f32 	%f3414, %f3409, %f3409, %f3413;
	ld.local.v4.f32 	{%f3415, %f3416, %f3417, %f3418}, [%rd2+20];
	fma.rn.f32 	%f3420, %f3415, %f3415, %f3414;
	sqrt.rn.f32 	%f3408, %f3420;
	rcp.rn.f32 	%f3421, %f3408;
	mul.f32 	%f3406, %f3421, %f3415;
	mul.f32 	%f3405, %f3421, %f3410;
	mul.f32 	%f3404, %f3421, %f3409;
	st.local.v2.f32 	[%rd2+12], {%f3404, %f3405};
	st.local.f32 	[%rd2+20], %f3406;
	ld.global.f32 	%f3407, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1520, [topObject];
	// inline asm
	call _rt_trace_64, (%r1520, %f3416, %f3417, %f3418, %f3404, %f3405, %f3406, %r1502, %f3407, %f3408, %rd683, %r1503);
	// inline asm
	ld.local.u8 	%rs37, [%rd101];
	setp.ne.s16	%p433, %rs37, 0;
	@%p433 bra 	BB1_545;

	ld.f32 	%f3422, [%rd105+312];
	ld.global.v4.f32 	{%f3423, %f3424, %f3425, %f3426}, [prdR+96];
	mul.f32 	%f3428, %f3422, %f3426;
	mul.f32 	%f3430, %f3422, %f3425;
	mul.f32 	%f3432, %f3422, %f3424;
	mul.f32 	%f3434, %f3422, %f3423;
	st.global.v4.f32 	[prdR+96], {%f3434, %f3432, %f3430, %f3428};

BB1_545:
	ld.global.u32 	%r1524, [dataRenderer+160];
	add.s32 	%r1533, %r1709, 3;
	cvt.u64.u32	%rd781, %r1533;
	// inline asm
	call (%rd780), _rt_buffer_get_id_64, (%r1524, %r1503, %r1462, %rd781, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%rd787, [%rd780];
	// inline asm
	call (%rd785), _rt_buffer_get_64, (%rd738, %r1503, %r1499, %rd787, %rd742, %rd742, %rd742);
	// inline asm
	ld.u32 	%r1529, [%rd785];
	// inline asm
	call (%rd791), _rt_callable_program_from_id_64, (%r1529);
	// inline asm
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd780;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_62 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd791, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_62;
	
	//{
	}// Callseq End 62
	ld.local.v2.f32 	{%f3443, %f3444}, [%rd2+12];
	mul.f32 	%f3447, %f3444, %f3444;
	fma.rn.f32 	%f3448, %f3443, %f3443, %f3447;
	ld.local.v4.f32 	{%f3449, %f3450, %f3451, %f3452}, [%rd2+20];
	fma.rn.f32 	%f3454, %f3449, %f3449, %f3448;
	sqrt.rn.f32 	%f3442, %f3454;
	rcp.rn.f32 	%f3455, %f3442;
	mul.f32 	%f3440, %f3455, %f3449;
	mul.f32 	%f3439, %f3455, %f3444;
	mul.f32 	%f3438, %f3455, %f3443;
	st.local.v2.f32 	[%rd2+12], {%f3438, %f3439};
	st.local.f32 	[%rd2+20], %f3440;
	ld.global.f32 	%f3441, [dataRenderer+8];
	st.local.u8 	[%rd101], %rs25;
	ld.global.u32 	%r1530, [topObject];
	// inline asm
	call _rt_trace_64, (%r1530, %f3450, %f3451, %f3452, %f3438, %f3439, %f3440, %r1502, %f3441, %f3442, %rd683, %r1503);
	// inline asm
	ld.local.u8 	%rs39, [%rd101];
	setp.ne.s16	%p434, %rs39, 0;
	@%p434 bra 	BB1_547;

	ld.f32 	%f3456, [%rd105+312];
	ld.global.v4.f32 	{%f3457, %f3458, %f3459, %f3460}, [prdR+96];
	mul.f32 	%f3462, %f3456, %f3460;
	mul.f32 	%f3464, %f3456, %f3459;
	mul.f32 	%f3466, %f3456, %f3458;
	mul.f32 	%f3468, %f3456, %f3457;
	st.global.v4.f32 	[prdR+96], {%f3468, %f3466, %f3464, %f3462};

BB1_547:
	add.s32 	%r1709, %r1709, 4;
	setp.lt.u32	%p435, %r1709, %r461;
	@%p435 bra 	BB1_539;

BB1_548:
	cvta.to.local.u64 	%rd840, %rd112;
	ld.local.u32 	%r1534, [%rd840];
	st.global.u32 	[prdR], %r1534;
	bra.uni 	BB1_560;

BB1_497:
	setp.eq.f32	%p401, %f594, 0f7F800000;
	@%p401 bra 	BB1_500;
	bra.uni 	BB1_498;

BB1_500:
	setp.gt.f32	%p404, %f593, 0f3F800000;
	selp.b32	%r1419, 2139095040, 0, %p404;
	xor.b32  	%r1420, %r1419, 2139095040;
	setp.lt.f32	%p405, %f591, 0f00000000;
	selp.b32	%r1421, %r1420, %r1419, %p405;
	mov.b32 	 %f3072, %r1421;
	setp.eq.f32	%p406, %f590, 0fBF800000;
	selp.f32	%f3797, 0f3F800000, %f3072, %p406;
	bra.uni 	BB1_502;

BB1_408:
	setp.eq.f32	%p284, %f443, 0f7F800000;
	@%p284 bra 	BB1_411;
	bra.uni 	BB1_409;

BB1_411:
	setp.gt.f32	%p287, %f442, 0f3F800000;
	selp.b32	%r1237, 2139095040, 0, %p287;
	xor.b32  	%r1238, %r1237, 2139095040;
	setp.lt.f32	%p288, %f2051, 0f00000000;
	selp.b32	%r1239, %r1238, %r1237, %p288;
	mov.b32 	 %f2136, %r1239;
	setp.eq.f32	%p289, %f439, 0fBF800000;
	selp.f32	%f3738, 0f3F800000, %f2136, %p289;
	bra.uni 	BB1_413;

BB1_430:
	setp.eq.f32	%p320, %f483, 0f7F800000;
	@%p320 bra 	BB1_433;
	bra.uni 	BB1_431;

BB1_433:
	setp.gt.f32	%p323, %f482, 0f3F800000;
	selp.b32	%r1288, 2139095040, 0, %p323;
	xor.b32  	%r1289, %r1288, 2139095040;
	setp.lt.f32	%p324, %f480, 0f00000000;
	selp.b32	%r1290, %r1289, %r1288, %p324;
	mov.b32 	 %f2410, %r1290;
	setp.eq.f32	%p325, %f479, 0fBF800000;
	selp.f32	%f3753, 0f3F800000, %f2410, %p325;
	bra.uni 	BB1_435;

BB1_207:
	setp.geu.f32	%p138, %f209, 0f00000000;
	@%p138 bra 	BB1_210;

	cvt.rzi.f32.f32	%f1406, %f1324;
	setp.neu.f32	%p139, %f1406, %f1324;
	selp.f32	%f3658, 0f7FFFFFFF, %f3658, %p139;

BB1_210:
	add.f32 	%f1408, %f212, %f213;
	mov.b32 	 %r844, %f1408;
	setp.lt.s32	%p142, %r844, 2139095040;
	@%p142 bra 	BB1_217;

	setp.gtu.f32	%p143, %f212, 0f7F800000;
	setp.gtu.f32	%p144, %f213, 0f7F800000;
	or.pred  	%p145, %p143, %p144;
	@%p145 bra 	BB1_216;
	bra.uni 	BB1_212;

BB1_216:
	add.f32 	%f3658, %f1324, %f209;
	bra.uni 	BB1_217;

BB1_462:
	setp.neu.f32	%p358, %f526, 0f7F800000;
	@%p358 bra 	BB1_466;

	setp.ltu.f32	%p359, %f524, 0f00000000;
	selp.b32	%r1334, 0, 2139095040, %p359;
	or.b32  	%r1335, %r1334, -2147483648;
	selp.b32	%r1336, %r1335, %r1334, %p4;
	mov.b32 	 %f3769, %r1336;

BB1_466:
	setp.eq.f32	%p363, %f524, 0f00000000;
	setp.eq.f32	%p364, %f523, 0f3F800000;
	or.pred  	%p365, %p364, %p363;
	selp.f32	%f540, 0f3F800000, %f3769, %p365;
	setp.lt.f32	%p366, %f521, %f522;
	@%p366 bra 	BB1_468;
	bra.uni 	BB1_467;

BB1_468:
	sub.f32 	%f2656, %f522, %f521;
	fma.rn.f32 	%f2657, %f540, %f2656, %f521;
	min.f32 	%f2658, %f2657, %f522;
	max.f32 	%f2659, %f521, %f2658;
	sub.f32 	%f3770, %f2571, %f2659;
	bra.uni 	BB1_469;

BB1_467:
	sub.f32 	%f2653, %f521, %f522;
	fma.rn.f32 	%f2654, %f540, %f2653, %f522;
	min.f32 	%f2655, %f2654, %f521;
	max.f32 	%f3770, %f522, %f2655;

BB1_469:
	ld.global.u32 	%r1340, [GetSample1];
	// inline asm
	call (%rd491), _rt_callable_program_from_id_64, (%r1340);
	// inline asm
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b32 retval0;
	prototype_34 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd491, 
	(
	param0
	)
	, prototype_34;
	ld.param.f32	%f2661, [retval0+0];
	
	//{
	}// Callseq End 34
	setp.lt.f32	%p367, %f2661, %f3770;
	@%p367 bra 	BB1_479;
	bra.uni 	BB1_470;

BB1_479:
	mov.u64 	%rd542, buf_lm_sample_F;
	cvta.global.u64 	%rd536, %rd542;
	mov.u32 	%r1363, 4;
	mov.u64 	%rd537, 2;
	mov.u64 	%rd540, 0;
	// inline asm
	call (%rd535), _rt_buffer_get_64, (%rd536, %r475, %r1363, %rd537, %rd540, %rd540, %rd540);
	// inline asm
	ld.u32 	%r1364, [%rd535];
	// inline asm
	call (%rd541), _rt_callable_program_from_id_64, (%r1364);
	// inline asm
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_38 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd541, 
	(
	param0, 
	param1
	)
	, prototype_38;
	
	//{
	}// Callseq End 38
	ld.v4.f32 	{%f2736, %f2737, %f2738, %f2739}, [%rd105+224];
	st.global.v4.f32 	[prdR+48], {%f2736, %f2737, %f2738, %f2739};
	ld.global.f32 	%f2744, [prdR+80];
	setp.leu.f32	%p374, %f2744, 0f3F800000;
	@%p374 bra 	BB1_481;

	mov.u32 	%r1365, 1065353216;
	st.global.u32 	[prdR+80], %r1365;

BB1_481:
	mov.f32 	%f2745, 0f00000000;
	st.local.v4.f32 	[%rd2+52], {%f2745, %f2745, %f2745, %f2745};
	bra.uni 	BB1_558;

BB1_470:
	ld.global.u32 	%r1341, [dataRenderer+160];
	mov.u32 	%r1343, 176;
	// inline asm
	call (%rd493, %rd494, %rd495, %rd496), _rt_buffer_get_id_size_64, (%r1341, %r475, %r1343);
	// inline asm
	cvt.u32.u64	%r451, %rd493;
	setp.eq.s32	%p368, %r451, 0;
	mov.f32 	%f3777, %f3778;
	mov.f32 	%f3776, %f3778;
	mov.f32 	%f3775, %f3778;
	@%p368 bra 	BB1_478;

	add.u64 	%rd498, %SP, 0;
	cvta.to.local.u64 	%rd91, %rd498;
	mov.f32 	%f3778, 0f00000000;
	mov.u32 	%r1703, 0;
	mov.u64 	%rd497, 0;
	mov.u64 	%rd872, %rd497;
	mov.f32 	%f3777, %f3778;
	mov.f32 	%f3776, %f3778;
	mov.f32 	%f3775, %f3778;

BB1_472:
	ld.global.u32 	%r1345, [dataRenderer+160];
	// inline asm
	call (%rd499), _rt_buffer_get_id_64, (%r1345, %r475, %r1343, %rd872, %rd497, %rd497, %rd497);
	// inline asm
	ld.u32 	%rd506, [%rd499];
	mov.u64 	%rd511, buf_light_sample_L;
	cvta.global.u64 	%rd505, %rd511;
	mov.u32 	%r1349, 4;
	// inline asm
	call (%rd504), _rt_buffer_get_64, (%rd505, %r475, %r1349, %rd506, %rd497, %rd497, %rd497);
	// inline asm
	ld.u32 	%r1350, [%rd504];
	// inline asm
	call (%rd510), _rt_callable_program_from_id_64, (%r1350);
	// inline asm
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd499;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_35 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd510, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_35;
	
	//{
	}// Callseq End 35
	ld.local.v4.f32 	{%f2670, %f2671, %f2672, %f2673}, [%rd2+52];
	mul.f32 	%f2675, %f2671, 0f3F170A3D;
	fma.rn.f32 	%f2677, %f2670, 0f3E99999A, %f2675;
	fma.rn.f32 	%f2679, %f2672, 0f3DE147AE, %f2677;
	fma.rn.f32 	%f2681, %f2673, 0f00000000, %f2679;
	setp.le.f32	%p369, %f2681, 0f358637BD;
	@%p369 bra 	BB1_477;

	ld.local.f32 	%f2682, [%rd2+36];
	setp.le.f32	%p370, %f2682, 0f3A83126F;
	@%p370 bra 	BB1_477;

	ld.local.v2.f32 	{%f2683, %f2684}, [%rd2+12];
	mul.f32 	%f2687, %f2684, %f2684;
	fma.rn.f32 	%f2688, %f2683, %f2683, %f2687;
	ld.local.f32 	%f2689, [%rd2+20];
	fma.rn.f32 	%f2690, %f2689, %f2689, %f2688;
	sqrt.rn.f32 	%f548, %f2690;
	rcp.rn.f32 	%f2691, %f548;
	mul.f32 	%f549, %f2691, %f2683;
	mul.f32 	%f550, %f2691, %f2684;
	mul.f32 	%f551, %f2691, %f2689;
	ld.local.v4.f32 	{%f2692, %f2693, %f2694, %f2695}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f549, %f550};
	st.local.f32 	[%rd2+20], %f551;
	ld.local.f32 	%f2696, [%rd2+16];
	mul.f32 	%f2698, %f2696, %f2693;
	fma.rn.f32 	%f2700, %f549, %f2692, %f2698;
	ld.local.f32 	%f2702, [%rd2+20];
	fma.rn.f32 	%f552, %f2702, %f2694, %f2700;
	setp.leu.f32	%p371, %f552, 0f00000000;
	@%p371 bra 	BB1_477;

	ld.global.f32 	%f2709, [dataRenderer+8];
	ld.local.f32 	%f2705, [%rd2+32];
	ld.local.f32 	%f2704, [%rd2+28];
	ld.local.f32 	%f2703, [%rd2+24];
	mov.u16 	%rs16, 1;
	st.local.u8 	[%rd91], %rs16;
	ld.global.u32 	%r1351, [topObject];
	mov.u32 	%r1352, 2;
	// inline asm
	call _rt_trace_64, (%r1351, %f2703, %f2704, %f2705, %f549, %f550, %f551, %r1352, %f2709, %f548, %rd498, %r475);
	// inline asm
	ld.local.u8 	%rs17, [%rd91];
	setp.eq.s16	%p372, %rs17, 0;
	@%p372 bra 	BB1_477;

	mov.u64 	%rd522, buf_lm_F;
	cvta.global.u64 	%rd516, %rd522;
	mov.u64 	%rd520, 0;
	// inline asm
	call (%rd515), _rt_buffer_get_64, (%rd516, %r475, %r1349, %rd520, %rd520, %rd520, %rd520);
	// inline asm
	ld.u32 	%r1356, [%rd515];
	// inline asm
	call (%rd521), _rt_callable_program_from_id_64, (%r1356);
	// inline asm
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_36 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd521, 
	(
	param0, 
	param1
	)
	, prototype_36;
	
	//{
	}// Callseq End 36
	ld.local.v2.f32 	{%f2711, %f2712}, [%rd2+36];
	ld.local.v4.f32 	{%f2715, %f2716, %f2717, %f2718}, [%rd2+52];
	mul.f32 	%f2720, %f2712, %f2715;
	mul.f32 	%f2722, %f2712, %f2716;
	mul.f32 	%f2724, %f2712, %f2717;
	mul.f32 	%f2726, %f2712, %f2718;
	mul.f32 	%f2727, %f552, %f2720;
	mul.f32 	%f2728, %f552, %f2722;
	mul.f32 	%f2729, %f552, %f2724;
	mul.f32 	%f2730, %f552, %f2726;
	rcp.rn.f32 	%f2731, %f2711;
	fma.rn.f32 	%f3775, %f2727, %f2731, %f3775;
	fma.rn.f32 	%f3776, %f2728, %f2731, %f3776;
	fma.rn.f32 	%f3777, %f2729, %f2731, %f3777;
	fma.rn.f32 	%f3778, %f2730, %f2731, %f3778;

BB1_477:
	add.s64 	%rd872, %rd872, 1;
	add.s32 	%r1703, %r1703, 1;
	setp.lt.u32	%p373, %r1703, %r451;
	@%p373 bra 	BB1_472;

BB1_478:
	st.local.v4.f32 	[%rd2+52], {%f3775, %f3776, %f3777, %f3778};
	mul.f32 	%f2732, %f8, %f16;
	mul.f32 	%f2733, %f7, %f15;
	mul.f32 	%f2734, %f6, %f14;
	mul.f32 	%f2735, %f5, %f13;
	st.global.v4.f32 	[prdR+48], {%f2735, %f2734, %f2733, %f2732};
	mov.u64 	%rd532, buf_lm_sample_F;
	cvta.global.u64 	%rd526, %rd532;
	mov.u32 	%r1358, 4;
	mov.u64 	%rd530, 0;
	// inline asm
	call (%rd525), _rt_buffer_get_64, (%rd526, %r475, %r1358, %rd530, %rd530, %rd530, %rd530);
	// inline asm
	ld.u32 	%r1359, [%rd525];
	// inline asm
	call (%rd531), _rt_callable_program_from_id_64, (%r1359);
	// inline asm
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_37 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd531, 
	(
	param0, 
	param1
	)
	, prototype_37;
	
	//{
	}// Callseq End 37
	mov.u32 	%r1360, 0;
	st.global.u32 	[prdR+80], %r1360;
	ld.global.u32 	%r1361, [dataRenderer+164];
	st.global.u32 	[prdR+4], %r1361;
	bra.uni 	BB1_558;

BB1_212:
	setp.eq.f32	%p146, %f213, 0f7F800000;
	@%p146 bra 	BB1_215;
	bra.uni 	BB1_213;

BB1_215:
	setp.gt.f32	%p149, %f212, 0f3F800000;
	selp.b32	%r848, 2139095040, 0, %p149;
	xor.b32  	%r849, %r848, 2139095040;
	setp.lt.f32	%p150, %f1324, 0f00000000;
	selp.b32	%r850, %r849, %r848, %p150;
	mov.b32 	 %f1409, %r850;
	setp.eq.f32	%p151, %f209, 0fBF800000;
	selp.f32	%f3658, 0f3F800000, %f1409, %p151;
	bra.uni 	BB1_217;

BB1_53:
	mov.u32 	%r1582, %r13;
	mov.u32 	%r1583, %r22;

BB1_55:
	clz.b32 	%r1585, %r1581;
	setp.eq.s32	%p39, %r1585, 0;
	shl.b32 	%r548, %r1581, %r1585;
	mov.u32 	%r549, 32;
	sub.s32 	%r550, %r549, %r1585;
	shr.u32 	%r551, %r1583, %r550;
	add.s32 	%r552, %r551, %r548;
	selp.b32	%r31, %r1581, %r552, %p39;
	mov.u32 	%r553, -921707870;
	mul.hi.u32 	%r1584, %r31, %r553;
	setp.eq.s32	%p40, %r13, 0;
	neg.s32 	%r554, %r23;
	selp.b32	%r1586, %r23, %r554, %p40;
	setp.lt.s32	%p41, %r1584, 1;
	@%p41 bra 	BB1_57;

	mul.lo.s32 	%r555, %r31, -921707870;
	shr.u32 	%r556, %r555, 31;
	shl.b32 	%r557, %r1584, 1;
	add.s32 	%r1584, %r556, %r557;
	add.s32 	%r1585, %r1585, 1;

BB1_57:
	mov.u32 	%r558, 126;
	sub.s32 	%r559, %r558, %r1585;
	shl.b32 	%r560, %r559, 23;
	add.s32 	%r561, %r1584, 1;
	shr.u32 	%r562, %r561, 7;
	add.s32 	%r563, %r562, 1;
	shr.u32 	%r564, %r563, 1;
	add.s32 	%r565, %r564, %r560;
	or.b32  	%r566, %r565, %r1582;
	mov.b32 	 %f3604, %r566;

BB1_58:
	mul.rn.f32 	%f52, %f3604, %f3604;
	and.b32  	%r39, %r1586, 1;
	setp.eq.s32	%p42, %r39, 0;
	@%p42 bra 	BB1_60;

	mov.f32 	%f944, 0fBAB6061A;
	mov.f32 	%f945, 0f37CCF5CE;
	fma.rn.f32 	%f3605, %f945, %f52, %f944;
	bra.uni 	BB1_61;

BB1_60:
	mov.f32 	%f946, 0f3C08839E;
	mov.f32 	%f947, 0fB94CA1F9;
	fma.rn.f32 	%f3605, %f947, %f52, %f946;

BB1_61:
	@%p42 bra 	BB1_63;

	mov.f32 	%f948, 0f3D2AAAA5;
	fma.rn.f32 	%f949, %f3605, %f52, %f948;
	mov.f32 	%f950, 0fBF000000;
	fma.rn.f32 	%f3606, %f949, %f52, %f950;
	bra.uni 	BB1_64;

BB1_63:
	mov.f32 	%f951, 0fBE2AAAA3;
	fma.rn.f32 	%f952, %f3605, %f52, %f951;
	mov.f32 	%f953, 0f00000000;
	fma.rn.f32 	%f3606, %f952, %f52, %f953;

BB1_64:
	fma.rn.f32 	%f3607, %f3606, %f3604, %f3604;
	@%p42 bra 	BB1_66;

	mov.f32 	%f954, 0f3F800000;
	fma.rn.f32 	%f3607, %f3606, %f52, %f954;

BB1_66:
	and.b32  	%r567, %r1586, 2;
	setp.eq.s32	%p45, %r567, 0;
	@%p45 bra 	BB1_68;

	mov.f32 	%f955, 0f00000000;
	mov.f32 	%f956, 0fBF800000;
	fma.rn.f32 	%f3607, %f3607, %f956, %f955;

BB1_68:
	mul.f32 	%f957, %f3607, 0f472AEE8C;
	abs.f32 	%f958, %f957;
	cvt.rzi.s32.f32	%r568, %f958;
	cvt.rn.f32.s32	%f959, %r568;
	sub.f32 	%f64, %f958, %f959;
	mul.f32 	%f960, %f42, 0f429C774C;
	fma.rn.f32 	%f961, %f41, 0f414FD639, %f960;
	fma.rn.f32 	%f962, %f43, 0f4234A7F0, %f961;
	fma.rn.f32 	%f963, %f44, 0f42BD5893, %f962;
	fma.rn.f32 	%f964, %f45, 0f4234A7F0, %f963;
	fma.rn.f32 	%f3609, %f40, 0f429C774C, %f964;
	abs.f32 	%f965, %f3609;
	setp.neu.f32	%p46, %f965, 0f7F800000;
	@%p46 bra 	BB1_70;

	mov.f32 	%f966, 0f00000000;
	mul.rn.f32 	%f3609, %f3609, %f966;

BB1_70:
	mul.f32 	%f967, %f3609, 0f3F22F983;
	cvt.rni.s32.f32	%r1596, %f967;
	cvt.rn.f32.s32	%f968, %r1596;
	neg.f32 	%f969, %f968;
	fma.rn.f32 	%f971, %f969, %f938, %f3609;
	fma.rn.f32 	%f973, %f969, %f940, %f971;
	fma.rn.f32 	%f3610, %f969, %f942, %f973;
	abs.f32 	%f975, %f3609;
	setp.leu.f32	%p47, %f975, 0f47CE4780;
	@%p47 bra 	BB1_81;

	mov.b32 	 %r41, %f3609;
	shr.u32 	%r42, %r41, 23;
	shl.b32 	%r571, %r41, 8;
	or.b32  	%r43, %r571, -2147483648;
	mov.u32 	%r1588, 0;
	mov.u64 	%rd844, __cudart_i2opi_f;
	mov.u32 	%r1587, -6;
	mov.u64 	%rd845, %rd8;

BB1_72:
	.pragma "nounroll";
	ld.const.u32 	%r574, [%rd844];
	// inline asm
	{
	mad.lo.cc.u32   %r572, %r574, %r43, %r1588;
	madc.hi.u32     %r1588, %r574, %r43,  0;
	}
	// inline asm
	st.local.u32 	[%rd845], %r572;
	add.s64 	%rd845, %rd845, 4;
	add.s64 	%rd844, %rd844, 4;
	add.s32 	%r1587, %r1587, 1;
	setp.ne.s32	%p48, %r1587, 0;
	@%p48 bra 	BB1_72;

	and.b32  	%r577, %r42, 255;
	add.s32 	%r578, %r577, -128;
	shr.u32 	%r579, %r578, 5;
	and.b32  	%r48, %r41, -2147483648;
	st.local.u32 	[%rd9], %r1588;
	mov.u32 	%r580, 6;
	sub.s32 	%r581, %r580, %r579;
	mul.wide.s32 	%rd170, %r581, 4;
	add.s64 	%rd19, %rd8, %rd170;
	ld.local.u32 	%r1589, [%rd19];
	ld.local.u32 	%r1590, [%rd19+-4];
	and.b32  	%r51, %r42, 31;
	setp.eq.s32	%p49, %r51, 0;
	@%p49 bra 	BB1_75;

	mov.u32 	%r582, 32;
	sub.s32 	%r583, %r582, %r51;
	shr.u32 	%r584, %r1590, %r583;
	shl.b32 	%r585, %r1589, %r51;
	add.s32 	%r1589, %r584, %r585;
	ld.local.u32 	%r586, [%rd19+-8];
	shr.u32 	%r587, %r586, %r583;
	shl.b32 	%r588, %r1590, %r51;
	add.s32 	%r1590, %r587, %r588;

BB1_75:
	shr.u32 	%r589, %r1590, 30;
	shl.b32 	%r590, %r1589, 2;
	add.s32 	%r1591, %r589, %r590;
	shl.b32 	%r57, %r1590, 2;
	shr.u32 	%r591, %r1591, 31;
	shr.u32 	%r592, %r1589, 30;
	add.s32 	%r58, %r591, %r592;
	setp.eq.s32	%p50, %r591, 0;
	@%p50 bra 	BB1_76;

	not.b32 	%r593, %r1591;
	neg.s32 	%r1593, %r57;
	setp.eq.s32	%p51, %r57, 0;
	selp.u32	%r594, 1, 0, %p51;
	add.s32 	%r1591, %r594, %r593;
	xor.b32  	%r1592, %r48, -2147483648;
	bra.uni 	BB1_78;

BB1_498:
	setp.neu.f32	%p402, %f593, 0f7F800000;
	@%p402 bra 	BB1_502;

	setp.ltu.f32	%p403, %f591, 0f00000000;
	selp.b32	%r1416, 0, 2139095040, %p403;
	or.b32  	%r1417, %r1416, -2147483648;
	selp.b32	%r1418, %r1417, %r1416, %p5;
	mov.b32 	 %f3797, %r1418;

BB1_502:
	setp.eq.f32	%p407, %f591, 0f00000000;
	setp.eq.f32	%p408, %f590, 0f3F800000;
	or.pred  	%p409, %p408, %p407;
	selp.f32	%f3073, 0f3F800000, %f3797, %p409;
	fma.rn.f32 	%f3074, %f589, %f3073, %f588;
	min.f32 	%f3075, %f3074, %f587;
	max.f32 	%f3076, %f588, %f3075;
	setp.lt.f32	%p410, %f586, %f3076;
	@%p410 bra 	BB1_504;
	bra.uni 	BB1_503;

BB1_504:
	mov.u64 	%rd623, buf_lm_sample_F;
	cvta.global.u64 	%rd617, %rd623;
	mov.u32 	%r1426, 4;
	mov.u64 	%rd618, 2;
	mov.u64 	%rd621, 0;
	// inline asm
	call (%rd616), _rt_buffer_get_64, (%rd617, %r475, %r1426, %rd618, %rd621, %rd621, %rd621);
	// inline asm
	ld.u32 	%r1427, [%rd616];
	// inline asm
	call (%rd622), _rt_callable_program_from_id_64, (%r1427);
	// inline asm
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_49 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd622, 
	(
	param0, 
	param1
	)
	, prototype_49;
	
	//{
	}// Callseq End 49
	st.global.v4.f32 	[prdR+48], {%f13, %f14, %f15, %f16};
	bra.uni 	BB1_505;

BB1_503:
	mov.u64 	%rd613, buf_lm_sample_F;
	cvta.global.u64 	%rd607, %rd613;
	mov.u32 	%r1423, 4;
	mov.u64 	%rd608, 3;
	mov.u64 	%rd611, 0;
	// inline asm
	call (%rd606), _rt_buffer_get_64, (%rd607, %r475, %r1423, %rd608, %rd611, %rd611, %rd611);
	// inline asm
	ld.u32 	%r1424, [%rd606];
	// inline asm
	call (%rd612), _rt_callable_program_from_id_64, (%r1424);
	// inline asm
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_48 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd612, 
	(
	param0, 
	param1
	)
	, prototype_48;
	
	//{
	}// Callseq End 48
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};

BB1_505:
	st.local.v4.f32 	[%rd2+52], {%f2934, %f2934, %f2934, %f2934};
	ld.global.f32 	%f3078, [prdR+80];
	setp.leu.f32	%p411, %f3078, 0f3F800000;
	@%p411 bra 	BB1_558;

	mov.u32 	%r1428, 1065353216;
	st.global.u32 	[prdR+80], %r1428;
	bra.uni 	BB1_558;

BB1_409:
	setp.neu.f32	%p285, %f442, 0f7F800000;
	@%p285 bra 	BB1_413;

	setp.ltu.f32	%p286, %f2051, 0f00000000;
	selp.b32	%r1234, 0, 2139095040, %p286;
	or.b32  	%r1235, %r1234, -2147483648;
	selp.b32	%r1236, %r1235, %r1234, %p2;
	mov.b32 	 %f3738, %r1236;

BB1_413:
	setp.eq.f32	%p290, %f2051, 0f00000000;
	setp.eq.f32	%p291, %f439, 0f3F800000;
	or.pred  	%p292, %p291, %p290;
	selp.f32	%f2137, 0f3F800000, %f3738, %p292;
	fma.rn.f32 	%f2138, %f438, %f2137, %f2052;
	min.f32 	%f2139, %f2138, %f2053;
	max.f32 	%f2140, %f2052, %f2139;
	setp.lt.f32	%p293, %f413, %f2140;
	@%p293 bra 	BB1_424;
	bra.uni 	BB1_414;

BB1_424:
	mov.u32 	%r1569, 7937;
	ld.global.v2.f32 	{%f2219, %f2220}, [aInset];
	ld.global.v2.f32 	{%f2223, %f2224}, [aInset+8];
	ld.global.v2.f32 	{%f2227, %f2228}, [aInset+16];
	ld.global.v2.f32 	{%f2231, %f2232}, [aInset+24];
	ld.global.v2.f32 	{%f2235, %f2236}, [aInset+32];
	ld.global.v2.f32 	{%f2239, %f2240}, [aInset+40];
	ld.global.v2.f32 	{%f2243, %f2244}, [aInset+48];
	ld.global.v2.f32 	{%f2247, %f2248}, [aInset+56];
	ld.global.v2.f32 	{%f2251, %f2252}, [aInset+64];
	mov.b32 	 %r1267, %f2252;
	ld.global.u32 	%r1262, [GetTexture_normal];
	// inline asm
	call (%rd420), _rt_callable_program_from_id_64, (%r1262);
	// inline asm
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd105;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f2219;
	st.param.f32	[param1+4], %f2220;
	st.param.f32	[param1+8], %f2223;
	st.param.f32	[param1+12], %f2224;
	st.param.f32	[param1+16], %f2227;
	st.param.f32	[param1+20], %f2228;
	st.param.f32	[param1+24], %f2231;
	st.param.f32	[param1+28], %f2232;
	st.param.f32	[param1+32], %f2235;
	st.param.f32	[param1+36], %f2236;
	st.param.f32	[param1+40], %f2239;
	st.param.f32	[param1+44], %f2240;
	st.param.f32	[param1+48], %f2243;
	st.param.f32	[param1+52], %f2244;
	st.param.f32	[param1+56], %f2247;
	st.param.f32	[param1+60], %f2248;
	st.param.f32	[param1+64], %f2251;
	st.param.b32	[param1+68], %r1267;
	.param .align 4 .b8 retval0[12];
	prototype_25 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd420, 
	(
	param0, 
	param1
	)
	, prototype_25;
	ld.param.f32	%f2215, [retval0+0];
	ld.param.f32	%f2216, [retval0+4];
	ld.param.f32	%f2217, [retval0+8];
	
	//{
	}// Callseq End 25
	mov.f32 	%f2218, 0f00000000;
	// inline asm
	call (%f2211, %f2212, %f2213, %f2214), _rt_transform_tuple, (%r1569, %f2215, %f2216, %f2217, %f2218);
	// inline asm
	mul.f32 	%f2255, %f2212, %f2212;
	fma.rn.f32 	%f2256, %f2211, %f2211, %f2255;
	fma.rn.f32 	%f2257, %f2213, %f2213, %f2256;
	sqrt.rn.f32 	%f2258, %f2257;
	rcp.rn.f32 	%f2259, %f2258;
	mul.f32 	%f2260, %f2213, %f2259;
	mul.f32 	%f2261, %f2212, %f2259;
	mul.f32 	%f2262, %f2211, %f2259;
	st.local.v2.f32 	[%rd2+-12], {%f2262, %f2261};
	st.local.f32 	[%rd2+-4], %f2260;
	mov.u64 	%rd428, buf_lm_sample_F;
	cvta.global.u64 	%rd422, %rd428;
	mov.u32 	%r1265, 4;
	mov.u64 	%rd423, 2;
	mov.u64 	%rd426, 0;
	// inline asm
	call (%rd421), _rt_buffer_get_64, (%rd422, %r475, %r1265, %rd423, %rd426, %rd426, %rd426);
	// inline asm
	ld.u32 	%r1266, [%rd421];
	// inline asm
	call (%rd427), _rt_callable_program_from_id_64, (%r1266);
	// inline asm
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_26 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd427, 
	(
	param0, 
	param1
	)
	, prototype_26;
	
	//{
	}// Callseq End 26
	ld.f32 	%f2263, [%rd105];
	ld.f32 	%f2264, [%rd105+4];
	ld.f32 	%f2265, [%rd105+8];
	ld.f32 	%f2266, [%rd105+12];
	st.global.f32 	[prdR+60], %f2266;
	st.global.f32 	[prdR+56], %f2265;
	st.global.f32 	[prdR+52], %f2264;
	st.global.f32 	[prdR+48], %f2263;
	ld.global.f32 	%f2267, [prdR+80];
	setp.leu.f32	%p301, %f2267, 0f3F800000;
	@%p301 bra 	BB1_426;

	mov.u32 	%r1268, 1065353216;
	st.global.u32 	[prdR+80], %r1268;

BB1_426:
	st.local.v4.f32 	[%rd2+52], {%f2218, %f2218, %f2218, %f2218};
	bra.uni 	BB1_558;

BB1_414:
	ld.global.u32 	%r1240, [dataRenderer+160];
	mov.u32 	%r1242, 176;
	// inline asm
	call (%rd378, %rd379, %rd380, %rd381), _rt_buffer_get_id_size_64, (%r1240, %r475, %r1242);
	// inline asm
	cvt.u32.u64	%r444, %rd378;
	setp.eq.s32	%p294, %r444, 0;
	mov.f32 	%f3745, %f3746;
	mov.f32 	%f3744, %f3746;
	mov.f32 	%f3743, %f3746;
	@%p294 bra 	BB1_422;

	add.u64 	%rd383, %SP, 0;
	cvta.to.local.u64 	%rd85, %rd383;
	mov.f32 	%f3746, 0f00000000;
	mov.u32 	%r1701, 0;
	mov.u64 	%rd382, 0;
	mov.u64 	%rd870, %rd382;
	mov.f32 	%f3745, %f3746;
	mov.f32 	%f3744, %f3746;
	mov.f32 	%f3743, %f3746;

BB1_416:
	ld.global.u32 	%r1244, [dataRenderer+160];
	// inline asm
	call (%rd384), _rt_buffer_get_id_64, (%r1244, %r475, %r1242, %rd870, %rd382, %rd382, %rd382);
	// inline asm
	ld.u32 	%rd391, [%rd384];
	mov.u64 	%rd396, buf_light_sample_L;
	cvta.global.u64 	%rd390, %rd396;
	mov.u32 	%r1248, 4;
	// inline asm
	call (%rd389), _rt_buffer_get_64, (%rd390, %r475, %r1248, %rd391, %rd382, %rd382, %rd382);
	// inline asm
	ld.u32 	%r1249, [%rd389];
	// inline asm
	call (%rd395), _rt_callable_program_from_id_64, (%r1249);
	// inline asm
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd384;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_22 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd395, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_22;
	
	//{
	}// Callseq End 22
	ld.local.v4.f32 	{%f2149, %f2150, %f2151, %f2152}, [%rd2+52];
	mul.f32 	%f2154, %f2150, 0f3F170A3D;
	fma.rn.f32 	%f2156, %f2149, 0f3E99999A, %f2154;
	fma.rn.f32 	%f2158, %f2151, 0f3DE147AE, %f2156;
	fma.rn.f32 	%f2160, %f2152, 0f00000000, %f2158;
	setp.le.f32	%p295, %f2160, 0f358637BD;
	@%p295 bra 	BB1_421;

	ld.local.f32 	%f2161, [%rd2+36];
	setp.le.f32	%p296, %f2161, 0f3A83126F;
	@%p296 bra 	BB1_421;

	ld.local.v2.f32 	{%f2162, %f2163}, [%rd2+12];
	mul.f32 	%f2166, %f2163, %f2163;
	fma.rn.f32 	%f2167, %f2162, %f2162, %f2166;
	ld.local.f32 	%f2168, [%rd2+20];
	fma.rn.f32 	%f2169, %f2168, %f2168, %f2167;
	sqrt.rn.f32 	%f460, %f2169;
	rcp.rn.f32 	%f2170, %f460;
	mul.f32 	%f461, %f2170, %f2162;
	mul.f32 	%f462, %f2170, %f2163;
	mul.f32 	%f463, %f2170, %f2168;
	ld.local.v4.f32 	{%f2171, %f2172, %f2173, %f2174}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f461, %f462};
	st.local.f32 	[%rd2+20], %f463;
	ld.local.f32 	%f2175, [%rd2+16];
	mul.f32 	%f2177, %f2175, %f2172;
	fma.rn.f32 	%f2179, %f461, %f2171, %f2177;
	ld.local.f32 	%f2181, [%rd2+20];
	fma.rn.f32 	%f464, %f2181, %f2173, %f2179;
	setp.leu.f32	%p297, %f464, 0f00000000;
	@%p297 bra 	BB1_421;

	ld.global.f32 	%f2188, [dataRenderer+8];
	ld.local.f32 	%f2184, [%rd2+32];
	ld.local.f32 	%f2183, [%rd2+28];
	ld.local.f32 	%f2182, [%rd2+24];
	mov.u16 	%rs12, 1;
	st.local.u8 	[%rd85], %rs12;
	ld.global.u32 	%r1250, [topObject];
	mov.u32 	%r1251, 2;
	// inline asm
	call _rt_trace_64, (%r1250, %f2182, %f2183, %f2184, %f461, %f462, %f463, %r1251, %f2188, %f460, %rd383, %r475);
	// inline asm
	ld.local.u8 	%rs13, [%rd85];
	setp.eq.s16	%p298, %rs13, 0;
	@%p298 bra 	BB1_421;

	mov.u64 	%rd407, buf_lm_F;
	cvta.global.u64 	%rd401, %rd407;
	mov.u64 	%rd405, 0;
	// inline asm
	call (%rd400), _rt_buffer_get_64, (%rd401, %r475, %r1248, %rd405, %rd405, %rd405, %rd405);
	// inline asm
	ld.u32 	%r1255, [%rd400];
	// inline asm
	call (%rd406), _rt_callable_program_from_id_64, (%r1255);
	// inline asm
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_23 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd406, 
	(
	param0, 
	param1
	)
	, prototype_23;
	
	//{
	}// Callseq End 23
	ld.local.v2.f32 	{%f2190, %f2191}, [%rd2+36];
	ld.local.v4.f32 	{%f2194, %f2195, %f2196, %f2197}, [%rd2+52];
	mul.f32 	%f2199, %f2191, %f2194;
	mul.f32 	%f2201, %f2191, %f2195;
	mul.f32 	%f2203, %f2191, %f2196;
	mul.f32 	%f2205, %f2191, %f2197;
	mul.f32 	%f2206, %f464, %f2199;
	mul.f32 	%f2207, %f464, %f2201;
	mul.f32 	%f2208, %f464, %f2203;
	mul.f32 	%f2209, %f464, %f2205;
	rcp.rn.f32 	%f2210, %f2190;
	fma.rn.f32 	%f3743, %f2206, %f2210, %f3743;
	fma.rn.f32 	%f3744, %f2207, %f2210, %f3744;
	fma.rn.f32 	%f3745, %f2208, %f2210, %f3745;
	fma.rn.f32 	%f3746, %f2209, %f2210, %f3746;

BB1_421:
	add.s64 	%rd870, %rd870, 1;
	add.s32 	%r1701, %r1701, 1;
	setp.lt.u32	%p299, %r1701, %r444;
	@%p299 bra 	BB1_416;

BB1_422:
	st.local.v4.f32 	[%rd2+52], {%f3743, %f3744, %f3745, %f3746};
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u64 	%rd417, buf_lm_sample_F;
	cvta.global.u64 	%rd411, %rd417;
	mov.u32 	%r1257, 4;
	mov.u64 	%rd415, 0;
	// inline asm
	call (%rd410), _rt_buffer_get_64, (%rd411, %r475, %r1257, %rd415, %rd415, %rd415, %rd415);
	// inline asm
	ld.u32 	%r1258, [%rd410];
	// inline asm
	call (%rd416), _rt_callable_program_from_id_64, (%r1258);
	// inline asm
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_24 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd416, 
	(
	param0, 
	param1
	)
	, prototype_24;
	
	//{
	}// Callseq End 24
	mov.u32 	%r1259, 0;
	st.global.u32 	[prdR+80], %r1259;
	ld.global.u32 	%r1260, [dataRenderer+164];
	add.s32 	%r447, %r1260, -1;
	ld.global.u32 	%r1261, [prdR+4];
	setp.ge.u32	%p300, %r1261, %r447;
	@%p300 bra 	BB1_558;

	add.s32 	%r1563, %r1260, -1;
	st.global.u32 	[prdR+4], %r1563;
	bra.uni 	BB1_558;

BB1_431:
	setp.neu.f32	%p321, %f482, 0f7F800000;
	@%p321 bra 	BB1_435;

	setp.ltu.f32	%p322, %f480, 0f00000000;
	selp.b32	%r1285, 0, 2139095040, %p322;
	or.b32  	%r1286, %r1285, -2147483648;
	selp.b32	%r1287, %r1286, %r1285, %p3;
	mov.b32 	 %f3753, %r1287;

BB1_435:
	setp.eq.f32	%p326, %f480, 0f00000000;
	setp.eq.f32	%p327, %f479, 0f3F800000;
	or.pred  	%p328, %p327, %p326;
	selp.f32	%f496, 0f3F800000, %f3753, %p328;
	setp.lt.f32	%p329, %f477, %f478;
	@%p329 bra 	BB1_437;
	bra.uni 	BB1_436;

BB1_437:
	sub.f32 	%f2414, %f478, %f477;
	fma.rn.f32 	%f2415, %f496, %f2414, %f477;
	min.f32 	%f2416, %f2415, %f478;
	max.f32 	%f2417, %f477, %f2416;
	sub.f32 	%f3754, %f2330, %f2417;
	bra.uni 	BB1_438;

BB1_436:
	sub.f32 	%f2411, %f477, %f478;
	fma.rn.f32 	%f2412, %f496, %f2411, %f478;
	min.f32 	%f2413, %f2412, %f477;
	max.f32 	%f3754, %f478, %f2413;

BB1_438:
	ld.global.u32 	%r1291, [GetSample1];
	// inline asm
	call (%rd433), _rt_callable_program_from_id_64, (%r1291);
	// inline asm
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd112;
	.param .b32 retval0;
	prototype_28 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd433, 
	(
	param0
	)
	, prototype_28;
	ld.param.f32	%f2419, [retval0+0];
	
	//{
	}// Callseq End 28
	setp.lt.f32	%p330, %f2419, %f3754;
	@%p330 bra 	BB1_448;
	bra.uni 	BB1_439;

BB1_448:
	mov.u64 	%rd484, buf_lm_sample_F;
	cvta.global.u64 	%rd478, %rd484;
	mov.u32 	%r1314, 4;
	mov.u64 	%rd479, 2;
	mov.u64 	%rd482, 0;
	// inline asm
	call (%rd477), _rt_buffer_get_64, (%rd478, %r475, %r1314, %rd479, %rd482, %rd482, %rd482);
	// inline asm
	ld.u32 	%r1315, [%rd477];
	// inline asm
	call (%rd483), _rt_callable_program_from_id_64, (%r1315);
	// inline asm
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_32 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd483, 
	(
	param0, 
	param1
	)
	, prototype_32;
	
	//{
	}// Callseq End 32
	ld.v4.f32 	{%f2494, %f2495, %f2496, %f2497}, [%rd105+224];
	st.global.v4.f32 	[prdR+48], {%f2494, %f2495, %f2496, %f2497};
	ld.global.f32 	%f2502, [prdR+80];
	setp.leu.f32	%p337, %f2502, 0f3F800000;
	@%p337 bra 	BB1_450;

	mov.u32 	%r1316, 1065353216;
	st.global.u32 	[prdR+80], %r1316;

BB1_450:
	mov.f32 	%f2503, 0f00000000;
	st.local.v4.f32 	[%rd2+52], {%f2503, %f2503, %f2503, %f2503};
	bra.uni 	BB1_558;

BB1_439:
	ld.global.u32 	%r1292, [dataRenderer+160];
	mov.u32 	%r1294, 176;
	// inline asm
	call (%rd435, %rd436, %rd437, %rd438), _rt_buffer_get_id_size_64, (%r1292, %r475, %r1294);
	// inline asm
	cvt.u32.u64	%r448, %rd435;
	setp.eq.s32	%p331, %r448, 0;
	mov.f32 	%f3761, %f3762;
	mov.f32 	%f3760, %f3762;
	mov.f32 	%f3759, %f3762;
	@%p331 bra 	BB1_447;

	add.u64 	%rd440, %SP, 0;
	cvta.to.local.u64 	%rd88, %rd440;
	mov.f32 	%f3762, 0f00000000;
	mov.u32 	%r1702, 0;
	mov.u64 	%rd439, 0;
	mov.u64 	%rd871, %rd439;
	mov.f32 	%f3761, %f3762;
	mov.f32 	%f3760, %f3762;
	mov.f32 	%f3759, %f3762;

BB1_441:
	ld.global.u32 	%r1296, [dataRenderer+160];
	// inline asm
	call (%rd441), _rt_buffer_get_id_64, (%r1296, %r475, %r1294, %rd871, %rd439, %rd439, %rd439);
	// inline asm
	ld.u32 	%rd448, [%rd441];
	mov.u64 	%rd453, buf_light_sample_L;
	cvta.global.u64 	%rd447, %rd453;
	mov.u32 	%r1300, 4;
	// inline asm
	call (%rd446), _rt_buffer_get_64, (%rd447, %r475, %r1300, %rd448, %rd439, %rd439, %rd439);
	// inline asm
	ld.u32 	%r1301, [%rd446];
	// inline asm
	call (%rd452), _rt_callable_program_from_id_64, (%r1301);
	// inline asm
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd441;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_29 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd452, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_29;
	
	//{
	}// Callseq End 29
	ld.local.v4.f32 	{%f2428, %f2429, %f2430, %f2431}, [%rd2+52];
	mul.f32 	%f2433, %f2429, 0f3F170A3D;
	fma.rn.f32 	%f2435, %f2428, 0f3E99999A, %f2433;
	fma.rn.f32 	%f2437, %f2430, 0f3DE147AE, %f2435;
	fma.rn.f32 	%f2439, %f2431, 0f00000000, %f2437;
	setp.le.f32	%p332, %f2439, 0f358637BD;
	@%p332 bra 	BB1_446;

	ld.local.f32 	%f2440, [%rd2+36];
	setp.le.f32	%p333, %f2440, 0f3A83126F;
	@%p333 bra 	BB1_446;

	ld.local.v2.f32 	{%f2441, %f2442}, [%rd2+12];
	mul.f32 	%f2445, %f2442, %f2442;
	fma.rn.f32 	%f2446, %f2441, %f2441, %f2445;
	ld.local.f32 	%f2447, [%rd2+20];
	fma.rn.f32 	%f2448, %f2447, %f2447, %f2446;
	sqrt.rn.f32 	%f504, %f2448;
	rcp.rn.f32 	%f2449, %f504;
	mul.f32 	%f505, %f2449, %f2441;
	mul.f32 	%f506, %f2449, %f2442;
	mul.f32 	%f507, %f2449, %f2447;
	ld.local.v4.f32 	{%f2450, %f2451, %f2452, %f2453}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f505, %f506};
	st.local.f32 	[%rd2+20], %f507;
	ld.local.f32 	%f2454, [%rd2+16];
	mul.f32 	%f2456, %f2454, %f2451;
	fma.rn.f32 	%f2458, %f505, %f2450, %f2456;
	ld.local.f32 	%f2460, [%rd2+20];
	fma.rn.f32 	%f508, %f2460, %f2452, %f2458;
	setp.leu.f32	%p334, %f508, 0f00000000;
	@%p334 bra 	BB1_446;

	ld.global.f32 	%f2467, [dataRenderer+8];
	ld.local.f32 	%f2463, [%rd2+32];
	ld.local.f32 	%f2462, [%rd2+28];
	ld.local.f32 	%f2461, [%rd2+24];
	mov.u16 	%rs14, 1;
	st.local.u8 	[%rd88], %rs14;
	ld.global.u32 	%r1302, [topObject];
	mov.u32 	%r1303, 2;
	// inline asm
	call _rt_trace_64, (%r1302, %f2461, %f2462, %f2463, %f505, %f506, %f507, %r1303, %f2467, %f504, %rd440, %r475);
	// inline asm
	ld.local.u8 	%rs15, [%rd88];
	setp.eq.s16	%p335, %rs15, 0;
	@%p335 bra 	BB1_446;

	mov.u64 	%rd464, buf_lm_F;
	cvta.global.u64 	%rd458, %rd464;
	mov.u64 	%rd462, 0;
	// inline asm
	call (%rd457), _rt_buffer_get_64, (%rd458, %r475, %r1300, %rd462, %rd462, %rd462, %rd462);
	// inline asm
	ld.u32 	%r1307, [%rd457];
	// inline asm
	call (%rd463), _rt_callable_program_from_id_64, (%r1307);
	// inline asm
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_30 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd463, 
	(
	param0, 
	param1
	)
	, prototype_30;
	
	//{
	}// Callseq End 30
	ld.local.v2.f32 	{%f2469, %f2470}, [%rd2+36];
	ld.local.v4.f32 	{%f2473, %f2474, %f2475, %f2476}, [%rd2+52];
	mul.f32 	%f2478, %f2470, %f2473;
	mul.f32 	%f2480, %f2470, %f2474;
	mul.f32 	%f2482, %f2470, %f2475;
	mul.f32 	%f2484, %f2470, %f2476;
	mul.f32 	%f2485, %f508, %f2478;
	mul.f32 	%f2486, %f508, %f2480;
	mul.f32 	%f2487, %f508, %f2482;
	mul.f32 	%f2488, %f508, %f2484;
	rcp.rn.f32 	%f2489, %f2469;
	fma.rn.f32 	%f3759, %f2485, %f2489, %f3759;
	fma.rn.f32 	%f3760, %f2486, %f2489, %f3760;
	fma.rn.f32 	%f3761, %f2487, %f2489, %f3761;
	fma.rn.f32 	%f3762, %f2488, %f2489, %f3762;

BB1_446:
	add.s64 	%rd871, %rd871, 1;
	add.s32 	%r1702, %r1702, 1;
	setp.lt.u32	%p336, %r1702, %r448;
	@%p336 bra 	BB1_441;

BB1_447:
	st.local.v4.f32 	[%rd2+52], {%f3759, %f3760, %f3761, %f3762};
	mul.f32 	%f2490, %f8, %f16;
	mul.f32 	%f2491, %f7, %f15;
	mul.f32 	%f2492, %f6, %f14;
	mul.f32 	%f2493, %f5, %f13;
	st.global.v4.f32 	[prdR+48], {%f2493, %f2492, %f2491, %f2490};
	mov.u64 	%rd474, buf_lm_sample_F;
	cvta.global.u64 	%rd468, %rd474;
	mov.u32 	%r1309, 4;
	mov.u64 	%rd472, 0;
	// inline asm
	call (%rd467), _rt_buffer_get_64, (%rd468, %r475, %r1309, %rd472, %rd472, %rd472, %rd472);
	// inline asm
	ld.u32 	%r1310, [%rd467];
	// inline asm
	call (%rd473), _rt_callable_program_from_id_64, (%r1310);
	// inline asm
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_31 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd473, 
	(
	param0, 
	param1
	)
	, prototype_31;
	
	//{
	}// Callseq End 31
	mov.u32 	%r1311, 0;
	st.global.u32 	[prdR+80], %r1311;
	ld.global.u32 	%r1312, [dataRenderer+164];
	st.global.u32 	[prdR+4], %r1312;
	bra.uni 	BB1_558;

BB1_76:
	mov.u32 	%r1592, %r48;
	mov.u32 	%r1593, %r57;

BB1_78:
	clz.b32 	%r1595, %r1591;
	setp.eq.s32	%p52, %r1595, 0;
	shl.b32 	%r595, %r1591, %r1595;
	mov.u32 	%r596, 32;
	sub.s32 	%r597, %r596, %r1595;
	shr.u32 	%r598, %r1593, %r597;
	add.s32 	%r599, %r598, %r595;
	selp.b32	%r66, %r1591, %r599, %p52;
	mov.u32 	%r600, -921707870;
	mul.hi.u32 	%r1594, %r66, %r600;
	setp.eq.s32	%p53, %r48, 0;
	neg.s32 	%r601, %r58;
	selp.b32	%r1596, %r58, %r601, %p53;
	setp.lt.s32	%p54, %r1594, 1;
	@%p54 bra 	BB1_80;

	mul.lo.s32 	%r602, %r66, -921707870;
	shr.u32 	%r603, %r602, 31;
	shl.b32 	%r604, %r1594, 1;
	add.s32 	%r1594, %r603, %r604;
	add.s32 	%r1595, %r1595, 1;

BB1_80:
	mov.u32 	%r605, 126;
	sub.s32 	%r606, %r605, %r1595;
	shl.b32 	%r607, %r606, 23;
	add.s32 	%r608, %r1594, 1;
	shr.u32 	%r609, %r608, 7;
	add.s32 	%r610, %r609, 1;
	shr.u32 	%r611, %r610, 1;
	add.s32 	%r612, %r611, %r607;
	or.b32  	%r613, %r612, %r1592;
	mov.b32 	 %f3610, %r613;

BB1_81:
	mul.rn.f32 	%f71, %f3610, %f3610;
	and.b32  	%r74, %r1596, 1;
	setp.eq.s32	%p55, %r74, 0;
	@%p55 bra 	BB1_83;

	mov.f32 	%f976, 0fBAB6061A;
	mov.f32 	%f977, 0f37CCF5CE;
	fma.rn.f32 	%f3611, %f977, %f71, %f976;
	bra.uni 	BB1_84;

BB1_83:
	mov.f32 	%f978, 0f3C08839E;
	mov.f32 	%f979, 0fB94CA1F9;
	fma.rn.f32 	%f3611, %f979, %f71, %f978;

BB1_84:
	@%p55 bra 	BB1_86;

	mov.f32 	%f980, 0f3D2AAAA5;
	fma.rn.f32 	%f981, %f3611, %f71, %f980;
	mov.f32 	%f982, 0fBF000000;
	fma.rn.f32 	%f3612, %f981, %f71, %f982;
	bra.uni 	BB1_87;

BB1_86:
	mov.f32 	%f983, 0fBE2AAAA3;
	fma.rn.f32 	%f984, %f3611, %f71, %f983;
	mov.f32 	%f985, 0f00000000;
	fma.rn.f32 	%f3612, %f984, %f71, %f985;

BB1_87:
	fma.rn.f32 	%f3614, %f3612, %f3610, %f3610;
	@%p55 bra 	BB1_89;

	mov.f32 	%f986, 0f3F800000;
	fma.rn.f32 	%f3614, %f3612, %f71, %f986;

BB1_89:
	and.b32  	%r614, %r1596, 2;
	setp.eq.s32	%p58, %r614, 0;
	@%p58 bra 	BB1_91;

	mov.f32 	%f987, 0f00000000;
	mov.f32 	%f988, 0fBF800000;
	fma.rn.f32 	%f3614, %f3614, %f988, %f987;

BB1_91:
	ld.f32 	%f83, [%rd161+276];
	setp.lt.f32	%p59, %f64, %f83;
	@%p59 bra 	BB1_102;
	bra.uni 	BB1_92;

BB1_102:
	mul.f32 	%f1059, %f3614, 0f472AEE8C;
	abs.f32 	%f1060, %f1059;
	div.rn.f32 	%f1061, %f64, %f83;
	ld.f32 	%f105, [%rd161+260];
	mov.f32 	%f1062, 0f3F800000;
	sub.f32 	%f1063, %f1062, %f1061;
	setp.lt.f32	%p67, %f1063, 0f00800000;
	mul.f32 	%f1064, %f1063, 0f4B000000;
	selp.f32	%f106, %f1064, %f1063, %p67;
	selp.f32	%f1065, 0fC1B80000, 0f00000000, %p67;
	mov.b32 	 %r637, %f106;
	add.s32 	%r638, %r637, -1059760811;
	and.b32  	%r639, %r638, -8388608;
	sub.s32 	%r640, %r637, %r639;
	mov.b32 	 %f1066, %r640;
	cvt.rn.f32.s32	%f1067, %r639;
	mov.f32 	%f1068, 0f34000000;
	fma.rn.f32 	%f1069, %f1067, %f1068, %f1065;
	add.f32 	%f1070, %f1066, 0fBF800000;
	mov.f32 	%f1071, 0f3E1039F6;
	mov.f32 	%f1072, 0fBE055027;
	fma.rn.f32 	%f1073, %f1072, %f1070, %f1071;
	mov.f32 	%f1074, 0fBDF8CDCC;
	fma.rn.f32 	%f1075, %f1073, %f1070, %f1074;
	mov.f32 	%f1076, 0f3E0F2955;
	fma.rn.f32 	%f1077, %f1075, %f1070, %f1076;
	mov.f32 	%f1078, 0fBE2AD8B9;
	fma.rn.f32 	%f1079, %f1077, %f1070, %f1078;
	mov.f32 	%f1080, 0f3E4CED0B;
	fma.rn.f32 	%f1081, %f1079, %f1070, %f1080;
	mov.f32 	%f1082, 0fBE7FFF22;
	fma.rn.f32 	%f1083, %f1081, %f1070, %f1082;
	mov.f32 	%f1084, 0f3EAAAA78;
	fma.rn.f32 	%f1085, %f1083, %f1070, %f1084;
	mov.f32 	%f1086, 0fBF000000;
	fma.rn.f32 	%f1087, %f1085, %f1070, %f1086;
	mul.f32 	%f1088, %f1070, %f1087;
	fma.rn.f32 	%f1089, %f1088, %f1070, %f1070;
	mov.f32 	%f1090, 0f3F317218;
	fma.rn.f32 	%f3627, %f1069, %f1090, %f1089;
	cvt.rzi.s32.f32	%r641, %f1060;
	cvt.rn.f32.s32	%f1091, %r641;
	sub.f32 	%f108, %f1060, %f1091;
	setp.lt.u32	%p68, %r637, 2139095040;
	@%p68 bra 	BB1_104;

	mov.f32 	%f1092, 0f7F800000;
	fma.rn.f32 	%f3627, %f106, %f1092, %f1092;

BB1_104:
	neg.f32 	%f1093, %f3627;
	setp.eq.f32	%p69, %f106, 0f00000000;
	selp.f32	%f1094, 0f7F800000, %f1093, %p69;
	sqrt.rn.f32 	%f1095, %f1094;
	mul.f32 	%f111, %f105, %f1095;
	abs.f32 	%f112, %f111;
	setp.leu.f32	%p70, %f112, 0f3F800000;
	mov.f32 	%f3628, %f112;
	@%p70 bra 	BB1_106;

	rcp.rn.f32 	%f3628, %f112;

BB1_106:
	mul.rn.f32 	%f1096, %f3628, %f3628;
	mov.f32 	%f1097, 0fC0B59883;
	mov.f32 	%f1098, 0fBF52C7EA;
	fma.rn.f32 	%f1099, %f1096, %f1098, %f1097;
	mov.f32 	%f1100, 0fC0D21907;
	fma.rn.f32 	%f1101, %f1099, %f1096, %f1100;
	mul.f32 	%f1102, %f1096, %f1101;
	mul.f32 	%f1103, %f3628, %f1102;
	add.f32 	%f1104, %f1096, 0f41355DC0;
	mov.f32 	%f1105, 0f41E6BD60;
	fma.rn.f32 	%f1106, %f1104, %f1096, %f1105;
	mov.f32 	%f1107, 0f419D92C8;
	fma.rn.f32 	%f1108, %f1106, %f1096, %f1107;
	rcp.rn.f32 	%f1109, %f1108;
	fma.rn.f32 	%f1110, %f1103, %f1109, %f3628;
	mov.f32 	%f1111, 0f3FC90FDB;
	sub.f32 	%f1112, %f1111, %f1110;
	setp.gt.f32	%p71, %f112, 0f3F800000;
	selp.f32	%f1113, %f1112, %f1110, %p71;
	mov.b32 	 %r642, %f1113;
	mov.b32 	 %r643, %f111;
	and.b32  	%r644, %r643, -2147483648;
	or.b32  	%r645, %r642, %r644;
	mov.b32 	 %f1114, %r645;
	setp.gtu.f32	%p72, %f112, 0f7F800000;
	selp.f32	%f3635, %f1113, %f1114, %p72;
	abs.f32 	%f116, %f3635;
	setp.neu.f32	%p73, %f116, 0f7F800000;
	mov.f32 	%f3629, %f3635;
	@%p73 bra 	BB1_108;

	mov.f32 	%f1115, 0f00000000;
	mul.rn.f32 	%f3629, %f3635, %f1115;

BB1_108:
	mul.f32 	%f1116, %f3629, 0f3F22F983;
	cvt.rni.s32.f32	%r1607, %f1116;
	cvt.rn.f32.s32	%f1117, %r1607;
	neg.f32 	%f1118, %f1117;
	fma.rn.f32 	%f1120, %f1118, %f938, %f3629;
	fma.rn.f32 	%f1122, %f1118, %f940, %f1120;
	fma.rn.f32 	%f3630, %f1118, %f942, %f1122;
	abs.f32 	%f1124, %f3629;
	setp.leu.f32	%p74, %f1124, 0f47CE4780;
	@%p74 bra 	BB1_119;

	mov.b32 	 %r80, %f3629;
	shr.u32 	%r81, %r80, 23;
	shl.b32 	%r648, %r80, 8;
	or.b32  	%r82, %r648, -2147483648;
	mov.u32 	%r1599, 0;
	mov.u64 	%rd847, __cudart_i2opi_f;
	mov.u32 	%r1598, -6;
	mov.u64 	%rd848, %rd8;

BB1_110:
	.pragma "nounroll";
	ld.const.u32 	%r651, [%rd847];
	// inline asm
	{
	mad.lo.cc.u32   %r649, %r651, %r82, %r1599;
	madc.hi.u32     %r1599, %r651, %r82,  0;
	}
	// inline asm
	st.local.u32 	[%rd848], %r649;
	add.s64 	%rd848, %rd848, 4;
	add.s64 	%rd847, %rd847, 4;
	add.s32 	%r1598, %r1598, 1;
	setp.ne.s32	%p75, %r1598, 0;
	@%p75 bra 	BB1_110;

	and.b32  	%r654, %r81, 255;
	add.s32 	%r655, %r654, -128;
	shr.u32 	%r656, %r655, 5;
	and.b32  	%r87, %r80, -2147483648;
	st.local.u32 	[%rd9], %r1599;
	mov.u32 	%r657, 6;
	sub.s32 	%r658, %r657, %r656;
	mul.wide.s32 	%rd214, %r658, 4;
	add.s64 	%rd27, %rd8, %rd214;
	ld.local.u32 	%r1600, [%rd27];
	ld.local.u32 	%r1601, [%rd27+-4];
	and.b32  	%r90, %r81, 31;
	setp.eq.s32	%p76, %r90, 0;
	@%p76 bra 	BB1_113;

	mov.u32 	%r659, 32;
	sub.s32 	%r660, %r659, %r90;
	shr.u32 	%r661, %r1601, %r660;
	shl.b32 	%r662, %r1600, %r90;
	add.s32 	%r1600, %r661, %r662;
	ld.local.u32 	%r663, [%rd27+-8];
	shr.u32 	%r664, %r663, %r660;
	shl.b32 	%r665, %r1601, %r90;
	add.s32 	%r1601, %r664, %r665;

BB1_113:
	shr.u32 	%r666, %r1601, 30;
	shl.b32 	%r667, %r1600, 2;
	add.s32 	%r1602, %r666, %r667;
	shl.b32 	%r96, %r1601, 2;
	shr.u32 	%r668, %r1602, 31;
	shr.u32 	%r669, %r1600, 30;
	add.s32 	%r97, %r668, %r669;
	setp.eq.s32	%p77, %r668, 0;
	@%p77 bra 	BB1_114;

	not.b32 	%r670, %r1602;
	neg.s32 	%r1604, %r96;
	setp.eq.s32	%p78, %r96, 0;
	selp.u32	%r671, 1, 0, %p78;
	add.s32 	%r1602, %r671, %r670;
	xor.b32  	%r1603, %r87, -2147483648;
	bra.uni 	BB1_116;

BB1_92:
	ld.global.u32 	%r615, [dataRenderer+160];
	mov.u32 	%r617, 176;
	// inline asm
	call (%rd171, %rd172, %rd173, %rd174), _rt_buffer_get_id_size_64, (%r615, %r475, %r617);
	// inline asm
	cvt.u32.u64	%r75, %rd171;
	setp.eq.s32	%p60, %r75, 0;
	mov.f32 	%f3622, 0f00000000;
	mov.f32 	%f3621, %f3622;
	mov.f32 	%f3620, %f3622;
	mov.f32 	%f3619, %f3622;
	@%p60 bra 	BB1_100;

	cvta.to.local.u64 	%rd20, %rd166;
	mov.f32 	%f3622, 0f00000000;
	mov.u32 	%r1597, 0;
	mov.u64 	%rd846, %rd165;
	mov.f32 	%f3621, %f3622;
	mov.f32 	%f3620, %f3622;
	mov.f32 	%f3619, %f3622;

BB1_94:
	ld.global.u32 	%r619, [dataRenderer+160];
	// inline asm
	call (%rd177), _rt_buffer_get_id_64, (%r619, %r475, %r617, %rd846, %rd165, %rd165, %rd165);
	// inline asm
	ld.u32 	%rd184, [%rd177];
	mov.u64 	%rd189, buf_light_sample_L;
	cvta.global.u64 	%rd183, %rd189;
	mov.u32 	%r623, 4;
	// inline asm
	call (%rd182), _rt_buffer_get_64, (%rd183, %r475, %r623, %rd184, %rd165, %rd165, %rd165);
	// inline asm
	ld.u32 	%r624, [%rd182];
	// inline asm
	call (%rd188), _rt_callable_program_from_id_64, (%r624);
	// inline asm
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd177;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_7 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd188, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_7;
	
	//{
	}// Callseq End 7
	ld.local.v4.f32 	{%f997, %f998, %f999, %f1000}, [%rd2+52];
	mul.f32 	%f1002, %f998, 0f3F170A3D;
	fma.rn.f32 	%f1004, %f997, 0f3E99999A, %f1002;
	fma.rn.f32 	%f1006, %f999, 0f3DE147AE, %f1004;
	fma.rn.f32 	%f1008, %f1000, 0f00000000, %f1006;
	setp.le.f32	%p61, %f1008, 0f358637BD;
	@%p61 bra 	BB1_99;

	ld.local.f32 	%f1009, [%rd2+36];
	setp.le.f32	%p62, %f1009, 0f3A83126F;
	@%p62 bra 	BB1_99;

	ld.local.v2.f32 	{%f1010, %f1011}, [%rd2+12];
	mul.f32 	%f1014, %f1011, %f1011;
	fma.rn.f32 	%f1015, %f1010, %f1010, %f1014;
	ld.local.f32 	%f1016, [%rd2+20];
	fma.rn.f32 	%f1017, %f1016, %f1016, %f1015;
	sqrt.rn.f32 	%f88, %f1017;
	rcp.rn.f32 	%f1018, %f88;
	mul.f32 	%f89, %f1018, %f1010;
	mul.f32 	%f90, %f1018, %f1011;
	mul.f32 	%f91, %f1018, %f1016;
	ld.local.v4.f32 	{%f1019, %f1020, %f1021, %f1022}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f89, %f90};
	st.local.f32 	[%rd2+20], %f91;
	ld.local.f32 	%f1023, [%rd2+16];
	mul.f32 	%f1025, %f1023, %f1020;
	fma.rn.f32 	%f1027, %f89, %f1019, %f1025;
	ld.local.f32 	%f1029, [%rd2+20];
	fma.rn.f32 	%f92, %f1029, %f1021, %f1027;
	setp.leu.f32	%p63, %f92, 0f00000000;
	@%p63 bra 	BB1_99;

	ld.global.f32 	%f1036, [dataRenderer+8];
	ld.local.f32 	%f1032, [%rd2+32];
	ld.local.f32 	%f1031, [%rd2+28];
	ld.local.f32 	%f1030, [%rd2+24];
	mov.u16 	%rs4, 1;
	st.local.u8 	[%rd20], %rs4;
	ld.global.u32 	%r625, [topObject];
	mov.u32 	%r626, 2;
	// inline asm
	call _rt_trace_64, (%r625, %f1030, %f1031, %f1032, %f89, %f90, %f91, %r626, %f1036, %f88, %rd166, %r475);
	// inline asm
	ld.local.u8 	%rs5, [%rd20];
	setp.eq.s16	%p64, %rs5, 0;
	@%p64 bra 	BB1_99;

	mov.u64 	%rd200, buf_lm_F;
	cvta.global.u64 	%rd194, %rd200;
	mov.u64 	%rd198, 0;
	// inline asm
	call (%rd193), _rt_buffer_get_64, (%rd194, %r475, %r623, %rd198, %rd198, %rd198, %rd198);
	// inline asm
	ld.u32 	%r630, [%rd193];
	// inline asm
	call (%rd199), _rt_callable_program_from_id_64, (%r630);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_8 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd199, 
	(
	param0, 
	param1
	)
	, prototype_8;
	
	//{
	}// Callseq End 8
	ld.local.v2.f32 	{%f1038, %f1039}, [%rd2+36];
	ld.local.v4.f32 	{%f1042, %f1043, %f1044, %f1045}, [%rd2+52];
	mul.f32 	%f1047, %f1039, %f1042;
	mul.f32 	%f1049, %f1039, %f1043;
	mul.f32 	%f1051, %f1039, %f1044;
	mul.f32 	%f1053, %f1039, %f1045;
	mul.f32 	%f1054, %f92, %f1047;
	mul.f32 	%f1055, %f92, %f1049;
	mul.f32 	%f1056, %f92, %f1051;
	mul.f32 	%f1057, %f92, %f1053;
	rcp.rn.f32 	%f1058, %f1038;
	fma.rn.f32 	%f3619, %f1054, %f1058, %f3619;
	fma.rn.f32 	%f3620, %f1055, %f1058, %f3620;
	fma.rn.f32 	%f3621, %f1056, %f1058, %f3621;
	fma.rn.f32 	%f3622, %f1057, %f1058, %f3622;

BB1_99:
	add.s64 	%rd846, %rd846, 1;
	add.s32 	%r1597, %r1597, 1;
	setp.lt.u32	%p65, %r1597, %r75;
	@%p65 bra 	BB1_94;

BB1_100:
	st.local.v4.f32 	[%rd2+52], {%f3619, %f3620, %f3621, %f3622};
	mov.u64 	%rd210, buf_lm_sample_F;
	cvta.global.u64 	%rd204, %rd210;
	mov.u32 	%r632, 4;
	mov.u64 	%rd208, 0;
	// inline asm
	call (%rd203), _rt_buffer_get_64, (%rd204, %r475, %r632, %rd208, %rd208, %rd208, %rd208);
	// inline asm
	ld.u32 	%r633, [%rd203];
	// inline asm
	call (%rd209), _rt_callable_program_from_id_64, (%r633);
	// inline asm
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_9 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd209, 
	(
	param0, 
	param1
	)
	, prototype_9;
	
	//{
	}// Callseq End 9
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u32 	%r634, 0;
	st.global.u32 	[prdR+80], %r634;
	ld.global.u32 	%r635, [dataRenderer+164];
	add.s32 	%r78, %r635, -1;
	ld.global.u32 	%r636, [prdR+4];
	setp.ge.u32	%p66, %r636, %r78;
	@%p66 bra 	BB1_558;

	add.s32 	%r1560, %r635, -1;
	st.global.u32 	[prdR+4], %r1560;
	bra.uni 	BB1_558;

BB1_213:
	setp.neu.f32	%p147, %f212, 0f7F800000;
	@%p147 bra 	BB1_217;

	setp.ltu.f32	%p148, %f1324, 0f00000000;
	selp.b32	%r845, 0, 2139095040, %p148;
	or.b32  	%r846, %r845, -2147483648;
	selp.b32	%r847, %r846, %r845, %p1;
	mov.b32 	 %f3658, %r847;

BB1_217:
	setp.eq.f32	%p152, %f1324, 0f00000000;
	setp.eq.f32	%p153, %f209, 0f3F800000;
	or.pred  	%p154, %p153, %p152;
	selp.f32	%f1410, 0f3F800000, %f3658, %p154;
	fma.rn.f32 	%f1411, %f208, %f1410, %f1325;
	min.f32 	%f1412, %f1411, %f1326;
	max.f32 	%f1413, %f1325, %f1412;
	setp.lt.f32	%p155, %f39, %f1413;
	@%p155 bra 	BB1_377;
	bra.uni 	BB1_218;

BB1_377:
	mov.u32 	%r1568, 7937;
	ld.global.v2.f32 	{%f1842, %f1843}, [aInset];
	ld.global.v2.f32 	{%f1846, %f1847}, [aInset+8];
	ld.global.v2.f32 	{%f1850, %f1851}, [aInset+16];
	ld.global.v2.f32 	{%f1854, %f1855}, [aInset+24];
	ld.global.v2.f32 	{%f1858, %f1859}, [aInset+32];
	ld.global.v2.f32 	{%f1862, %f1863}, [aInset+40];
	ld.global.v2.f32 	{%f1866, %f1867}, [aInset+48];
	ld.global.v2.f32 	{%f1870, %f1871}, [aInset+56];
	ld.global.v2.f32 	{%f1874, %f1875}, [aInset+64];
	mov.b32 	 %r1175, %f1875;
	ld.global.u32 	%r1170, [GetTexture_normal];
	// inline asm
	call (%rd281), _rt_callable_program_from_id_64, (%r1170);
	// inline asm
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd105;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f1842;
	st.param.f32	[param1+4], %f1843;
	st.param.f32	[param1+8], %f1846;
	st.param.f32	[param1+12], %f1847;
	st.param.f32	[param1+16], %f1850;
	st.param.f32	[param1+20], %f1851;
	st.param.f32	[param1+24], %f1854;
	st.param.f32	[param1+28], %f1855;
	st.param.f32	[param1+32], %f1858;
	st.param.f32	[param1+36], %f1859;
	st.param.f32	[param1+40], %f1862;
	st.param.f32	[param1+44], %f1863;
	st.param.f32	[param1+48], %f1866;
	st.param.f32	[param1+52], %f1867;
	st.param.f32	[param1+56], %f1870;
	st.param.f32	[param1+60], %f1871;
	st.param.f32	[param1+64], %f1874;
	st.param.b32	[param1+68], %r1175;
	.param .align 4 .b8 retval0[12];
	prototype_13 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd281, 
	(
	param0, 
	param1
	)
	, prototype_13;
	ld.param.f32	%f1838, [retval0+0];
	ld.param.f32	%f1839, [retval0+4];
	ld.param.f32	%f1840, [retval0+8];
	
	//{
	}// Callseq End 13
	mov.f32 	%f1841, 0f00000000;
	// inline asm
	call (%f1834, %f1835, %f1836, %f1837), _rt_transform_tuple, (%r1568, %f1838, %f1839, %f1840, %f1841);
	// inline asm
	mul.f32 	%f1878, %f1835, %f1835;
	fma.rn.f32 	%f1879, %f1834, %f1834, %f1878;
	fma.rn.f32 	%f1880, %f1836, %f1836, %f1879;
	sqrt.rn.f32 	%f1881, %f1880;
	rcp.rn.f32 	%f1882, %f1881;
	mul.f32 	%f1883, %f1836, %f1882;
	mul.f32 	%f1884, %f1835, %f1882;
	mul.f32 	%f1885, %f1834, %f1882;
	st.local.v2.f32 	[%rd2+-12], {%f1885, %f1884};
	st.local.f32 	[%rd2+-4], %f1883;
	mov.u64 	%rd289, buf_lm_sample_F;
	cvta.global.u64 	%rd283, %rd289;
	mov.u32 	%r1173, 4;
	mov.u64 	%rd284, 2;
	mov.u64 	%rd287, 0;
	// inline asm
	call (%rd282), _rt_buffer_get_64, (%rd283, %r475, %r1173, %rd284, %rd287, %rd287, %rd287);
	// inline asm
	ld.u32 	%r1174, [%rd282];
	// inline asm
	call (%rd288), _rt_callable_program_from_id_64, (%r1174);
	// inline asm
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_14 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd288, 
	(
	param0, 
	param1
	)
	, prototype_14;
	
	//{
	}// Callseq End 14
	ld.f32 	%f1886, [%rd105];
	ld.f32 	%f1887, [%rd105+4];
	ld.f32 	%f1888, [%rd105+8];
	ld.f32 	%f1889, [%rd105+12];
	st.global.f32 	[prdR+60], %f1889;
	st.global.f32 	[prdR+56], %f1888;
	st.global.f32 	[prdR+52], %f1887;
	st.global.f32 	[prdR+48], %f1886;
	ld.global.f32 	%f1890, [prdR+80];
	setp.leu.f32	%p251, %f1890, 0f3F800000;
	@%p251 bra 	BB1_379;

	mov.u32 	%r1176, 1065353216;
	st.global.u32 	[prdR+80], %r1176;

BB1_379:
	st.local.v4.f32 	[%rd2+52], {%f1841, %f1841, %f1841, %f1841};
	bra.uni 	BB1_558;

BB1_218:
	mov.u32 	%r1566, 320;
	ld.global.u32 	%r851, [dataInstance+32];
	ld.global.s32 	%rd222, [dataInstance+36];
	mov.u64 	%rd225, 0;
	// inline asm
	call (%rd221), _rt_buffer_get_id_64, (%r851, %r475, %r1566, %rd222, %rd225, %rd225, %rd225);
	// inline asm
	ld.f32 	%f1414, [%rd221+272];
	rcp.rn.f32 	%f1415, %f1414;
	ld.local.f32 	%f1416, [%rd2+24];
	ld.local.v2.f32 	{%f1417, %f1418}, [%rd2+28];
	mul.f32 	%f1420, %f1417, 0fBFB50481;
	fma.rn.f32 	%f1421, %f1416, 0f3FB50481, %f1420;
	fma.rn.f32 	%f1423, %f1418, 0f00000000, %f1421;
	mul.f32 	%f1424, %f1415, %f1423;
	cvt.rmi.f32.f32	%f1425, %f1424;
	cvt.rzi.s32.f32	%r854, %f1425;
	cvt.rn.f32.s32	%f1426, %r854;
	mul.f32 	%f1427, %f1417, 0f3FB50481;
	fma.rn.f32 	%f1428, %f1416, 0f00000000, %f1427;
	fma.rn.f32 	%f1429, %f1418, 0fBFB50481, %f1428;
	mul.f32 	%f1430, %f1415, %f1429;
	cvt.rmi.f32.f32	%f1431, %f1430;
	cvt.rzi.s32.f32	%r855, %f1431;
	cvt.rn.f32.s32	%f1432, %r855;
	mul.f32 	%f1433, %f1417, 0f00000000;
	fma.rn.f32 	%f1434, %f1416, 0f3FB50481, %f1433;
	fma.rn.f32 	%f1435, %f1418, 0fBFB50481, %f1434;
	mul.f32 	%f1436, %f1415, %f1435;
	cvt.rmi.f32.f32	%f1437, %f1436;
	cvt.rzi.s32.f32	%r856, %f1437;
	cvt.rn.f32.s32	%f1438, %r856;
	mul.f32 	%f226, %f1414, %f1426;
	mul.f32 	%f227, %f1414, %f1432;
	mul.f32 	%f228, %f1414, %f1438;
	mul.f32 	%f1439, %f1417, 0f3E800000;
	fma.rn.f32 	%f1440, %f1416, 0f3F6F5C29, %f1439;
	fma.rn.f32 	%f1441, %f1418, 0f3E800000, %f1440;
	mul.f32 	%f1442, %f1415, %f1441;
	cvt.rmi.f32.f32	%f1443, %f1442;
	cvt.rzi.s32.f32	%r857, %f1443;
	cvt.rn.f32.s32	%f1444, %r857;
	mul.f32 	%f1445, %f1417, 0f3F6F5C29;
	fma.rn.f32 	%f1446, %f1416, 0f3E800000, %f1445;
	fma.rn.f32 	%f1447, %f1418, 0f3E800000, %f1446;
	mul.f32 	%f1448, %f1415, %f1447;
	cvt.rmi.f32.f32	%f1449, %f1448;
	cvt.rzi.s32.f32	%r858, %f1449;
	cvt.rn.f32.s32	%f1450, %r858;
	fma.rn.f32 	%f1451, %f1416, 0f3E800000, %f1439;
	fma.rn.f32 	%f1452, %f1418, 0f3F6F5C29, %f1451;
	mul.f32 	%f1453, %f1415, %f1452;
	cvt.rmi.f32.f32	%f1454, %f1453;
	cvt.rzi.s32.f32	%r859, %f1454;
	cvt.rn.f32.s32	%f1455, %r859;
	mul.f32 	%f229, %f1414, %f1444;
	mul.f32 	%f230, %f1414, %f1450;
	mul.f32 	%f231, %f1414, %f1455;
	mul.f32 	%f1456, %f227, 0f429C774C;
	fma.rn.f32 	%f1457, %f226, 0f414FD639, %f1456;
	fma.rn.f32 	%f1458, %f228, 0f4234A7F0, %f1457;
	fma.rn.f32 	%f1459, %f229, 0f42BD5893, %f1458;
	fma.rn.f32 	%f1460, %f230, 0f4234A7F0, %f1459;
	fma.rn.f32 	%f3659, %f231, 0f429C774C, %f1460;
	add.u64 	%rd226, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd226;
	abs.f32 	%f1461, %f3659;
	setp.neu.f32	%p156, %f1461, 0f7F800000;
	@%p156 bra 	BB1_220;

	mov.f32 	%f1462, 0f00000000;
	mul.rn.f32 	%f3659, %f3659, %f1462;

BB1_220:
	mul.f32 	%f1463, %f3659, 0f3F22F983;
	cvt.rni.s32.f32	%r1647, %f1463;
	cvt.rn.f32.s32	%f1464, %r1647;
	neg.f32 	%f1465, %f1464;
	mov.f32 	%f1466, 0f3FC90FDA;
	fma.rn.f32 	%f1467, %f1465, %f1466, %f3659;
	mov.f32 	%f1468, 0f33A22168;
	fma.rn.f32 	%f1469, %f1465, %f1468, %f1467;
	mov.f32 	%f1470, 0f27C234C5;
	fma.rn.f32 	%f3660, %f1465, %f1470, %f1469;
	abs.f32 	%f1471, %f3659;
	add.s64 	%rd45, %rd44, 24;
	setp.leu.f32	%p157, %f1471, 0f47CE4780;
	@%p157 bra 	BB1_231;

	mov.b32 	 %r222, %f3659;
	shr.u32 	%r223, %r222, 23;
	shl.b32 	%r862, %r222, 8;
	or.b32  	%r224, %r862, -2147483648;
	mov.u32 	%r1639, 0;
	mov.u64 	%rd855, __cudart_i2opi_f;
	mov.u32 	%r1638, -6;
	mov.u64 	%rd856, %rd44;

BB1_222:
	.pragma "nounroll";
	ld.const.u32 	%r865, [%rd855];
	// inline asm
	{
	mad.lo.cc.u32   %r863, %r865, %r224, %r1639;
	madc.hi.u32     %r1639, %r865, %r224,  0;
	}
	// inline asm
	st.local.u32 	[%rd856], %r863;
	add.s64 	%rd856, %rd856, 4;
	add.s64 	%rd855, %rd855, 4;
	add.s32 	%r1638, %r1638, 1;
	setp.ne.s32	%p158, %r1638, 0;
	@%p158 bra 	BB1_222;

	and.b32  	%r868, %r223, 255;
	add.s32 	%r869, %r868, -128;
	shr.u32 	%r870, %r869, 5;
	and.b32  	%r229, %r222, -2147483648;
	st.local.u32 	[%rd45], %r1639;
	mov.u32 	%r871, 6;
	sub.s32 	%r872, %r871, %r870;
	mul.wide.s32 	%rd228, %r872, 4;
	add.s64 	%rd50, %rd44, %rd228;
	ld.local.u32 	%r1640, [%rd50];
	ld.local.u32 	%r1641, [%rd50+-4];
	and.b32  	%r232, %r223, 31;
	setp.eq.s32	%p159, %r232, 0;
	@%p159 bra 	BB1_225;

	mov.u32 	%r873, 32;
	sub.s32 	%r874, %r873, %r232;
	shr.u32 	%r875, %r1641, %r874;
	shl.b32 	%r876, %r1640, %r232;
	add.s32 	%r1640, %r875, %r876;
	ld.local.u32 	%r877, [%rd50+-8];
	shr.u32 	%r878, %r877, %r874;
	shl.b32 	%r879, %r1641, %r232;
	add.s32 	%r1641, %r878, %r879;

BB1_225:
	shr.u32 	%r880, %r1641, 30;
	shl.b32 	%r881, %r1640, 2;
	add.s32 	%r1642, %r880, %r881;
	shl.b32 	%r238, %r1641, 2;
	shr.u32 	%r882, %r1642, 31;
	shr.u32 	%r883, %r1640, 30;
	add.s32 	%r239, %r882, %r883;
	setp.eq.s32	%p160, %r882, 0;
	@%p160 bra 	BB1_226;

	not.b32 	%r884, %r1642;
	neg.s32 	%r1644, %r238;
	setp.eq.s32	%p161, %r238, 0;
	selp.u32	%r885, 1, 0, %p161;
	add.s32 	%r1642, %r885, %r884;
	xor.b32  	%r1643, %r229, -2147483648;
	bra.uni 	BB1_228;

BB1_114:
	mov.u32 	%r1603, %r87;
	mov.u32 	%r1604, %r96;

BB1_116:
	clz.b32 	%r1606, %r1602;
	setp.eq.s32	%p79, %r1606, 0;
	shl.b32 	%r672, %r1602, %r1606;
	mov.u32 	%r673, 32;
	sub.s32 	%r674, %r673, %r1606;
	shr.u32 	%r675, %r1604, %r674;
	add.s32 	%r676, %r675, %r672;
	selp.b32	%r105, %r1602, %r676, %p79;
	mov.u32 	%r677, -921707870;
	mul.hi.u32 	%r1605, %r105, %r677;
	setp.eq.s32	%p80, %r87, 0;
	neg.s32 	%r678, %r97;
	selp.b32	%r1607, %r97, %r678, %p80;
	setp.lt.s32	%p81, %r1605, 1;
	@%p81 bra 	BB1_118;

	mul.lo.s32 	%r679, %r105, -921707870;
	shr.u32 	%r680, %r679, 31;
	shl.b32 	%r681, %r1605, 1;
	add.s32 	%r1605, %r680, %r681;
	add.s32 	%r1606, %r1606, 1;

BB1_118:
	mov.u32 	%r682, 126;
	sub.s32 	%r683, %r682, %r1606;
	shl.b32 	%r684, %r683, 23;
	add.s32 	%r685, %r1605, 1;
	shr.u32 	%r686, %r685, 7;
	add.s32 	%r687, %r686, 1;
	shr.u32 	%r688, %r687, 1;
	add.s32 	%r689, %r688, %r684;
	or.b32  	%r690, %r689, %r1603;
	mov.b32 	 %f3630, %r690;

BB1_119:
	mul.rn.f32 	%f122, %f3630, %f3630;
	and.b32  	%r113, %r1607, 1;
	setp.eq.s32	%p82, %r113, 0;
	@%p82 bra 	BB1_121;

	mov.f32 	%f1125, 0fBAB6061A;
	mov.f32 	%f1126, 0f37CCF5CE;
	fma.rn.f32 	%f3631, %f1126, %f122, %f1125;
	bra.uni 	BB1_122;

BB1_121:
	mov.f32 	%f1127, 0f3C08839E;
	mov.f32 	%f1128, 0fB94CA1F9;
	fma.rn.f32 	%f3631, %f1128, %f122, %f1127;

BB1_122:
	@%p82 bra 	BB1_124;

	mov.f32 	%f1129, 0f3D2AAAA5;
	fma.rn.f32 	%f1130, %f3631, %f122, %f1129;
	fma.rn.f32 	%f3632, %f1130, %f122, %f1086;
	bra.uni 	BB1_125;

BB1_124:
	mov.f32 	%f1132, 0fBE2AAAA3;
	fma.rn.f32 	%f1133, %f3631, %f122, %f1132;
	mov.f32 	%f1134, 0f00000000;
	fma.rn.f32 	%f3632, %f1133, %f122, %f1134;

BB1_125:
	fma.rn.f32 	%f3633, %f3632, %f3630, %f3630;
	@%p82 bra 	BB1_127;

	fma.rn.f32 	%f3633, %f3632, %f122, %f1062;

BB1_127:
	and.b32  	%r691, %r1607, 2;
	setp.eq.s32	%p85, %r691, 0;
	@%p85 bra 	BB1_129;

	mov.f32 	%f1136, 0f00000000;
	mov.f32 	%f1137, 0fBF800000;
	fma.rn.f32 	%f3633, %f3633, %f1137, %f1136;

BB1_129:
	@%p73 bra 	BB1_131;

	mov.f32 	%f1138, 0f00000000;
	mul.rn.f32 	%f3635, %f3635, %f1138;

BB1_131:
	mul.f32 	%f1139, %f3635, 0f3F22F983;
	cvt.rni.s32.f32	%r1617, %f1139;
	cvt.rn.f32.s32	%f1140, %r1617;
	neg.f32 	%f1141, %f1140;
	fma.rn.f32 	%f1143, %f1141, %f938, %f3635;
	fma.rn.f32 	%f1145, %f1141, %f940, %f1143;
	fma.rn.f32 	%f3636, %f1141, %f942, %f1145;
	abs.f32 	%f1147, %f3635;
	setp.leu.f32	%p87, %f1147, 0f47CE4780;
	@%p87 bra 	BB1_142;

	mov.b32 	 %r115, %f3635;
	shr.u32 	%r116, %r115, 23;
	shl.b32 	%r694, %r115, 8;
	or.b32  	%r117, %r694, -2147483648;
	mov.u32 	%r1609, 0;
	mov.u64 	%rd849, __cudart_i2opi_f;
	mov.u32 	%r1608, -6;
	mov.u64 	%rd850, %rd8;

BB1_133:
	.pragma "nounroll";
	ld.const.u32 	%r697, [%rd849];
	// inline asm
	{
	mad.lo.cc.u32   %r695, %r697, %r117, %r1609;
	madc.hi.u32     %r1609, %r697, %r117,  0;
	}
	// inline asm
	st.local.u32 	[%rd850], %r695;
	add.s64 	%rd850, %rd850, 4;
	add.s64 	%rd849, %rd849, 4;
	add.s32 	%r1608, %r1608, 1;
	setp.ne.s32	%p88, %r1608, 0;
	@%p88 bra 	BB1_133;

	and.b32  	%r700, %r116, 255;
	add.s32 	%r701, %r700, -128;
	shr.u32 	%r702, %r701, 5;
	and.b32  	%r122, %r115, -2147483648;
	st.local.u32 	[%rd9], %r1609;
	mov.u32 	%r703, 6;
	sub.s32 	%r704, %r703, %r702;
	mul.wide.s32 	%rd216, %r704, 4;
	add.s64 	%rd32, %rd8, %rd216;
	ld.local.u32 	%r1610, [%rd32];
	ld.local.u32 	%r1611, [%rd32+-4];
	and.b32  	%r125, %r116, 31;
	setp.eq.s32	%p89, %r125, 0;
	@%p89 bra 	BB1_136;

	mov.u32 	%r705, 32;
	sub.s32 	%r706, %r705, %r125;
	shr.u32 	%r707, %r1611, %r706;
	shl.b32 	%r708, %r1610, %r125;
	add.s32 	%r1610, %r707, %r708;
	ld.local.u32 	%r709, [%rd32+-8];
	shr.u32 	%r710, %r709, %r706;
	shl.b32 	%r711, %r1611, %r125;
	add.s32 	%r1611, %r710, %r711;

BB1_136:
	shr.u32 	%r712, %r1611, 30;
	shl.b32 	%r713, %r1610, 2;
	add.s32 	%r1612, %r712, %r713;
	shl.b32 	%r131, %r1611, 2;
	shr.u32 	%r714, %r1612, 31;
	shr.u32 	%r715, %r1610, 30;
	add.s32 	%r132, %r714, %r715;
	setp.eq.s32	%p90, %r714, 0;
	@%p90 bra 	BB1_137;

	not.b32 	%r716, %r1612;
	neg.s32 	%r1614, %r131;
	setp.eq.s32	%p91, %r131, 0;
	selp.u32	%r717, 1, 0, %p91;
	add.s32 	%r1612, %r717, %r716;
	xor.b32  	%r1613, %r122, -2147483648;
	bra.uni 	BB1_139;

BB1_226:
	mov.u32 	%r1643, %r229;
	mov.u32 	%r1644, %r238;

BB1_228:
	clz.b32 	%r1646, %r1642;
	setp.eq.s32	%p162, %r1646, 0;
	shl.b32 	%r886, %r1642, %r1646;
	mov.u32 	%r887, 32;
	sub.s32 	%r888, %r887, %r1646;
	shr.u32 	%r889, %r1644, %r888;
	add.s32 	%r890, %r889, %r886;
	selp.b32	%r247, %r1642, %r890, %p162;
	mov.u32 	%r891, -921707870;
	mul.hi.u32 	%r1645, %r247, %r891;
	setp.eq.s32	%p163, %r229, 0;
	neg.s32 	%r892, %r239;
	selp.b32	%r1647, %r239, %r892, %p163;
	setp.lt.s32	%p164, %r1645, 1;
	@%p164 bra 	BB1_230;

	mul.lo.s32 	%r893, %r247, -921707870;
	shr.u32 	%r894, %r893, 31;
	shl.b32 	%r895, %r1645, 1;
	add.s32 	%r1645, %r894, %r895;
	add.s32 	%r1646, %r1646, 1;

BB1_230:
	mov.u32 	%r896, 126;
	sub.s32 	%r897, %r896, %r1646;
	shl.b32 	%r898, %r897, 23;
	add.s32 	%r899, %r1645, 1;
	shr.u32 	%r900, %r899, 7;
	add.s32 	%r901, %r900, 1;
	shr.u32 	%r902, %r901, 1;
	add.s32 	%r903, %r902, %r898;
	or.b32  	%r904, %r903, %r1643;
	mov.b32 	 %f3660, %r904;

BB1_231:
	mul.rn.f32 	%f238, %f3660, %f3660;
	and.b32  	%r255, %r1647, 1;
	setp.eq.s32	%p165, %r255, 0;
	@%p165 bra 	BB1_233;

	mov.f32 	%f1472, 0fBAB6061A;
	mov.f32 	%f1473, 0f37CCF5CE;
	fma.rn.f32 	%f3661, %f1473, %f238, %f1472;
	bra.uni 	BB1_234;

BB1_233:
	mov.f32 	%f1474, 0f3C08839E;
	mov.f32 	%f1475, 0fB94CA1F9;
	fma.rn.f32 	%f3661, %f1475, %f238, %f1474;

BB1_234:
	@%p165 bra 	BB1_236;

	mov.f32 	%f1476, 0f3D2AAAA5;
	fma.rn.f32 	%f1477, %f3661, %f238, %f1476;
	mov.f32 	%f1478, 0fBF000000;
	fma.rn.f32 	%f3662, %f1477, %f238, %f1478;
	bra.uni 	BB1_237;

BB1_236:
	mov.f32 	%f1479, 0fBE2AAAA3;
	fma.rn.f32 	%f1480, %f3661, %f238, %f1479;
	mov.f32 	%f1481, 0f00000000;
	fma.rn.f32 	%f3662, %f1480, %f238, %f1481;

BB1_237:
	fma.rn.f32 	%f3663, %f3662, %f3660, %f3660;
	@%p165 bra 	BB1_239;

	fma.rn.f32 	%f3663, %f3662, %f238, %f1328;

BB1_239:
	and.b32  	%r905, %r1647, 2;
	setp.eq.s32	%p168, %r905, 0;
	@%p168 bra 	BB1_241;

	mov.f32 	%f1484, 0fBF800000;
	fma.rn.f32 	%f3663, %f3663, %f1484, %f3678;

BB1_241:
	mul.f32 	%f1485, %f3663, 0f472AEE8C;
	abs.f32 	%f1486, %f1485;
	cvt.rzi.s32.f32	%r906, %f1486;
	cvt.rn.f32.s32	%f1487, %r906;
	sub.f32 	%f250, %f1486, %f1487;
	mul.f32 	%f1488, %f228, 0f429C774C;
	fma.rn.f32 	%f1489, %f227, 0f414FD639, %f1488;
	fma.rn.f32 	%f1490, %f229, 0f4234A7F0, %f1489;
	fma.rn.f32 	%f1491, %f230, 0f42BD5893, %f1490;
	fma.rn.f32 	%f1492, %f231, 0f4234A7F0, %f1491;
	fma.rn.f32 	%f3665, %f226, 0f429C774C, %f1492;
	abs.f32 	%f1493, %f3665;
	setp.neu.f32	%p169, %f1493, 0f7F800000;
	@%p169 bra 	BB1_243;

	mov.f32 	%f1494, 0f00000000;
	mul.rn.f32 	%f3665, %f3665, %f1494;

BB1_243:
	mul.f32 	%f1495, %f3665, 0f3F22F983;
	cvt.rni.s32.f32	%r1657, %f1495;
	cvt.rn.f32.s32	%f1496, %r1657;
	neg.f32 	%f1497, %f1496;
	fma.rn.f32 	%f1499, %f1497, %f1466, %f3665;
	fma.rn.f32 	%f1501, %f1497, %f1468, %f1499;
	fma.rn.f32 	%f3666, %f1497, %f1470, %f1501;
	abs.f32 	%f1503, %f3665;
	setp.leu.f32	%p170, %f1503, 0f47CE4780;
	@%p170 bra 	BB1_254;

	mov.b32 	 %r257, %f3665;
	shr.u32 	%r258, %r257, 23;
	shl.b32 	%r909, %r257, 8;
	or.b32  	%r259, %r909, -2147483648;
	mov.u32 	%r1649, 0;
	mov.u64 	%rd857, __cudart_i2opi_f;
	mov.u32 	%r1648, -6;
	mov.u64 	%rd858, %rd44;

BB1_245:
	.pragma "nounroll";
	ld.const.u32 	%r912, [%rd857];
	// inline asm
	{
	mad.lo.cc.u32   %r910, %r912, %r259, %r1649;
	madc.hi.u32     %r1649, %r912, %r259,  0;
	}
	// inline asm
	st.local.u32 	[%rd858], %r910;
	add.s64 	%rd858, %rd858, 4;
	add.s64 	%rd857, %rd857, 4;
	add.s32 	%r1648, %r1648, 1;
	setp.ne.s32	%p171, %r1648, 0;
	@%p171 bra 	BB1_245;

	and.b32  	%r915, %r258, 255;
	add.s32 	%r916, %r915, -128;
	shr.u32 	%r917, %r916, 5;
	and.b32  	%r264, %r257, -2147483648;
	st.local.u32 	[%rd45], %r1649;
	mov.u32 	%r918, 6;
	sub.s32 	%r919, %r918, %r917;
	mul.wide.s32 	%rd230, %r919, 4;
	add.s64 	%rd55, %rd44, %rd230;
	ld.local.u32 	%r1650, [%rd55];
	ld.local.u32 	%r1651, [%rd55+-4];
	and.b32  	%r267, %r258, 31;
	setp.eq.s32	%p172, %r267, 0;
	@%p172 bra 	BB1_248;

	mov.u32 	%r920, 32;
	sub.s32 	%r921, %r920, %r267;
	shr.u32 	%r922, %r1651, %r921;
	shl.b32 	%r923, %r1650, %r267;
	add.s32 	%r1650, %r922, %r923;
	ld.local.u32 	%r924, [%rd55+-8];
	shr.u32 	%r925, %r924, %r921;
	shl.b32 	%r926, %r1651, %r267;
	add.s32 	%r1651, %r925, %r926;

BB1_248:
	shr.u32 	%r927, %r1651, 30;
	shl.b32 	%r928, %r1650, 2;
	add.s32 	%r1652, %r927, %r928;
	shl.b32 	%r273, %r1651, 2;
	shr.u32 	%r929, %r1652, 31;
	shr.u32 	%r930, %r1650, 30;
	add.s32 	%r274, %r929, %r930;
	setp.eq.s32	%p173, %r929, 0;
	@%p173 bra 	BB1_249;

	not.b32 	%r931, %r1652;
	neg.s32 	%r1654, %r273;
	setp.eq.s32	%p174, %r273, 0;
	selp.u32	%r932, 1, 0, %p174;
	add.s32 	%r1652, %r932, %r931;
	xor.b32  	%r1653, %r264, -2147483648;
	bra.uni 	BB1_251;

BB1_137:
	mov.u32 	%r1613, %r122;
	mov.u32 	%r1614, %r131;

BB1_139:
	clz.b32 	%r1616, %r1612;
	setp.eq.s32	%p92, %r1616, 0;
	shl.b32 	%r718, %r1612, %r1616;
	mov.u32 	%r719, 32;
	sub.s32 	%r720, %r719, %r1616;
	shr.u32 	%r721, %r1614, %r720;
	add.s32 	%r722, %r721, %r718;
	selp.b32	%r140, %r1612, %r722, %p92;
	mov.u32 	%r723, -921707870;
	mul.hi.u32 	%r1615, %r140, %r723;
	setp.eq.s32	%p93, %r122, 0;
	neg.s32 	%r724, %r132;
	selp.b32	%r1617, %r132, %r724, %p93;
	setp.lt.s32	%p94, %r1615, 1;
	@%p94 bra 	BB1_141;

	mul.lo.s32 	%r725, %r140, -921707870;
	shr.u32 	%r726, %r725, 31;
	shl.b32 	%r727, %r1615, 1;
	add.s32 	%r1615, %r726, %r727;
	add.s32 	%r1616, %r1616, 1;

BB1_141:
	mov.u32 	%r728, 126;
	sub.s32 	%r729, %r728, %r1616;
	shl.b32 	%r730, %r729, 23;
	add.s32 	%r731, %r1615, 1;
	shr.u32 	%r732, %r731, 7;
	add.s32 	%r733, %r732, 1;
	shr.u32 	%r734, %r733, 1;
	add.s32 	%r735, %r734, %r730;
	or.b32  	%r736, %r735, %r1613;
	mov.b32 	 %f3636, %r736;

BB1_142:
	mul.rn.f32 	%f139, %f3636, %f3636;
	add.s32 	%r148, %r1617, 1;
	and.b32  	%r149, %r148, 1;
	setp.eq.s32	%p95, %r149, 0;
	@%p95 bra 	BB1_144;

	mov.f32 	%f1148, 0fBAB6061A;
	mov.f32 	%f1149, 0f37CCF5CE;
	fma.rn.f32 	%f3637, %f1149, %f139, %f1148;
	bra.uni 	BB1_145;

BB1_144:
	mov.f32 	%f1150, 0f3C08839E;
	mov.f32 	%f1151, 0fB94CA1F9;
	fma.rn.f32 	%f3637, %f1151, %f139, %f1150;

BB1_145:
	@%p95 bra 	BB1_147;

	mov.f32 	%f1152, 0f3D2AAAA5;
	fma.rn.f32 	%f1153, %f3637, %f139, %f1152;
	fma.rn.f32 	%f3638, %f1153, %f139, %f1086;
	bra.uni 	BB1_148;

BB1_147:
	mov.f32 	%f1155, 0fBE2AAAA3;
	fma.rn.f32 	%f1156, %f3637, %f139, %f1155;
	mov.f32 	%f1157, 0f00000000;
	fma.rn.f32 	%f3638, %f1156, %f139, %f1157;

BB1_148:
	fma.rn.f32 	%f3639, %f3638, %f3636, %f3636;
	@%p95 bra 	BB1_150;

	fma.rn.f32 	%f3639, %f3638, %f139, %f1062;

BB1_150:
	and.b32  	%r737, %r148, 2;
	setp.eq.s32	%p98, %r737, 0;
	@%p98 bra 	BB1_152;

	mov.f32 	%f1159, 0f00000000;
	mov.f32 	%f1160, 0fBF800000;
	fma.rn.f32 	%f3639, %f3639, %f1160, %f1159;

BB1_152:
	ld.local.v4.f32 	{%f1161, %f1162, %f1163, %f1164}, [%rd2+-12];
	abs.f32 	%f1165, %f1161;
	abs.f32 	%f1166, %f1163;
	setp.gt.f32	%p99, %f1165, %f1166;
	neg.f32 	%f1167, %f1162;
	neg.f32 	%f1168, %f1163;
	selp.f32	%f1169, %f1167, 0f00000000, %p99;
	selp.f32	%f1170, %f1161, %f1168, %p99;
	selp.f32	%f1171, 0f00000000, %f1162, %p99;
	mul.f32 	%f1172, %f1170, %f1170;
	fma.rn.f32 	%f1173, %f1169, %f1169, %f1172;
	fma.rn.f32 	%f1174, %f1171, %f1171, %f1173;
	sqrt.rn.f32 	%f1175, %f1174;
	rcp.rn.f32 	%f1176, %f1175;
	mul.f32 	%f154, %f1169, %f1176;
	mul.f32 	%f155, %f1170, %f1176;
	mul.f32 	%f156, %f1171, %f1176;
	mul.f32 	%f3647, %f108, 0f40C90FDB;
	abs.f32 	%f158, %f3647;
	setp.neu.f32	%p100, %f158, 0f7F800000;
	mov.f32 	%f3641, %f3647;
	@%p100 bra 	BB1_154;

	mov.f32 	%f1177, 0f00000000;
	mul.rn.f32 	%f3641, %f3647, %f1177;

BB1_154:
	mul.f32 	%f1178, %f3641, 0f3F22F983;
	cvt.rni.s32.f32	%r1627, %f1178;
	cvt.rn.f32.s32	%f1179, %r1627;
	neg.f32 	%f1180, %f1179;
	fma.rn.f32 	%f1182, %f1180, %f938, %f3641;
	fma.rn.f32 	%f1184, %f1180, %f940, %f1182;
	fma.rn.f32 	%f3642, %f1180, %f942, %f1184;
	abs.f32 	%f1186, %f3641;
	setp.leu.f32	%p101, %f1186, 0f47CE4780;
	@%p101 bra 	BB1_165;

	mov.b32 	 %r151, %f3641;
	shr.u32 	%r152, %r151, 23;
	shl.b32 	%r740, %r151, 8;
	or.b32  	%r153, %r740, -2147483648;
	mov.u32 	%r1619, 0;
	mov.u64 	%rd851, __cudart_i2opi_f;
	mov.u32 	%r1618, -6;
	mov.u64 	%rd852, %rd8;

BB1_156:
	.pragma "nounroll";
	ld.const.u32 	%r743, [%rd851];
	// inline asm
	{
	mad.lo.cc.u32   %r741, %r743, %r153, %r1619;
	madc.hi.u32     %r1619, %r743, %r153,  0;
	}
	// inline asm
	st.local.u32 	[%rd852], %r741;
	add.s64 	%rd852, %rd852, 4;
	add.s64 	%rd851, %rd851, 4;
	add.s32 	%r1618, %r1618, 1;
	setp.ne.s32	%p102, %r1618, 0;
	@%p102 bra 	BB1_156;

	and.b32  	%r746, %r152, 255;
	add.s32 	%r747, %r746, -128;
	shr.u32 	%r748, %r747, 5;
	and.b32  	%r158, %r151, -2147483648;
	st.local.u32 	[%rd9], %r1619;
	mov.u32 	%r749, 6;
	sub.s32 	%r750, %r749, %r748;
	mul.wide.s32 	%rd218, %r750, 4;
	add.s64 	%rd37, %rd8, %rd218;
	ld.local.u32 	%r1620, [%rd37];
	ld.local.u32 	%r1621, [%rd37+-4];
	and.b32  	%r161, %r152, 31;
	setp.eq.s32	%p103, %r161, 0;
	@%p103 bra 	BB1_159;

	mov.u32 	%r751, 32;
	sub.s32 	%r752, %r751, %r161;
	shr.u32 	%r753, %r1621, %r752;
	shl.b32 	%r754, %r1620, %r161;
	add.s32 	%r1620, %r753, %r754;
	ld.local.u32 	%r755, [%rd37+-8];
	shr.u32 	%r756, %r755, %r752;
	shl.b32 	%r757, %r1621, %r161;
	add.s32 	%r1621, %r756, %r757;

BB1_159:
	shr.u32 	%r758, %r1621, 30;
	shl.b32 	%r759, %r1620, 2;
	add.s32 	%r1622, %r758, %r759;
	shl.b32 	%r167, %r1621, 2;
	shr.u32 	%r760, %r1622, 31;
	shr.u32 	%r761, %r1620, 30;
	add.s32 	%r168, %r760, %r761;
	setp.eq.s32	%p104, %r760, 0;
	@%p104 bra 	BB1_160;

	not.b32 	%r762, %r1622;
	neg.s32 	%r1624, %r167;
	setp.eq.s32	%p105, %r167, 0;
	selp.u32	%r763, 1, 0, %p105;
	add.s32 	%r1622, %r763, %r762;
	xor.b32  	%r1623, %r158, -2147483648;
	bra.uni 	BB1_162;

BB1_249:
	mov.u32 	%r1653, %r264;
	mov.u32 	%r1654, %r273;

BB1_251:
	clz.b32 	%r1656, %r1652;
	setp.eq.s32	%p175, %r1656, 0;
	shl.b32 	%r933, %r1652, %r1656;
	mov.u32 	%r934, 32;
	sub.s32 	%r935, %r934, %r1656;
	shr.u32 	%r936, %r1654, %r935;
	add.s32 	%r937, %r936, %r933;
	selp.b32	%r282, %r1652, %r937, %p175;
	mov.u32 	%r938, -921707870;
	mul.hi.u32 	%r1655, %r282, %r938;
	setp.eq.s32	%p176, %r264, 0;
	neg.s32 	%r939, %r274;
	selp.b32	%r1657, %r274, %r939, %p176;
	setp.lt.s32	%p177, %r1655, 1;
	@%p177 bra 	BB1_253;

	mul.lo.s32 	%r940, %r282, -921707870;
	shr.u32 	%r941, %r940, 31;
	shl.b32 	%r942, %r1655, 1;
	add.s32 	%r1655, %r941, %r942;
	add.s32 	%r1656, %r1656, 1;

BB1_253:
	mov.u32 	%r943, 126;
	sub.s32 	%r944, %r943, %r1656;
	shl.b32 	%r945, %r944, 23;
	add.s32 	%r946, %r1655, 1;
	shr.u32 	%r947, %r946, 7;
	add.s32 	%r948, %r947, 1;
	shr.u32 	%r949, %r948, 1;
	add.s32 	%r950, %r949, %r945;
	or.b32  	%r951, %r950, %r1653;
	mov.b32 	 %f3666, %r951;

BB1_254:
	mul.rn.f32 	%f257, %f3666, %f3666;
	and.b32  	%r290, %r1657, 1;
	setp.eq.s32	%p178, %r290, 0;
	@%p178 bra 	BB1_256;

	mov.f32 	%f1504, 0fBAB6061A;
	mov.f32 	%f1505, 0f37CCF5CE;
	fma.rn.f32 	%f3667, %f1505, %f257, %f1504;
	bra.uni 	BB1_257;

BB1_256:
	mov.f32 	%f1506, 0f3C08839E;
	mov.f32 	%f1507, 0fB94CA1F9;
	fma.rn.f32 	%f3667, %f1507, %f257, %f1506;

BB1_257:
	@%p178 bra 	BB1_259;

	mov.f32 	%f1508, 0f3D2AAAA5;
	fma.rn.f32 	%f1509, %f3667, %f257, %f1508;
	mov.f32 	%f1510, 0fBF000000;
	fma.rn.f32 	%f3668, %f1509, %f257, %f1510;
	bra.uni 	BB1_260;

BB1_259:
	mov.f32 	%f1511, 0fBE2AAAA3;
	fma.rn.f32 	%f1512, %f3667, %f257, %f1511;
	mov.f32 	%f1513, 0f00000000;
	fma.rn.f32 	%f3668, %f1512, %f257, %f1513;

BB1_260:
	fma.rn.f32 	%f3670, %f3668, %f3666, %f3666;
	@%p178 bra 	BB1_262;

	fma.rn.f32 	%f3670, %f3668, %f257, %f1328;

BB1_262:
	and.b32  	%r952, %r1657, 2;
	setp.eq.s32	%p181, %r952, 0;
	@%p181 bra 	BB1_264;

	mov.f32 	%f1516, 0fBF800000;
	fma.rn.f32 	%f3670, %f3670, %f1516, %f3678;

BB1_264:
	ld.f32 	%f269, [%rd221+276];
	setp.lt.f32	%p182, %f250, %f269;
	@%p182 bra 	BB1_275;
	bra.uni 	BB1_265;

BB1_275:
	mul.f32 	%f1587, %f3670, 0f472AEE8C;
	abs.f32 	%f1588, %f1587;
	div.rn.f32 	%f1589, %f250, %f269;
	ld.f32 	%f291, [%rd221+260];
	sub.f32 	%f1591, %f1328, %f1589;
	setp.lt.f32	%p190, %f1591, 0f00800000;
	mul.f32 	%f1592, %f1591, 0f4B000000;
	selp.f32	%f292, %f1592, %f1591, %p190;
	selp.f32	%f1593, 0fC1B80000, 0f00000000, %p190;
	mov.b32 	 %r975, %f292;
	add.s32 	%r976, %r975, -1059760811;
	and.b32  	%r977, %r976, -8388608;
	sub.s32 	%r978, %r975, %r977;
	mov.b32 	 %f1594, %r978;
	cvt.rn.f32.s32	%f1595, %r977;
	mov.f32 	%f1596, 0f34000000;
	fma.rn.f32 	%f1597, %f1595, %f1596, %f1593;
	add.f32 	%f1598, %f1594, 0fBF800000;
	mov.f32 	%f1599, 0f3E1039F6;
	mov.f32 	%f1600, 0fBE055027;
	fma.rn.f32 	%f1601, %f1600, %f1598, %f1599;
	mov.f32 	%f1602, 0fBDF8CDCC;
	fma.rn.f32 	%f1603, %f1601, %f1598, %f1602;
	mov.f32 	%f1604, 0f3E0F2955;
	fma.rn.f32 	%f1605, %f1603, %f1598, %f1604;
	mov.f32 	%f1606, 0fBE2AD8B9;
	fma.rn.f32 	%f1607, %f1605, %f1598, %f1606;
	mov.f32 	%f1608, 0f3E4CED0B;
	fma.rn.f32 	%f1609, %f1607, %f1598, %f1608;
	mov.f32 	%f1610, 0fBE7FFF22;
	fma.rn.f32 	%f1611, %f1609, %f1598, %f1610;
	mov.f32 	%f1612, 0f3EAAAA78;
	fma.rn.f32 	%f1613, %f1611, %f1598, %f1612;
	mov.f32 	%f1614, 0fBF000000;
	fma.rn.f32 	%f1615, %f1613, %f1598, %f1614;
	mul.f32 	%f1616, %f1598, %f1615;
	fma.rn.f32 	%f1617, %f1616, %f1598, %f1598;
	mov.f32 	%f1618, 0f3F317218;
	fma.rn.f32 	%f3683, %f1597, %f1618, %f1617;
	cvt.rzi.s32.f32	%r979, %f1588;
	cvt.rn.f32.s32	%f1619, %r979;
	sub.f32 	%f294, %f1588, %f1619;
	setp.lt.u32	%p191, %r975, 2139095040;
	@%p191 bra 	BB1_277;

	mov.f32 	%f1620, 0f7F800000;
	fma.rn.f32 	%f3683, %f292, %f1620, %f1620;

BB1_277:
	neg.f32 	%f1621, %f3683;
	setp.eq.f32	%p192, %f292, 0f00000000;
	selp.f32	%f1622, 0f7F800000, %f1621, %p192;
	sqrt.rn.f32 	%f1623, %f1622;
	mul.f32 	%f297, %f291, %f1623;
	abs.f32 	%f298, %f297;
	setp.leu.f32	%p193, %f298, 0f3F800000;
	mov.f32 	%f3684, %f298;
	@%p193 bra 	BB1_279;

	rcp.rn.f32 	%f3684, %f298;

BB1_279:
	mul.rn.f32 	%f1624, %f3684, %f3684;
	mov.f32 	%f1625, 0fC0B59883;
	mov.f32 	%f1626, 0fBF52C7EA;
	fma.rn.f32 	%f1627, %f1624, %f1626, %f1625;
	mov.f32 	%f1628, 0fC0D21907;
	fma.rn.f32 	%f1629, %f1627, %f1624, %f1628;
	mul.f32 	%f1630, %f1624, %f1629;
	mul.f32 	%f1631, %f3684, %f1630;
	add.f32 	%f1632, %f1624, 0f41355DC0;
	mov.f32 	%f1633, 0f41E6BD60;
	fma.rn.f32 	%f1634, %f1632, %f1624, %f1633;
	mov.f32 	%f1635, 0f419D92C8;
	fma.rn.f32 	%f1636, %f1634, %f1624, %f1635;
	rcp.rn.f32 	%f1637, %f1636;
	fma.rn.f32 	%f1638, %f1631, %f1637, %f3684;
	mov.f32 	%f1639, 0f3FC90FDB;
	sub.f32 	%f1640, %f1639, %f1638;
	setp.gt.f32	%p194, %f298, 0f3F800000;
	selp.f32	%f1641, %f1640, %f1638, %p194;
	mov.b32 	 %r980, %f1641;
	mov.b32 	 %r981, %f297;
	and.b32  	%r982, %r981, -2147483648;
	or.b32  	%r983, %r980, %r982;
	mov.b32 	 %f1642, %r983;
	setp.gtu.f32	%p195, %f298, 0f7F800000;
	selp.f32	%f3691, %f1641, %f1642, %p195;
	abs.f32 	%f302, %f3691;
	setp.neu.f32	%p196, %f302, 0f7F800000;
	mov.f32 	%f3685, %f3691;
	@%p196 bra 	BB1_281;

	mov.f32 	%f1643, 0f00000000;
	mul.rn.f32 	%f3685, %f3691, %f1643;

BB1_281:
	mul.f32 	%f1644, %f3685, 0f3F22F983;
	cvt.rni.s32.f32	%r1668, %f1644;
	cvt.rn.f32.s32	%f1645, %r1668;
	neg.f32 	%f1646, %f1645;
	fma.rn.f32 	%f1648, %f1646, %f1466, %f3685;
	fma.rn.f32 	%f1650, %f1646, %f1468, %f1648;
	fma.rn.f32 	%f3686, %f1646, %f1470, %f1650;
	abs.f32 	%f1652, %f3685;
	setp.leu.f32	%p197, %f1652, 0f47CE4780;
	@%p197 bra 	BB1_292;

	mov.b32 	 %r296, %f3685;
	shr.u32 	%r297, %r296, 23;
	shl.b32 	%r986, %r296, 8;
	or.b32  	%r298, %r986, -2147483648;
	mov.u32 	%r1660, 0;
	mov.u64 	%rd860, __cudart_i2opi_f;
	mov.u32 	%r1659, -6;
	mov.u64 	%rd861, %rd44;

BB1_283:
	.pragma "nounroll";
	ld.const.u32 	%r989, [%rd860];
	// inline asm
	{
	mad.lo.cc.u32   %r987, %r989, %r298, %r1660;
	madc.hi.u32     %r1660, %r989, %r298,  0;
	}
	// inline asm
	st.local.u32 	[%rd861], %r987;
	add.s64 	%rd861, %rd861, 4;
	add.s64 	%rd860, %rd860, 4;
	add.s32 	%r1659, %r1659, 1;
	setp.ne.s32	%p198, %r1659, 0;
	@%p198 bra 	BB1_283;

	and.b32  	%r992, %r297, 255;
	add.s32 	%r993, %r992, -128;
	shr.u32 	%r994, %r993, 5;
	and.b32  	%r303, %r296, -2147483648;
	st.local.u32 	[%rd45], %r1660;
	mov.u32 	%r995, 6;
	sub.s32 	%r996, %r995, %r994;
	mul.wide.s32 	%rd274, %r996, 4;
	add.s64 	%rd63, %rd44, %rd274;
	ld.local.u32 	%r1661, [%rd63];
	ld.local.u32 	%r1662, [%rd63+-4];
	and.b32  	%r306, %r297, 31;
	setp.eq.s32	%p199, %r306, 0;
	@%p199 bra 	BB1_286;

	mov.u32 	%r997, 32;
	sub.s32 	%r998, %r997, %r306;
	shr.u32 	%r999, %r1662, %r998;
	shl.b32 	%r1000, %r1661, %r306;
	add.s32 	%r1661, %r999, %r1000;
	ld.local.u32 	%r1001, [%rd63+-8];
	shr.u32 	%r1002, %r1001, %r998;
	shl.b32 	%r1003, %r1662, %r306;
	add.s32 	%r1662, %r1002, %r1003;

BB1_286:
	shr.u32 	%r1004, %r1662, 30;
	shl.b32 	%r1005, %r1661, 2;
	add.s32 	%r1663, %r1004, %r1005;
	shl.b32 	%r312, %r1662, 2;
	shr.u32 	%r1006, %r1663, 31;
	shr.u32 	%r1007, %r1661, 30;
	add.s32 	%r313, %r1006, %r1007;
	setp.eq.s32	%p200, %r1006, 0;
	@%p200 bra 	BB1_287;

	not.b32 	%r1008, %r1663;
	neg.s32 	%r1665, %r312;
	setp.eq.s32	%p201, %r312, 0;
	selp.u32	%r1009, 1, 0, %p201;
	add.s32 	%r1663, %r1009, %r1008;
	xor.b32  	%r1664, %r303, -2147483648;
	bra.uni 	BB1_289;

BB1_265:
	ld.global.u32 	%r953, [dataRenderer+160];
	mov.u32 	%r955, 176;
	// inline asm
	call (%rd231, %rd232, %rd233, %rd234), _rt_buffer_get_id_size_64, (%r953, %r475, %r955);
	// inline asm
	cvt.u32.u64	%r291, %rd231;
	setp.eq.s32	%p183, %r291, 0;
	mov.f32 	%f3677, %f3678;
	mov.f32 	%f3676, %f3678;
	mov.f32 	%f3675, %f3678;
	@%p183 bra 	BB1_273;

	cvta.to.local.u64 	%rd56, %rd226;
	mov.f32 	%f3678, 0f00000000;
	mov.u32 	%r1658, 0;
	mov.u64 	%rd859, %rd225;
	mov.f32 	%f3677, %f3678;
	mov.f32 	%f3676, %f3678;
	mov.f32 	%f3675, %f3678;

BB1_267:
	ld.global.u32 	%r957, [dataRenderer+160];
	// inline asm
	call (%rd237), _rt_buffer_get_id_64, (%r957, %r475, %r955, %rd859, %rd225, %rd225, %rd225);
	// inline asm
	ld.u32 	%rd244, [%rd237];
	mov.u64 	%rd249, buf_light_sample_L;
	cvta.global.u64 	%rd243, %rd249;
	mov.u32 	%r961, 4;
	// inline asm
	call (%rd242), _rt_buffer_get_64, (%rd243, %r475, %r961, %rd244, %rd225, %rd225, %rd225);
	// inline asm
	ld.u32 	%r962, [%rd242];
	// inline asm
	call (%rd248), _rt_callable_program_from_id_64, (%r962);
	// inline asm
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd237;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd113;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd112;
	prototype_10 : .callprototype ()_ (.param .b64 _, .param .b64 _, .param .b64 _);
	call 
	%rd248, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_10;
	
	//{
	}// Callseq End 10
	ld.local.v4.f32 	{%f1525, %f1526, %f1527, %f1528}, [%rd2+52];
	mul.f32 	%f1530, %f1526, 0f3F170A3D;
	fma.rn.f32 	%f1532, %f1525, 0f3E99999A, %f1530;
	fma.rn.f32 	%f1534, %f1527, 0f3DE147AE, %f1532;
	fma.rn.f32 	%f1536, %f1528, 0f00000000, %f1534;
	setp.le.f32	%p184, %f1536, 0f358637BD;
	@%p184 bra 	BB1_272;

	ld.local.f32 	%f1537, [%rd2+36];
	setp.le.f32	%p185, %f1537, 0f3A83126F;
	@%p185 bra 	BB1_272;

	ld.local.v2.f32 	{%f1538, %f1539}, [%rd2+12];
	mul.f32 	%f1542, %f1539, %f1539;
	fma.rn.f32 	%f1543, %f1538, %f1538, %f1542;
	ld.local.f32 	%f1544, [%rd2+20];
	fma.rn.f32 	%f1545, %f1544, %f1544, %f1543;
	sqrt.rn.f32 	%f274, %f1545;
	rcp.rn.f32 	%f1546, %f274;
	mul.f32 	%f275, %f1546, %f1538;
	mul.f32 	%f276, %f1546, %f1539;
	mul.f32 	%f277, %f1546, %f1544;
	ld.local.v4.f32 	{%f1547, %f1548, %f1549, %f1550}, [%rd2+-12];
	st.local.v2.f32 	[%rd2+12], {%f275, %f276};
	st.local.f32 	[%rd2+20], %f277;
	ld.local.f32 	%f1551, [%rd2+16];
	mul.f32 	%f1553, %f1551, %f1548;
	fma.rn.f32 	%f1555, %f275, %f1547, %f1553;
	ld.local.f32 	%f1557, [%rd2+20];
	fma.rn.f32 	%f278, %f1557, %f1549, %f1555;
	setp.leu.f32	%p186, %f278, 0f00000000;
	@%p186 bra 	BB1_272;

	ld.global.f32 	%f1564, [dataRenderer+8];
	ld.local.f32 	%f1560, [%rd2+32];
	ld.local.f32 	%f1559, [%rd2+28];
	ld.local.f32 	%f1558, [%rd2+24];
	mov.u16 	%rs6, 1;
	st.local.u8 	[%rd56], %rs6;
	ld.global.u32 	%r963, [topObject];
	mov.u32 	%r964, 2;
	// inline asm
	call _rt_trace_64, (%r963, %f1558, %f1559, %f1560, %f275, %f276, %f277, %r964, %f1564, %f274, %rd226, %r475);
	// inline asm
	ld.local.u8 	%rs7, [%rd56];
	setp.eq.s16	%p187, %rs7, 0;
	@%p187 bra 	BB1_272;

	mov.u64 	%rd260, buf_lm_F;
	cvta.global.u64 	%rd254, %rd260;
	mov.u64 	%rd258, 0;
	// inline asm
	call (%rd253), _rt_buffer_get_64, (%rd254, %r475, %r961, %rd258, %rd258, %rd258, %rd258);
	// inline asm
	ld.u32 	%r968, [%rd253];
	// inline asm
	call (%rd259), _rt_callable_program_from_id_64, (%r968);
	// inline asm
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_11 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd259, 
	(
	param0, 
	param1
	)
	, prototype_11;
	
	//{
	}// Callseq End 11
	ld.local.v2.f32 	{%f1566, %f1567}, [%rd2+36];
	ld.local.v4.f32 	{%f1570, %f1571, %f1572, %f1573}, [%rd2+52];
	mul.f32 	%f1575, %f1567, %f1570;
	mul.f32 	%f1577, %f1567, %f1571;
	mul.f32 	%f1579, %f1567, %f1572;
	mul.f32 	%f1581, %f1567, %f1573;
	mul.f32 	%f1582, %f278, %f1575;
	mul.f32 	%f1583, %f278, %f1577;
	mul.f32 	%f1584, %f278, %f1579;
	mul.f32 	%f1585, %f278, %f1581;
	rcp.rn.f32 	%f1586, %f1566;
	fma.rn.f32 	%f3675, %f1582, %f1586, %f3675;
	fma.rn.f32 	%f3676, %f1583, %f1586, %f3676;
	fma.rn.f32 	%f3677, %f1584, %f1586, %f3677;
	fma.rn.f32 	%f3678, %f1585, %f1586, %f3678;

BB1_272:
	add.s64 	%rd859, %rd859, 1;
	add.s32 	%r1658, %r1658, 1;
	setp.lt.u32	%p188, %r1658, %r291;
	@%p188 bra 	BB1_267;

BB1_273:
	st.local.v4.f32 	[%rd2+52], {%f3675, %f3676, %f3677, %f3678};
	mov.u64 	%rd270, buf_lm_sample_F;
	cvta.global.u64 	%rd264, %rd270;
	mov.u32 	%r970, 4;
	mov.u64 	%rd268, 0;
	// inline asm
	call (%rd263), _rt_buffer_get_64, (%rd264, %r475, %r970, %rd268, %rd268, %rd268, %rd268);
	// inline asm
	ld.u32 	%r971, [%rd263];
	// inline asm
	call (%rd269), _rt_callable_program_from_id_64, (%r971);
	// inline asm
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd113;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd112;
	prototype_12 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd269, 
	(
	param0, 
	param1
	)
	, prototype_12;
	
	//{
	}// Callseq End 12
	st.global.v4.f32 	[prdR+48], {%f5, %f6, %f7, %f8};
	mov.u32 	%r972, 0;
	st.global.u32 	[prdR+80], %r972;
	ld.global.u32 	%r973, [dataRenderer+164];
	add.s32 	%r294, %r973, -1;
	ld.global.u32 	%r974, [prdR+4];
	setp.ge.u32	%p189, %r974, %r294;
	@%p189 bra 	BB1_558;

	add.s32 	%r1561, %r973, -1;
	st.global.u32 	[prdR+4], %r1561;
	bra.uni 	BB1_558;

BB1_160:
	mov.u32 	%r1623, %r158;
	mov.u32 	%r1624, %r167;

BB1_162:
	clz.b32 	%r1626, %r1622;
	setp.eq.s32	%p106, %r1626, 0;
	shl.b32 	%r764, %r1622, %r1626;
	mov.u32 	%r765, 32;
	sub.s32 	%r766, %r765, %r1626;
	shr.u32 	%r767, %r1624, %r766;
	add.s32 	%r768, %r767, %r764;
	selp.b32	%r176, %r1622, %r768, %p106;
	mov.u32 	%r769, -921707870;
	mul.hi.u32 	%r1625, %r176, %r769;
	setp.eq.s32	%p107, %r158, 0;
	neg.s32 	%r770, %r168;
	selp.b32	%r1627, %r168, %r770, %p107;
	setp.lt.s32	%p108, %r1625, 1;
	@%p108 bra 	BB1_164;

	mul.lo.s32 	%r771, %r176, -921707870;
	shr.u32 	%r772, %r771, 31;
	shl.b32 	%r773, %r1625, 1;
	add.s32 	%r1625, %r772, %r773;
	add.s32 	%r1626, %r1626, 1;

BB1_164:
	mov.u32 	%r774, 126;
	sub.s32 	%r775, %r774, %r1626;
	shl.b32 	%r776, %r775, 23;
	add.s32 	%r777, %r1625, 1;
	shr.u32 	%r778, %r777, 7;
	add.s32 	%r779, %r778, 1;
	shr.u32 	%r780, %r779, 1;
	add.s32 	%r781, %r780, %r776;
	or.b32  	%r782, %r781, %r1623;
	mov.b32 	 %f3642, %r782;

BB1_165:
	mul.rn.f32 	%f164, %f3642, %f3642;
	add.s32 	%r184, %r1627, 1;
	and.b32  	%r185, %r184, 1;
	setp.eq.s32	%p109, %r185, 0;
	@%p109 bra 	BB1_167;

	mov.f32 	%f1187, 0fBAB6061A;
	mov.f32 	%f1188, 0f37CCF5CE;
	fma.rn.f32 	%f3643, %f1188, %f164, %f1187;
	bra.uni 	BB1_168;

BB1_167:
	mov.f32 	%f1189, 0f3C08839E;
	mov.f32 	%f1190, 0fB94CA1F9;
	fma.rn.f32 	%f3643, %f1190, %f164, %f1189;

BB1_168:
	@%p109 bra 	BB1_170;

	mov.f32 	%f1191, 0f3D2AAAA5;
	fma.rn.f32 	%f1192, %f3643, %f164, %f1191;
	fma.rn.f32 	%f3644, %f1192, %f164, %f1086;
	bra.uni 	BB1_171;

BB1_170:
	mov.f32 	%f1194, 0fBE2AAAA3;
	fma.rn.f32 	%f1195, %f3643, %f164, %f1194;
	mov.f32 	%f1196, 0f00000000;
	fma.rn.f32 	%f3644, %f1195, %f164, %f1196;

BB1_171:
	fma.rn.f32 	%f3645, %f3644, %f3642, %f3642;
	@%p109 bra 	BB1_173;

	fma.rn.f32 	%f3645, %f3644, %f164, %f1062;

BB1_173:
	and.b32  	%r783, %r184, 2;
	setp.eq.s32	%p112, %r783, 0;
	@%p112 bra 	BB1_175;

	mov.f32 	%f1198, 0f00000000;
	mov.f32 	%f1199, 0fBF800000;
	fma.rn.f32 	%f3645, %f3645, %f1199, %f1198;

BB1_175:
	@%p100 bra 	BB1_177;

	mov.f32 	%f1200, 0f00000000;
	mul.rn.f32 	%f3647, %f3647, %f1200;

BB1_177:
	mul.f32 	%f1201, %f3647, 0f3F22F983;
	cvt.rni.s32.f32	%r1637, %f1201;
	cvt.rn.f32.s32	%f1202, %r1637;
	neg.f32 	%f1203, %f1202;
	fma.rn.f32 	%f1205, %f1203, %f938, %f3647;
	fma.rn.f32 	%f1207, %f1203, %f940, %f1205;
	fma.rn.f32 	%f3648, %f1203, %f942, %f1207;
	abs.f32 	%f1209, %f3647;
	setp.leu.f32	%p114, %f1209, 0f47CE4780;
	@%p114 bra 	BB1_188;

	mov.b32 	 %r187, %f3647;
	shr.u32 	%r188, %r187, 23;
	shl.b32 	%r786, %r187, 8;
	or.b32  	%r189, %r786, -2147483648;
	mov.u32 	%r1629, 0;
	mov.u64 	%rd853, __cudart_i2opi_f;
	mov.u32 	%r1628, -6;
	mov.u64 	%rd854, %rd8;

BB1_179:
	.pragma "nounroll";
	ld.const.u32 	%r789, [%rd853];
	// inline asm
	{
	mad.lo.cc.u32   %r787, %r789, %r189, %r1629;
	madc.hi.u32     %r1629, %r789, %r189,  0;
	}
	// inline asm
	st.local.u32 	[%rd854], %r787;
	add.s64 	%rd854, %rd854, 4;
	add.s64 	%rd853, %rd853, 4;
	add.s32 	%r1628, %r1628, 1;
	setp.ne.s32	%p115, %r1628, 0;
	@%p115 bra 	BB1_179;

	and.b32  	%r792, %r188, 255;
	add.s32 	%r793, %r792, -128;
	shr.u32 	%r794, %r793, 5;
	and.b32  	%r194, %r187, -2147483648;
	st.local.u32 	[%rd9], %r1629;
	mov.u32 	%r795, 6;
	sub.s32 	%r796, %r795, %r794;
	mul.wide.s32 	%rd220, %r796, 4;
	add.s64 	%rd42, %rd8, %rd220;
	ld.local.u32 	%r1630, [%rd42];
	ld.local.u32 	%r1631, [%rd42+-4];
	and.b32  	%r197, %r188, 31;
	setp.eq.s32	%p116, %r197, 0;
	@%p116 bra 	BB1_182;

	mov.u32 	%r797, 32;
	sub.s32 	%r798, %r797, %r197;
	shr.u32 	%r799, %r1631, %r798;
	shl.b32 	%r800, %r1630, %r197;
	add.s32 	%r1630, %r799, %r800;
	ld.local.u32 	%r801, [%rd42+-8];
	shr.u32 	%r802, %r801, %r798;
	shl.b32 	%r803, %r1631, %r197;
	add.s32 	%r1631, %r802, %r803;

BB1_182:
	shr.u32 	%r804, %r1631, 30;
	shl.b32 	%r805, %r1630, 2;
	add.s32 	%r1632, %r804, %r805;
	shl.b32 	%r203, %r1631, 2;
	shr.u32 	%r806, %r1632, 31;
	shr.u32 	%r807, %r1630, 30;
	add.s32 	%r204, %r806, %r807;
	setp.eq.s32	%p117, %r806, 0;
	@%p117 bra 	BB1_183;

	not.b32 	%r808, %r1632;
	neg.s32 	%r1634, %r203;
	setp.eq.s32	%p118, %r203, 0;
	selp.u32	%r809, 1, 0, %p118;
	add.s32 	%r1632, %r809, %r808;
	xor.b32  	%r1633, %r194, -2147483648;
	bra.uni 	BB1_185;

BB1_183:
	mov.u32 	%r1633, %r194;
	mov.u32 	%r1634, %r203;

BB1_185:
	clz.b32 	%r1636, %r1632;
	setp.eq.s32	%p119, %r1636, 0;
	shl.b32 	%r810, %r1632, %r1636;
	mov.u32 	%r811, 32;
	sub.s32 	%r812, %r811, %r1636;
	shr.u32 	%r813, %r1634, %r812;
	add.s32 	%r814, %r813, %r810;
	selp.b32	%r212, %r1632, %r814, %p119;
	mov.u32 	%r815, -921707870;
	mul.hi.u32 	%r1635, %r212, %r815;
	setp.eq.s32	%p120, %r194, 0;
	neg.s32 	%r816, %r204;
	selp.b32	%r1637, %r204, %r816, %p120;
	setp.lt.s32	%p121, %r1635, 1;
	@%p121 bra 	BB1_187;

	mul.lo.s32 	%r817, %r212, -921707870;
	shr.u32 	%r818, %r817, 31;
	shl.b32 	%r819, %r1635, 1;
	add.s32 	%r1635, %r818, %r819;
	add.s32 	%r1636, %r1636, 1;

BB1_187:
	mov.u32 	%r820, 126;
	sub.s32 	%r821, %r820, %r1636;
	shl.b32 	%r822, %r821, 23;
	add.s32 	%r823, %r1635, 1;
	shr.u32 	%r824, %r823, 7;
	add.s32 	%r825, %r824, 1;
	shr.u32 	%r826, %r825, 1;
	add.s32 	%r827, %r826, %r822;
	or.b32  	%r828, %r827, %r1633;
	mov.b32 	 %f3648, %r828;

BB1_188:
	mul.rn.f32 	%f181, %f3648, %f3648;
	and.b32  	%r220, %r1637, 1;
	setp.eq.s32	%p122, %r220, 0;
	@%p122 bra 	BB1_190;

	mov.f32 	%f1210, 0fBAB6061A;
	mov.f32 	%f1211, 0f37CCF5CE;
	fma.rn.f32 	%f3649, %f1211, %f181, %f1210;
	bra.uni 	BB1_191;

BB1_190:
	mov.f32 	%f1212, 0f3C08839E;
	mov.f32 	%f1213, 0fB94CA1F9;
	fma.rn.f32 	%f3649, %f1213, %f181, %f1212;

BB1_191:
	@%p122 bra 	BB1_193;

	mov.f32 	%f1214, 0f3D2AAAA5;
	fma.rn.f32 	%f1215, %f3649, %f181, %f1214;
	fma.rn.f32 	%f3650, %f1215, %f181, %f1086;
	bra.uni 	BB1_194;

BB1_193:
	mov.f32 	%f1217, 0fBE2AAAA3;
	fma.rn.f32 	%f1218, %f3649, %f181, %f1217;
	mov.f32 	%f1219, 0f00000000;
	fma.rn.f32 	%f3650, %f1218, %f181, %f1219;

BB1_194:
	fma.rn.f32 	%f3651, %f3650, %f3648, %f3648;
	@%p122 bra 	BB1_196;

	fma.rn.f32 	%f3651, %f3650, %f181, %f1062;

BB1_196:
	and.b32  	%r829, %r1637, 2;
	setp.eq.s32	%p125, %r829, 0;
	@%p125 bra 	BB1_198;

	mov.f32 	%f1221, 0f00000000;
	mov.f32 	%f1222, 0fBF800000;
	fma.rn.f32 	%f3651, %f3651, %f1222, %f1221;

BB1_198:
	mul.f32 	%f1223, %f3633, %f3645;
	mul.f32 	%f1224, %f3633, %f3651;
	mul.f32 	%f1225, %f154, %f1224;
	mul.f32 	%f1226, %f155, %f1224;
	mul.f32 	%f1227, %f156, %f1224;
	mul.f32 	%f1228, %f1163, %f155;
	mul.f32 	%f1229, %f1162, %f156;
	sub.f32 	%f1230, %f1228, %f1229;
	fma.rn.f32 	%f1231, %f1230, %f1223, %f1225;
	mul.f32 	%f1232, %f1161, %f156;
	mul.f32 	%f1233, %f1163, %f154;
	sub.f32 	%f1234, %f1232, %f1233;
	fma.rn.f32 	%f1235, %f1234, %f1223, %f1226;
	mul.f32 	%f1236, %f1162, %f154;
	mul.f32 	%f1237, %f1161, %f155;
	sub.f32 	%f1238, %f1236, %f1237;
	fma.rn.f32 	%f1239, %f1238, %f1223, %f1227;
	fma.rn.f32 	%f1240, %f3639, %f1161, %f1231;
	fma.rn.f32 	%f1241, %f3639, %f1162, %f1235;
	fma.rn.f32 	%f1242, %f3639, %f1163, %f1239;
	mul.f32 	%f1243, %f1241, %f1241;
	fma.rn.f32 	%f1244, %f1240, %f1240, %f1243;
	fma.rn.f32 	%f1245, %f1242, %f1242, %f1244;
	sqrt.rn.f32 	%f1246, %f1245;
	rcp.rn.f32 	%f1247, %f1246;
	mul.f32 	%f1248, %f1247, %f1240;
	mul.f32 	%f1249, %f1247, %f1241;
	mul.f32 	%f1250, %f1247, %f1242;
	ld.local.v4.f32 	{%f1251, %f1252, %f1253, %f1254}, [%rd2+-12];
	neg.f32 	%f1256, %f1254;
	ld.local.v2.f32 	{%f1257, %f1258}, [%rd2+4];
	neg.f32 	%f1260, %f1257;
	neg.f32 	%f1262, %f1258;
	add.f32 	%f1263, %f1248, %f1248;
	add.f32 	%f1264, %f1249, %f1249;
	add.f32 	%f1265, %f1250, %f1250;
	mul.f32 	%f1266, %f1248, %f1256;
	mul.f32 	%f1267, %f1249, %f1257;
	sub.f32 	%f1268, %f1266, %f1267;
	mul.f32 	%f1269, %f1250, %f1258;
	sub.f32 	%f1270, %f1268, %f1269;
	mul.f32 	%f1271, %f1263, %f1270;
	mul.f32 	%f1272, %f1264, %f1270;
	mul.f32 	%f1273, %f1265, %f1270;
	sub.f32 	%f1274, %f1262, %f1273;
	sub.f32 	%f1275, %f1260, %f1272;
	sub.f32 	%f1276, %f1256, %f1271;
	st.local.v2.f32 	[%rd2+12], {%f1276, %f1275};
	st.local.f32 	[%rd2+20], %f1274;
	ld.local.f32 	%f3654, [%rd2+16];
	mul.f32 	%f1277, %f3654, %f1252;
	fma.rn.f32 	%f1278, %f1276, %f1251, %f1277;
	ld.local.f32 	%f3653, [%rd2+20];
	fma.rn.f32 	%f1279, %f3653, %f1253, %f1278;
	setp.lt.f32	%p126, %f1279, 0f00000000;
	@%p126 bra 	BB1_200;
	bra.uni 	BB1_199;

BB1_200:
	ld.local.f32 	%f1280, [%rd2+12];
	neg.f32 	%f3655, %f1280;
	neg.f32 	%f3654, %f3654;
	st.local.v2.f32 	[%rd2+12], {%f3655, %f3654};
	neg.f32 	%f3653, %f3653;
	st.local.f32 	[%rd2+20], %f3653;
	bra.uni 	BB1_201;

BB1_199:
	ld.local.f32 	%f3655, [%rd2+12];

BB1_201:
	mul.f32 	%f1281, %f3654, %f3654;
	fma.rn.f32 	%f1282, %f3655, %f3655, %f1281;
	fma.rn.f32 	%f1283, %f3653, %f3653, %f1282;
	sqrt.rn.f32 	%f1284, %f1283;
	rcp.rn.f32 	%f1285, %f1284;
	mul.f32 	%f1286, %f1285, %f3653;
	mul.f32 	%f1287, %f1285, %f3654;
	mul.f32 	%f1288, %f1285, %f3655;
	st.local.v2.f32 	[%rd2+12], {%f1288, %f1287};
	st.local.f32 	[%rd2+20], %f1286;
	mov.u32 	%r830, 1065353216;
	st.local.u32 	[%rd2+36], %r830;
	ld.local.f32 	%f1289, [%rd2+16];
	mul.f32 	%f1290, %f1289, %f1252;
	fma.rn.f32 	%f1291, %f1288, %f1251, %f1290;
	ld.local.f32 	%f1292, [%rd2+20];
	fma.rn.f32 	%f1293, %f1292, %f1253, %f1291;
	abs.f32 	%f1294, %f1293;
	rcp.rn.f32 	%f1295, %f1294;
	st.local.f32 	[%rd2+40], %f1295;
	ld.v4.f32 	{%f1296, %f1297, %f1298, %f1299}, [%rd161+224];
	st.global.v4.f32 	[prdR+48], {%f1296, %f1297, %f1298, %f1299};
	ld.global.f32 	%f1304, [prdR+80];
	setp.leu.f32	%p127, %f1304, 0f3F800000;
	@%p127 bra 	BB1_203;

	st.global.u32 	[prdR+80], %r830;

BB1_203:
	mov.f32 	%f1305, 0f00000000;
	st.local.v4.f32 	[%rd2+52], {%f1305, %f1305, %f1305, %f1305};
	bra.uni 	BB1_558;

BB1_287:
	mov.u32 	%r1664, %r303;
	mov.u32 	%r1665, %r312;

BB1_289:
	clz.b32 	%r1667, %r1663;
	setp.eq.s32	%p202, %r1667, 0;
	shl.b32 	%r1010, %r1663, %r1667;
	mov.u32 	%r1011, 32;
	sub.s32 	%r1012, %r1011, %r1667;
	shr.u32 	%r1013, %r1665, %r1012;
	add.s32 	%r1014, %r1013, %r1010;
	selp.b32	%r321, %r1663, %r1014, %p202;
	mov.u32 	%r1015, -921707870;
	mul.hi.u32 	%r1666, %r321, %r1015;
	setp.eq.s32	%p203, %r303, 0;
	neg.s32 	%r1016, %r313;
	selp.b32	%r1668, %r313, %r1016, %p203;
	setp.lt.s32	%p204, %r1666, 1;
	@%p204 bra 	BB1_291;

	mul.lo.s32 	%r1017, %r321, -921707870;
	shr.u32 	%r1018, %r1017, 31;
	shl.b32 	%r1019, %r1666, 1;
	add.s32 	%r1666, %r1018, %r1019;
	add.s32 	%r1667, %r1667, 1;

BB1_291:
	mov.u32 	%r1020, 126;
	sub.s32 	%r1021, %r1020, %r1667;
	shl.b32 	%r1022, %r1021, 23;
	add.s32 	%r1023, %r1666, 1;
	shr.u32 	%r1024, %r1023, 7;
	add.s32 	%r1025, %r1024, 1;
	shr.u32 	%r1026, %r1025, 1;
	add.s32 	%r1027, %r1026, %r1022;
	or.b32  	%r1028, %r1027, %r1664;
	mov.b32 	 %f3686, %r1028;

BB1_292:
	mul.rn.f32 	%f308, %f3686, %f3686;
	and.b32  	%r329, %r1668, 1;
	setp.eq.s32	%p205, %r329, 0;
	@%p205 bra 	BB1_294;

	mov.f32 	%f1653, 0fBAB6061A;
	mov.f32 	%f1654, 0f37CCF5CE;
	fma.rn.f32 	%f3687, %f1654, %f308, %f1653;
	bra.uni 	BB1_295;

BB1_294:
	mov.f32 	%f1655, 0f3C08839E;
	mov.f32 	%f1656, 0fB94CA1F9;
	fma.rn.f32 	%f3687, %f1656, %f308, %f1655;

BB1_295:
	@%p205 bra 	BB1_297;

	mov.f32 	%f1657, 0f3D2AAAA5;
	fma.rn.f32 	%f1658, %f3687, %f308, %f1657;
	fma.rn.f32 	%f3688, %f1658, %f308, %f1614;
	bra.uni 	BB1_298;

BB1_297:
	mov.f32 	%f1660, 0fBE2AAAA3;
	fma.rn.f32 	%f1661, %f3687, %f308, %f1660;
	mov.f32 	%f1662, 0f00000000;
	fma.rn.f32 	%f3688, %f1661, %f308, %f1662;

BB1_298:
	fma.rn.f32 	%f3689, %f3688, %f3686, %f3686;
	@%p205 bra 	BB1_300;

	fma.rn.f32 	%f3689, %f3688, %f308, %f1328;

BB1_300:
	and.b32  	%r1029, %r1668, 2;
	setp.eq.s32	%p208, %r1029, 0;
	@%p208 bra 	BB1_302;

	mov.f32 	%f1664, 0f00000000;
	mov.f32 	%f1665, 0fBF800000;
	fma.rn.f32 	%f3689, %f3689, %f1665, %f1664;

BB1_302:
	@%p196 bra 	BB1_304;

	mov.f32 	%f1666, 0f00000000;
	mul.rn.f32 	%f3691, %f3691, %f1666;

BB1_304:
	mul.f32 	%f1667, %f3691, 0f3F22F983;
	cvt.rni.s32.f32	%r1678, %f1667;
	cvt.rn.f32.s32	%f1668, %r1678;
	neg.f32 	%f1669, %f1668;
	fma.rn.f32 	%f1671, %f1669, %f1466, %f3691;
	fma.rn.f32 	%f1673, %f1669, %f1468, %f1671;
	fma.rn.f32 	%f3692, %f1669, %f1470, %f1673;
	abs.f32 	%f1675, %f3691;
	setp.leu.f32	%p210, %f1675, 0f47CE4780;
	@%p210 bra 	BB1_315;

	mov.b32 	 %r331, %f3691;
	shr.u32 	%r332, %r331, 23;
	shl.b32 	%r1032, %r331, 8;
	or.b32  	%r333, %r1032, -2147483648;
	mov.u32 	%r1670, 0;
	mov.u64 	%rd862, __cudart_i2opi_f;
	mov.u32 	%r1669, -6;
	mov.u64 	%rd863, %rd44;

BB1_306:
	.pragma "nounroll";
	ld.const.u32 	%r1035, [%rd862];
	// inline asm
	{
	mad.lo.cc.u32   %r1033, %r1035, %r333, %r1670;
	madc.hi.u32     %r1670, %r1035, %r333,  0;
	}
	// inline asm
	st.local.u32 	[%rd863], %r1033;
	add.s64 	%rd863, %rd863, 4;
	add.s64 	%rd862, %rd862, 4;
	add.s32 	%r1669, %r1669, 1;
	setp.ne.s32	%p211, %r1669, 0;
	@%p211 bra 	BB1_306;

	and.b32  	%r1038, %r332, 255;
	add.s32 	%r1039, %r1038, -128;
	shr.u32 	%r1040, %r1039, 5;
	and.b32  	%r338, %r331, -2147483648;
	st.local.u32 	[%rd45], %r1670;
	mov.u32 	%r1041, 6;
	sub.s32 	%r1042, %r1041, %r1040;
	mul.wide.s32 	%rd276, %r1042, 4;
	add.s64 	%rd68, %rd44, %rd276;
	ld.local.u32 	%r1671, [%rd68];
	ld.local.u32 	%r1672, [%rd68+-4];
	and.b32  	%r341, %r332, 31;
	setp.eq.s32	%p212, %r341, 0;
	@%p212 bra 	BB1_309;

	mov.u32 	%r1043, 32;
	sub.s32 	%r1044, %r1043, %r341;
	shr.u32 	%r1045, %r1672, %r1044;
	shl.b32 	%r1046, %r1671, %r341;
	add.s32 	%r1671, %r1045, %r1046;
	ld.local.u32 	%r1047, [%rd68+-8];
	shr.u32 	%r1048, %r1047, %r1044;
	shl.b32 	%r1049, %r1672, %r341;
	add.s32 	%r1672, %r1048, %r1049;

BB1_309:
	shr.u32 	%r1050, %r1672, 30;
	shl.b32 	%r1051, %r1671, 2;
	add.s32 	%r1673, %r1050, %r1051;
	shl.b32 	%r347, %r1672, 2;
	shr.u32 	%r1052, %r1673, 31;
	shr.u32 	%r1053, %r1671, 30;
	add.s32 	%r348, %r1052, %r1053;
	setp.eq.s32	%p213, %r1052, 0;
	@%p213 bra 	BB1_310;

	not.b32 	%r1054, %r1673;
	neg.s32 	%r1675, %r347;
	setp.eq.s32	%p214, %r347, 0;
	selp.u32	%r1055, 1, 0, %p214;
	add.s32 	%r1673, %r1055, %r1054;
	xor.b32  	%r1674, %r338, -2147483648;
	bra.uni 	BB1_312;

BB1_310:
	mov.u32 	%r1674, %r338;
	mov.u32 	%r1675, %r347;

BB1_312:
	clz.b32 	%r1677, %r1673;
	setp.eq.s32	%p215, %r1677, 0;
	shl.b32 	%r1056, %r1673, %r1677;
	mov.u32 	%r1057, 32;
	sub.s32 	%r1058, %r1057, %r1677;
	shr.u32 	%r1059, %r1675, %r1058;
	add.s32 	%r1060, %r1059, %r1056;
	selp.b32	%r356, %r1673, %r1060, %p215;
	mov.u32 	%r1061, -921707870;
	mul.hi.u32 	%r1676, %r356, %r1061;
	setp.eq.s32	%p216, %r338, 0;
	neg.s32 	%r1062, %r348;
	selp.b32	%r1678, %r348, %r1062, %p216;
	setp.lt.s32	%p217, %r1676, 1;
	@%p217 bra 	BB1_314;

	mul.lo.s32 	%r1063, %r356, -921707870;
	shr.u32 	%r1064, %r1063, 31;
	shl.b32 	%r1065, %r1676, 1;
	add.s32 	%r1676, %r1064, %r1065;
	add.s32 	%r1677, %r1677, 1;

BB1_314:
	mov.u32 	%r1066, 126;
	sub.s32 	%r1067, %r1066, %r1677;
	shl.b32 	%r1068, %r1067, 23;
	add.s32 	%r1069, %r1676, 1;
	shr.u32 	%r1070, %r1069, 7;
	add.s32 	%r1071, %r1070, 1;
	shr.u32 	%r1072, %r1071, 1;
	add.s32 	%r1073, %r1072, %r1068;
	or.b32  	%r1074, %r1073, %r1674;
	mov.b32 	 %f3692, %r1074;

BB1_315:
	mul.rn.f32 	%f325, %f3692, %f3692;
	add.s32 	%r364, %r1678, 1;
	and.b32  	%r365, %r364, 1;
	setp.eq.s32	%p218, %r365, 0;
	@%p218 bra 	BB1_317;

	mov.f32 	%f1676, 0fBAB6061A;
	mov.f32 	%f1677, 0f37CCF5CE;
	fma.rn.f32 	%f3693, %f1677, %f325, %f1676;
	bra.uni 	BB1_318;

BB1_317:
	mov.f32 	%f1678, 0f3C08839E;
	mov.f32 	%f1679, 0fB94CA1F9;
	fma.rn.f32 	%f3693, %f1679, %f325, %f1678;

BB1_318:
	@%p218 bra 	BB1_320;

	mov.f32 	%f1680, 0f3D2AAAA5;
	fma.rn.f32 	%f1681, %f3693, %f325, %f1680;
	fma.rn.f32 	%f3694, %f1681, %f325, %f1614;
	bra.uni 	BB1_321;

BB1_320:
	mov.f32 	%f1683, 0fBE2AAAA3;
	fma.rn.f32 	%f1684, %f3693, %f325, %f1683;
	mov.f32 	%f1685, 0f00000000;
	fma.rn.f32 	%f3694, %f1684, %f325, %f1685;

BB1_321:
	fma.rn.f32 	%f3695, %f3694, %f3692, %f3692;
	@%p218 bra 	BB1_323;

	fma.rn.f32 	%f3695, %f3694, %f325, %f1328;

BB1_323:
	and.b32  	%r1075, %r364, 2;
	setp.eq.s32	%p221, %r1075, 0;
	@%p221 bra 	BB1_325;

	mov.f32 	%f1687, 0f00000000;
	mov.f32 	%f1688, 0fBF800000;
	fma.rn.f32 	%f3695, %f3695, %f1688, %f1687;

BB1_325:
	ld.local.v4.f32 	{%f1689, %f1690, %f1691, %f1692}, [%rd2+-12];
	abs.f32 	%f1693, %f1689;
	abs.f32 	%f1694, %f1691;
	setp.gt.f32	%p222, %f1693, %f1694;
	neg.f32 	%f1695, %f1690;
	neg.f32 	%f1696, %f1691;
	selp.f32	%f1697, %f1695, 0f00000000, %p222;
	selp.f32	%f1698, %f1689, %f1696, %p222;
	selp.f32	%f1699, 0f00000000, %f1690, %p222;
	mul.f32 	%f1700, %f1698, %f1698;
	fma.rn.f32 	%f1701, %f1697, %f1697, %f1700;
	fma.rn.f32 	%f1702, %f1699, %f1699, %f1701;
	sqrt.rn.f32 	%f1703, %f1702;
	rcp.rn.f32 	%f1704, %f1703;
	mul.f32 	%f340, %f1697, %f1704;
	mul.f32 	%f341, %f1698, %f1704;
	mul.f32 	%f342, %f1699, %f1704;
	mul.f32 	%f3703, %f294, 0f40C90FDB;
	abs.f32 	%f344, %f3703;
	setp.neu.f32	%p223, %f344, 0f7F800000;
	mov.f32 	%f3697, %f3703;
	@%p223 bra 	BB1_327;

	mov.f32 	%f1705, 0f00000000;
	mul.rn.f32 	%f3697, %f3703, %f1705;

BB1_327:
	mul.f32 	%f1706, %f3697, 0f3F22F983;
	cvt.rni.s32.f32	%r1688, %f1706;
	cvt.rn.f32.s32	%f1707, %r1688;
	neg.f32 	%f1708, %f1707;
	fma.rn.f32 	%f1710, %f1708, %f1466, %f3697;
	fma.rn.f32 	%f1712, %f1708, %f1468, %f1710;
	fma.rn.f32 	%f3698, %f1708, %f1470, %f1712;
	abs.f32 	%f1714, %f3697;
	setp.leu.f32	%p224, %f1714, 0f47CE4780;
	@%p224 bra 	BB1_338;

	mov.b32 	 %r367, %f3697;
	shr.u32 	%r368, %r367, 23;
	shl.b32 	%r1078, %r367, 8;
	or.b32  	%r369, %r1078, -2147483648;
	mov.u32 	%r1680, 0;
	mov.u64 	%rd864, __cudart_i2opi_f;
	mov.u32 	%r1679, -6;
	mov.u64 	%rd865, %rd44;

BB1_329:
	.pragma "nounroll";
	ld.const.u32 	%r1081, [%rd864];
	// inline asm
	{
	mad.lo.cc.u32   %r1079, %r1081, %r369, %r1680;
	madc.hi.u32     %r1680, %r1081, %r369,  0;
	}
	// inline asm
	st.local.u32 	[%rd865], %r1079;
	add.s64 	%rd865, %rd865, 4;
	add.s64 	%rd864, %rd864, 4;
	add.s32 	%r1679, %r1679, 1;
	setp.ne.s32	%p225, %r1679, 0;
	@%p225 bra 	BB1_329;

	and.b32  	%r1084, %r368, 255;
	add.s32 	%r1085, %r1084, -128;
	shr.u32 	%r1086, %r1085, 5;
	and.b32  	%r374, %r367, -2147483648;
	st.local.u32 	[%rd45], %r1680;
	mov.u32 	%r1087, 6;
	sub.s32 	%r1088, %r1087, %r1086;
	mul.wide.s32 	%rd278, %r1088, 4;
	add.s64 	%rd73, %rd44, %rd278;
	ld.local.u32 	%r1681, [%rd73];
	ld.local.u32 	%r1682, [%rd73+-4];
	and.b32  	%r377, %r368, 31;
	setp.eq.s32	%p226, %r377, 0;
	@%p226 bra 	BB1_332;

	mov.u32 	%r1089, 32;
	sub.s32 	%r1090, %r1089, %r377;
	shr.u32 	%r1091, %r1682, %r1090;
	shl.b32 	%r1092, %r1681, %r377;
	add.s32 	%r1681, %r1091, %r1092;
	ld.local.u32 	%r1093, [%rd73+-8];
	shr.u32 	%r1094, %r1093, %r1090;
	shl.b32 	%r1095, %r1682, %r377;
	add.s32 	%r1682, %r1094, %r1095;

BB1_332:
	shr.u32 	%r1096, %r1682, 30;
	shl.b32 	%r1097, %r1681, 2;
	add.s32 	%r1683, %r1096, %r1097;
	shl.b32 	%r383, %r1682, 2;
	shr.u32 	%r1098, %r1683, 31;
	shr.u32 	%r1099, %r1681, 30;
	add.s32 	%r384, %r1098, %r1099;
	setp.eq.s32	%p227, %r1098, 0;
	@%p227 bra 	BB1_333;

	not.b32 	%r1100, %r1683;
	neg.s32 	%r1685, %r383;
	setp.eq.s32	%p228, %r383, 0;
	selp.u32	%r1101, 1, 0, %p228;
	add.s32 	%r1683, %r1101, %r1100;
	xor.b32  	%r1684, %r374, -2147483648;
	bra.uni 	BB1_335;

BB1_333:
	mov.u32 	%r1684, %r374;
	mov.u32 	%r1685, %r383;

BB1_335:
	clz.b32 	%r1687, %r1683;
	setp.eq.s32	%p229, %r1687, 0;
	shl.b32 	%r1102, %r1683, %r1687;
	mov.u32 	%r1103, 32;
	sub.s32 	%r1104, %r1103, %r1687;
	shr.u32 	%r1105, %r1685, %r1104;
	add.s32 	%r1106, %r1105, %r1102;
	selp.b32	%r392, %r1683, %r1106, %p229;
	mov.u32 	%r1107, -921707870;
	mul.hi.u32 	%r1686, %r392, %r1107;
	setp.eq.s32	%p230, %r374, 0;
	neg.s32 	%r1108, %r384;
	selp.b32	%r1688, %r384, %r1108, %p230;
	setp.lt.s32	%p231, %r1686, 1;
	@%p231 bra 	BB1_337;

	mul.lo.s32 	%r1109, %r392, -921707870;
	shr.u32 	%r1110, %r1109, 31;
	shl.b32 	%r1111, %r1686, 1;
	add.s32 	%r1686, %r1110, %r1111;
	add.s32 	%r1687, %r1687, 1;

BB1_337:
	mov.u32 	%r1112, 126;
	sub.s32 	%r1113, %r1112, %r1687;
	shl.b32 	%r1114, %r1113, 23;
	add.s32 	%r1115, %r1686, 1;
	shr.u32 	%r1116, %r1115, 7;
	add.s32 	%r1117, %r1116, 1;
	shr.u32 	%r1118, %r1117, 1;
	add.s32 	%r1119, %r1118, %r1114;
	or.b32  	%r1120, %r1119, %r1684;
	mov.b32 	 %f3698, %r1120;

BB1_338:
	mul.rn.f32 	%f350, %f3698, %f3698;
	add.s32 	%r400, %r1688, 1;
	and.b32  	%r401, %r400, 1;
	setp.eq.s32	%p232, %r401, 0;
	@%p232 bra 	BB1_340;

	mov.f32 	%f1715, 0fBAB6061A;
	mov.f32 	%f1716, 0f37CCF5CE;
	fma.rn.f32 	%f3699, %f1716, %f350, %f1715;
	bra.uni 	BB1_341;

BB1_340:
	mov.f32 	%f1717, 0f3C08839E;
	mov.f32 	%f1718, 0fB94CA1F9;
	fma.rn.f32 	%f3699, %f1718, %f350, %f1717;

BB1_341:
	@%p232 bra 	BB1_343;

	mov.f32 	%f1719, 0f3D2AAAA5;
	fma.rn.f32 	%f1720, %f3699, %f350, %f1719;
	fma.rn.f32 	%f3700, %f1720, %f350, %f1614;
	bra.uni 	BB1_344;

BB1_343:
	mov.f32 	%f1722, 0fBE2AAAA3;
	fma.rn.f32 	%f1723, %f3699, %f350, %f1722;
	mov.f32 	%f1724, 0f00000000;
	fma.rn.f32 	%f3700, %f1723, %f350, %f1724;

BB1_344:
	fma.rn.f32 	%f3701, %f3700, %f3698, %f3698;
	@%p232 bra 	BB1_346;

	fma.rn.f32 	%f3701, %f3700, %f350, %f1328;

BB1_346:
	and.b32  	%r1121, %r400, 2;
	setp.eq.s32	%p235, %r1121, 0;
	@%p235 bra 	BB1_348;

	mov.f32 	%f1726, 0f00000000;
	mov.f32 	%f1727, 0fBF800000;
	fma.rn.f32 	%f3701, %f3701, %f1727, %f1726;

BB1_348:
	@%p223 bra 	BB1_350;

	mov.f32 	%f1728, 0f00000000;
	mul.rn.f32 	%f3703, %f3703, %f1728;

BB1_350:
	mul.f32 	%f1729, %f3703, 0f3F22F983;
	cvt.rni.s32.f32	%r1698, %f1729;
	cvt.rn.f32.s32	%f1730, %r1698;
	neg.f32 	%f1731, %f1730;
	fma.rn.f32 	%f1733, %f1731, %f1466, %f3703;
	fma.rn.f32 	%f1735, %f1731, %f1468, %f1733;
	fma.rn.f32 	%f3704, %f1731, %f1470, %f1735;
	abs.f32 	%f1737, %f3703;
	setp.leu.f32	%p237, %f1737, 0f47CE4780;
	@%p237 bra 	BB1_361;

	mov.b32 	 %r403, %f3703;
	shr.u32 	%r404, %r403, 23;
	shl.b32 	%r1124, %r403, 8;
	or.b32  	%r405, %r1124, -2147483648;
	mov.u32 	%r1690, 0;
	mov.u64 	%rd866, __cudart_i2opi_f;
	mov.u32 	%r1689, -6;
	mov.u64 	%rd867, %rd44;

BB1_352:
	.pragma "nounroll";
	ld.const.u32 	%r1127, [%rd866];
	// inline asm
	{
	mad.lo.cc.u32   %r1125, %r1127, %r405, %r1690;
	madc.hi.u32     %r1690, %r1127, %r405,  0;
	}
	// inline asm
	st.local.u32 	[%rd867], %r1125;
	add.s64 	%rd867, %rd867, 4;
	add.s64 	%rd866, %rd866, 4;
	add.s32 	%r1689, %r1689, 1;
	setp.ne.s32	%p238, %r1689, 0;
	@%p238 bra 	BB1_352;

	and.b32  	%r1130, %r404, 255;
	add.s32 	%r1131, %r1130, -128;
	shr.u32 	%r1132, %r1131, 5;
	and.b32  	%r410, %r403, -2147483648;
	st.local.u32 	[%rd45], %r1690;
	mov.u32 	%r1133, 6;
	sub.s32 	%r1134, %r1133, %r1132;
	mul.wide.s32 	%rd280, %r1134, 4;
	add.s64 	%rd78, %rd44, %rd280;
	ld.local.u32 	%r1691, [%rd78];
	ld.local.u32 	%r1692, [%rd78+-4];
	and.b32  	%r413, %r404, 31;
	setp.eq.s32	%p239, %r413, 0;
	@%p239 bra 	BB1_355;

	mov.u32 	%r1135, 32;
	sub.s32 	%r1136, %r1135, %r413;
	shr.u32 	%r1137, %r1692, %r1136;
	shl.b32 	%r1138, %r1691, %r413;
	add.s32 	%r1691, %r1137, %r1138;
	ld.local.u32 	%r1139, [%rd78+-8];
	shr.u32 	%r1140, %r1139, %r1136;
	shl.b32 	%r1141, %r1692, %r413;
	add.s32 	%r1692, %r1140, %r1141;

BB1_355:
	shr.u32 	%r1142, %r1692, 30;
	shl.b32 	%r1143, %r1691, 2;
	add.s32 	%r1693, %r1142, %r1143;
	shl.b32 	%r419, %r1692, 2;
	shr.u32 	%r1144, %r1693, 31;
	shr.u32 	%r1145, %r1691, 30;
	add.s32 	%r420, %r1144, %r1145;
	setp.eq.s32	%p240, %r1144, 0;
	@%p240 bra 	BB1_356;

	not.b32 	%r1146, %r1693;
	neg.s32 	%r1695, %r419;
	setp.eq.s32	%p241, %r419, 0;
	selp.u32	%r1147, 1, 0, %p241;
	add.s32 	%r1693, %r1147, %r1146;
	xor.b32  	%r1694, %r410, -2147483648;
	bra.uni 	BB1_358;

BB1_356:
	mov.u32 	%r1694, %r410;
	mov.u32 	%r1695, %r419;

BB1_358:
	clz.b32 	%r1697, %r1693;
	setp.eq.s32	%p242, %r1697, 0;
	shl.b32 	%r1148, %r1693, %r1697;
	mov.u32 	%r1149, 32;
	sub.s32 	%r1150, %r1149, %r1697;
	shr.u32 	%r1151, %r1695, %r1150;
	add.s32 	%r1152, %r1151, %r1148;
	selp.b32	%r428, %r1693, %r1152, %p242;
	mov.u32 	%r1153, -921707870;
	mul.hi.u32 	%r1696, %r428, %r1153;
	setp.eq.s32	%p243, %r410, 0;
	neg.s32 	%r1154, %r420;
	selp.b32	%r1698, %r420, %r1154, %p243;
	setp.lt.s32	%p244, %r1696, 1;
	@%p244 bra 	BB1_360;

	mul.lo.s32 	%r1155, %r428, -921707870;
	shr.u32 	%r1156, %r1155, 31;
	shl.b32 	%r1157, %r1696, 1;
	add.s32 	%r1696, %r1156, %r1157;
	add.s32 	%r1697, %r1697, 1;

BB1_360:
	mov.u32 	%r1158, 126;
	sub.s32 	%r1159, %r1158, %r1697;
	shl.b32 	%r1160, %r1159, 23;
	add.s32 	%r1161, %r1696, 1;
	shr.u32 	%r1162, %r1161, 7;
	add.s32 	%r1163, %r1162, 1;
	shr.u32 	%r1164, %r1163, 1;
	add.s32 	%r1165, %r1164, %r1160;
	or.b32  	%r1166, %r1165, %r1694;
	mov.b32 	 %f3704, %r1166;

BB1_361:
	mul.rn.f32 	%f367, %f3704, %f3704;
	and.b32  	%r436, %r1698, 1;
	setp.eq.s32	%p245, %r436, 0;
	@%p245 bra 	BB1_363;

	mov.f32 	%f1738, 0fBAB6061A;
	mov.f32 	%f1739, 0f37CCF5CE;
	fma.rn.f32 	%f3705, %f1739, %f367, %f1738;
	bra.uni 	BB1_364;

BB1_363:
	mov.f32 	%f1740, 0f3C08839E;
	mov.f32 	%f1741, 0fB94CA1F9;
	fma.rn.f32 	%f3705, %f1741, %f367, %f1740;

BB1_364:
	@%p245 bra 	BB1_366;

	mov.f32 	%f1742, 0f3D2AAAA5;
	fma.rn.f32 	%f1743, %f3705, %f367, %f1742;
	fma.rn.f32 	%f3706, %f1743, %f367, %f1614;
	bra.uni 	BB1_367;

BB1_366:
	mov.f32 	%f1745, 0fBE2AAAA3;
	fma.rn.f32 	%f1746, %f3705, %f367, %f1745;
	mov.f32 	%f1747, 0f00000000;
	fma.rn.f32 	%f3706, %f1746, %f367, %f1747;

BB1_367:
	fma.rn.f32 	%f3707, %f3706, %f3704, %f3704;
	@%p245 bra 	BB1_369;

	fma.rn.f32 	%f3707, %f3706, %f367, %f1328;

BB1_369:
	and.b32  	%r1167, %r1698, 2;
	setp.eq.s32	%p248, %r1167, 0;
	@%p248 bra 	BB1_371;

	mov.f32 	%f1749, 0f00000000;
	mov.f32 	%f1750, 0fBF800000;
	fma.rn.f32 	%f3707, %f3707, %f1750, %f1749;

BB1_371:
	mul.f32 	%f1751, %f3689, %f3701;
	mul.f32 	%f1752, %f3689, %f3707;
	mul.f32 	%f1753, %f340, %f1752;
	mul.f32 	%f1754, %f341, %f1752;
	mul.f32 	%f1755, %f342, %f1752;
	mul.f32 	%f1756, %f1691, %f341;
	mul.f32 	%f1757, %f1690, %f342;
	sub.f32 	%f1758, %f1756, %f1757;
	fma.rn.f32 	%f1759, %f1758, %f1751, %f1753;
	mul.f32 	%f1760, %f1689, %f342;
	mul.f32 	%f1761, %f1691, %f340;
	sub.f32 	%f1762, %f1760, %f1761;
	fma.rn.f32 	%f1763, %f1762, %f1751, %f1754;
	mul.f32 	%f1764, %f1690, %f340;
	mul.f32 	%f1765, %f1689, %f341;
	sub.f32 	%f1766, %f1764, %f1765;
	fma.rn.f32 	%f1767, %f1766, %f1751, %f1755;
	fma.rn.f32 	%f1768, %f3695, %f1689, %f1759;
	fma.rn.f32 	%f1769, %f3695, %f1690, %f1763;
	fma.rn.f32 	%f1770, %f3695, %f1691, %f1767;
	mul.f32 	%f1771, %f1769, %f1769;
	fma.rn.f32 	%f1772, %f1768, %f1768, %f1771;
	fma.rn.f32 	%f1773, %f1770, %f1770, %f1772;
	sqrt.rn.f32 	%f1774, %f1773;
	rcp.rn.f32 	%f1775, %f1774;
	mul.f32 	%f1776, %f1775, %f1768;
	mul.f32 	%f1777, %f1775, %f1769;
	mul.f32 	%f1778, %f1775, %f1770;
	ld.local.v4.f32 	{%f1779, %f1780, %f1781, %f1782}, [%rd2+-12];
	neg.f32 	%f1784, %f1782;
	ld.local.v2.f32 	{%f1785, %f1786}, [%rd2+4];
	neg.f32 	%f1788, %f1785;
	neg.f32 	%f1790, %f1786;
	add.f32 	%f1791, %f1776, %f1776;
	add.f32 	%f1792, %f1777, %f1777;
	add.f32 	%f1793, %f1778, %f1778;
	mul.f32 	%f1794, %f1776, %f1784;
	mul.f32 	%f1795, %f1777, %f1785;
	sub.f32 	%f1796, %f1794, %f1795;
	mul.f32 	%f1797, %f1778, %f1786;
	sub.f32 	%f1798, %f1796, %f1797;
	mul.f32 	%f1799, %f1791, %f1798;
	mul.f32 	%f1800, %f1792, %f1798;
	mul.f32 	%f1801, %f1793, %f1798;
	sub.f32 	%f1802, %f1790, %f1801;
	sub.f32 	%f1803, %f1788, %f1800;
	sub.f32 	%f1804, %f1784, %f1799;
	st.local.v2.f32 	[%rd2+12], {%f1804, %f1803};
	st.local.f32 	[%rd2+20], %f1802;
	ld.local.f32 	%f3710, [%rd2+16];
	mul.f32 	%f1805, %f3710, %f1780;
	fma.rn.f32 	%f1806, %f1804, %f1779, %f1805;
	ld.local.f32 	%f3709, [%rd2+20];
	fma.rn.f32 	%f1807, %f3709, %f1781, %f1806;
	setp.lt.f32	%p249, %f1807, 0f00000000;
	@%p249 bra 	BB1_373;
	bra.uni 	BB1_372;

BB1_373:
	ld.local.f32 	%f1808, [%rd2+12];
	neg.f32 	%f3711, %f1808;
	neg.f32 	%f3710, %f3710;
	st.local.v2.f32 	[%rd2+12], {%f3711, %f3710};
	neg.f32 	%f3709, %f3709;
	st.local.f32 	[%rd2+20], %f3709;
	bra.uni 	BB1_374;

BB1_372:
	ld.local.f32 	%f3711, [%rd2+12];

BB1_374:
	mul.f32 	%f1809, %f3710, %f3710;
	fma.rn.f32 	%f1810, %f3711, %f3711, %f1809;
	fma.rn.f32 	%f1811, %f3709, %f3709, %f1810;
	sqrt.rn.f32 	%f1812, %f1811;
	rcp.rn.f32 	%f1813, %f1812;
	mul.f32 	%f1814, %f1813, %f3709;
	mul.f32 	%f1815, %f1813, %f3710;
	mul.f32 	%f1816, %f1813, %f3711;
	st.local.v2.f32 	[%rd2+12], {%f1816, %f1815};
	st.local.f32 	[%rd2+20], %f1814;
	mov.u32 	%r1168, 1065353216;
	st.local.u32 	[%rd2+36], %r1168;
	ld.local.f32 	%f1817, [%rd2+16];
	mul.f32 	%f1818, %f1817, %f1780;
	fma.rn.f32 	%f1819, %f1816, %f1779, %f1818;
	ld.local.f32 	%f1820, [%rd2+20];
	fma.rn.f32 	%f1821, %f1820, %f1781, %f1819;
	abs.f32 	%f1822, %f1821;
	rcp.rn.f32 	%f1823, %f1822;
	st.local.f32 	[%rd2+40], %f1823;
	ld.v4.f32 	{%f1824, %f1825, %f1826, %f1827}, [%rd221+224];
	st.global.v4.f32 	[prdR+48], {%f1824, %f1825, %f1826, %f1827};
	ld.global.f32 	%f1832, [prdR+80];
	setp.leu.f32	%p250, %f1832, 0f3F800000;
	@%p250 bra 	BB1_376;

	st.global.u32 	[prdR+80], %r1168;

BB1_376:
	mov.f32 	%f1833, 0f00000000;
	st.local.v4.f32 	[%rd2+52], {%f1833, %f1833, %f1833, %f1833};

BB1_558:
	cvta.to.local.u64 	%rd839, %rd112;
	ld.u32 	%r1556, [%rd105+316];
	st.global.u32 	[prdR+112], %r1556;
	ld.local.v4.f32 	{%f3539, %f3540, %f3541, %f3542}, [%rd2+52];
	ld.local.v2.f32 	{%f3547, %f3548}, [%rd2+36];
	ld.local.v2.f32 	{%f3549, %f3550}, [%rd2+28];
	ld.local.v2.f32 	{%f3551, %f3552}, [%rd2+20];
	ld.local.v4.f32 	{%f3553, %f3554, %f3555, %f3556}, [%rd2+-12];
	ld.local.v2.f32 	{%f3557, %f3558}, [%rd2+12];
	st.global.v4.f32 	[prdR+96], {%f3539, %f3540, %f3541, %f3542};
	st.global.f32 	[prdR+116], %f3548;
	st.global.f32 	[prdR+120], %f3547;
	st.global.v2.f32 	[prdR+8], {%f3552, %f3549};
	st.global.v2.f32 	[prdR+24], {%f3554, %f3555};
	st.global.v2.f32 	[prdR+16], {%f3550, %f3553};
	st.global.v2.f32 	[prdR+32], {%f3557, %f3558};
	st.global.f32 	[prdR+40], %f3551;
	ld.local.u32 	%r1557, [%rd839];
	st.global.u32 	[prdR], %r1557;
	ld.global.u8 	%rs42, [dataRenderer+178];
	setp.eq.s16	%p442, %rs42, 0;
	@%p442 bra 	BB1_560;

	ld.global.v4.f32 	{%f3570, %f3571, %f3572, %f3573}, [prdR+48];
	st.global.v4.f32 	[prdR+64], {%f3570, %f3571, %f3572, %f3573};

BB1_560:
	ret;
}

	// .globl	_Z16PgmMiss_radiancev
.visible .entry _Z16PgmMiss_radiancev(

)
{
	.local .align 16 .b8 	__local_depot2[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<12>;


	mov.u64 	%rd11, __local_depot2;
	cvta.local.u64 	%SP, %rd11;
	add.u64 	%rd2, %SP, 0;
	cvta.to.local.u64 	%rd3, %rd2;
	ld.global.f32 	%f1, [dRay+12];
	ld.global.f32 	%f2, [dRay+16];
	ld.global.f32 	%f3, [dRay+20];
	st.local.f32 	[%rd3+8], %f3;
	st.local.f32 	[%rd3+4], %f2;
	st.local.f32 	[%rd3], %f1;
	ld.global.u32 	%r1, [prdR+4];
	setp.eq.s32	%p1, %r1, 0;
	@%p1 bra 	BB2_2;

	add.u64 	%rd5, %SP, 16;
	cvta.to.local.u64 	%rd6, %rd5;
	ld.global.u32 	%r3, [dataRenderer+188];
	ld.global.u32 	%r4, [dataRenderer+160];
	ld.global.f32 	%f4, [prdR+80];
	ld.global.u32 	%r2, [GetEnvRadiance];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r3;
	.param .b32 param1;
	st.param.b32	[param1+0], %r4;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd2;
	.param .b32 param3;
	st.param.f32	[param3+0], %f4;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd5;
	.param .b32 retval0;
	prototype_67 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _, .param .b64 _, .param .b32 _, .param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	)
	, prototype_67;
	ld.param.f32	%f5, [retval0+0];
	
	//{
	}// Callseq End 67
	st.global.v4.f32 	[prdR+96], {%f5, %f5, %f5, %f5};
	ld.local.v4.f32 	{%f6, %f7, %f8, %f9}, [%rd6];
	st.global.v4.f32 	[prdR+48], {%f6, %f7, %f8, %f9};
	bra.uni 	BB2_7;

BB2_2:
	ld.global.u64 	%rd1, [dataRenderer+184];
	cvt.u16.u64	%rs1, %rd1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p2, %rs2, 0;
	@%p2 bra 	BB2_4;

	shr.u64 	%rd9, %rd1, 32;
	cvt.u32.u64	%r6, %rd9;
	ld.global.u32 	%r5, [GetTextur_Dir];
	// inline asm
	call (%rd8), _rt_callable_program_from_id_64, (%r5);
	// inline asm
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .align 16 .b8 retval0[16];
	prototype_68 : .callprototype (.param .align 16 .b8 _[16]) _ (.param .b32 _, .param .b64 _);
	call (retval0), 
	%rd8, 
	(
	param0, 
	param1
	)
	, prototype_68;
	ld.param.f32	%f14, [retval0+0];
	ld.param.f32	%f15, [retval0+4];
	ld.param.f32	%f16, [retval0+8];
	ld.param.f32	%f17, [retval0+12];
	
	//{
	}// Callseq End 68
	st.global.v4.f32 	[prdR+48], {%f14, %f15, %f16, %f17};
	mov.f32 	%f18, 0f3F800000;
	st.global.v4.f32 	[prdR+96], {%f18, %f18, %f18, %f18};
	bra.uni 	BB2_5;

BB2_4:
	mov.f32 	%f19, 0f00000000;
	st.global.v4.f32 	[prdR+96], {%f19, %f19, %f19, %f19};

BB2_5:
	ld.global.u8 	%rs3, [dataRenderer+178];
	setp.eq.s16	%p3, %rs3, 0;
	@%p3 bra 	BB2_7;

	mov.f32 	%f20, 0f3F800000;
	mov.f32 	%f21, 0f00000000;
	st.global.v4.f32 	[prdR+64], {%f21, %f21, %f21, %f20};
	mov.u32 	%r7, 0;
	st.global.u32 	[prdR+28], %r7;
	st.global.u32 	[prdR+24], %r7;
	st.global.u32 	[prdR+20], %r7;

BB2_7:
	mov.u16 	%rs4, 1;
	st.global.u8 	[prdR+124], %rs4;
	ret;
}


