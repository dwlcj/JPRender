//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z15PgmLaunch_depthv
.global .align 8 .b8 dLd[8];
.global .align 8 .b8 dLi[8];
.global .align 4 .f32 dT;
.global .align 4 .b8 topObject[4];
.global .align 16 .b8 dataRenderer[224];
.global .align 4 .b8 prd_depthRendering[4];
.global .align 4 .b8 GetRandomSeed[4];
.global .align 4 .b8 GetSample2[4];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLdE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLiE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2dTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataRendererE[8] = {82, 97, 121, 0, 224, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18prd_depthRenderingE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetRandomSeedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename3dLdE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLiE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename2dTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataRendererE[15] = {83, 68, 97, 116, 97, 95, 82, 101, 110, 100, 101, 114, 101, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_typename18prd_depthRenderingE[25] = {83, 68, 97, 116, 97, 95, 112, 114, 100, 95, 100, 101, 112, 116, 104, 82, 101, 110, 100, 101, 114, 105, 110, 103, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetRandomSeedE[37] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 117, 105, 110, 116, 40, 117, 105, 110, 116, 44, 117, 105, 110, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample2E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLiE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2dTE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataRendererE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum18prd_depthRenderingE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetRandomSeedE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample2E = 4920;
.global .align 16 .b8 _ZN21rti_internal_semantic3dLdE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLiE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic2dTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataRendererE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic18prd_depthRenderingE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13GetRandomSeedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLiE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2dTE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataRendererE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18prd_depthRenderingE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetRandomSeedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample2E[1];

.visible .entry _Z15PgmLaunch_depthv(

)
{
	.local .align 4 .b8 	__local_depot0[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<81>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<18>;


	mov.u64 	%rd17, __local_depot0;
	cvta.local.u64 	%SP, %rd17;
	add.u64 	%rd4, %SP, 4;
	cvta.to.local.u64 	%rd5, %rd4;
	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd6, %rd3;
	ld.global.u32 	%r7, [dLd];
	ld.global.v2.u32 	{%r8, %r9}, [dLi];
	mad.lo.s32 	%r12, %r7, %r9, %r8;
	ld.global.u32 	%r13, [dataRenderer+28];
	ld.global.u32 	%r2, [GetRandomSeed];
	// inline asm
	call (%rd1), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r13;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _);
	call (retval0), 
	%rd1, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 0
	st.local.u32 	[%rd5], %r14;
	ld.global.u32 	%r3, [GetSample2];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd2, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f21, [retval0+0];
	ld.param.f32	%f22, [retval0+4];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r15, %r16}, [dLi];
	cvt.rn.f32.u32	%f23, %r15;
	cvt.rn.f32.u32	%f24, %r16;
	add.f32 	%f25, %f21, %f23;
	add.f32 	%f26, %f22, %f24;
	ld.global.v2.u32 	{%r19, %r20}, [dLd];
	cvt.rn.f32.u32	%f27, %r19;
	cvt.rn.f32.u32	%f28, %r20;
	div.rn.f32 	%f29, %f25, %f27;
	div.rn.f32 	%f30, %f26, %f28;
	fma.rn.f32 	%f31, %f29, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f32, %f30, 0f40000000, 0fBF800000;
	ld.global.v4.f32 	{%f33, %f34, %f35, %f36}, [dataRenderer+48];
	ld.global.v4.f32 	{%f38, %f39, %f40, %f41}, [dataRenderer+64];
	mul.f32 	%f43, %f32, %f40;
	mul.f32 	%f47, %f32, %f41;
	ld.global.v4.f32 	{%f48, %f49, %f50, %f51}, [dataRenderer+80];
	mul.f32 	%f53, %f32, %f48;
	fma.rn.f32 	%f54, %f36, %f31, %f43;
	fma.rn.f32 	%f55, %f31, %f38, %f47;
	fma.rn.f32 	%f56, %f31, %f39, %f53;
	add.f32 	%f13, %f54, %f49;
	add.f32 	%f14, %f55, %f50;
	add.f32 	%f15, %f56, %f51;
	ld.global.v2.f32 	{%f60, %f61}, [dataRenderer+8];
	mov.u32 	%r23, 1232348160;
	st.local.u32 	[%rd6], %r23;
	ld.global.u32 	%r4, [topObject];
	mov.u32 	%r5, 3;
	mov.u32 	%r6, 4;
	// inline asm
	call _rt_trace_64, (%r4, %f33, %f34, %f35, %f13, %f14, %f15, %r5, %f60, %f61, %rd3, %r6);
	// inline asm
	ld.local.f32 	%f62, [%rd6];
	ld.global.f32 	%f1, [dataRenderer+204];
	sub.f32 	%f2, %f1, %f62;
	mov.f32 	%f78, 0f00000000;
	setp.leu.f32	%p1, %f2, 0f00000000;
	mov.f32 	%f79, %f78;
	mov.f32 	%f80, %f78;
	@%p1 bra 	BB0_4;

	ld.global.f32 	%f63, [dataRenderer+200];
	sub.f32 	%f64, %f1, %f63;
	div.rn.f32 	%f78, %f2, %f64;
	ld.global.u32 	%r1, [dataRenderer+28];
	setp.lt.u32	%p2, %r1, 2;
	@%p2 bra 	BB0_2;

	cvt.rn.f32.u32	%f65, %r1;
	rcp.rn.f32 	%f66, %f65;
	ld.global.u32 	%r24, [dataRenderer+40];
	ld.global.v2.u32 	{%r27, %r28}, [dLi];
	cvt.u64.u32	%rd8, %r27;
	cvt.u64.u32	%rd9, %r28;
	mov.u32 	%r25, 2;
	mov.u32 	%r26, 16;
	mov.u64 	%rd11, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_id_64, (%r24, %r25, %r26, %rd8, %rd9, %rd11, %rd11);
	// inline asm
	ld.v4.f32 	{%f67, %f68, %f69, %f70}, [%rd7];
	sub.f32 	%f74, %f78, %f67;
	sub.f32 	%f75, %f78, %f68;
	sub.f32 	%f76, %f78, %f69;
	fma.rn.f32 	%f78, %f66, %f74, %f67;
	fma.rn.f32 	%f79, %f66, %f75, %f68;
	fma.rn.f32 	%f80, %f66, %f76, %f69;
	bra.uni 	BB0_4;

BB0_2:
	mov.f32 	%f79, %f78;
	mov.f32 	%f80, %f78;

BB0_4:
	ld.global.u32 	%r31, [dataRenderer+40];
	ld.global.v2.u32 	{%r34, %r35}, [dLi];
	cvt.u64.u32	%rd13, %r34;
	cvt.u64.u32	%rd14, %r35;
	mov.u32 	%r32, 2;
	mov.u32 	%r33, 16;
	mov.u64 	%rd16, 0;
	// inline asm
	call (%rd12), _rt_buffer_get_id_64, (%r31, %r32, %r33, %rd13, %rd14, %rd16, %rd16);
	// inline asm
	mov.f32 	%f77, 0f3F800000;
	st.v4.f32 	[%rd12], {%f78, %f79, %f80, %f77};
	ret;
}

	// .globl	_Z11PgmCH_depthv
.visible .entry _Z11PgmCH_depthv(

)
{
	.reg .f32 	%f<2>;


	ld.global.f32 	%f1, [dT];
	st.global.f32 	[prd_depthRendering], %f1;
	ret;
}


