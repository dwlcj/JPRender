//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z26PgmIntersect_mesh_trianglei
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 8 .b8 dLd[8];
.global .align 8 .b8 dLi[8];
.global .align 4 .b8 dRay[36];
.global .align 8 .b8 aInset[72];
.global .align 4 .b8 dataInstance[48];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLdE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLiE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4dRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6aInsetE[8] = {82, 97, 121, 0, 72, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataInstanceE[8] = {82, 97, 121, 0, 48, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename3dLdE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLiE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename4dRayE[4] = {82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6aInsetE[13] = {73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataInstanceE[15] = {83, 68, 97, 116, 97, 95, 73, 110, 115, 116, 97, 110, 99, 101, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLiE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4dRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6aInsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataInstanceE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic3dLdE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLiE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic4dRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6aInsetE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 73, 110, 115, 101, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic12dataInstanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLiE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4dRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6aInsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataInstanceE[1];
.global .align 16 .b8 $str[31] = {77, 101, 115, 104, 68, 97, 116, 97, 46, 105, 110, 100, 101, 120, 66, 117, 102, 102, 101, 114, 73, 68, 32, 105, 115, 32, 58, 37, 100, 10, 0};
.global .align 16 .b8 $str1[27] = {118, 101, 114, 116, 101, 120, 32, 105, 110, 100, 101, 120, 32, 105, 115, 32, 58, 37, 100, 44, 37, 100, 44, 37, 100, 10, 0};
.global .align 16 .b8 $str2[40] = {116, 114, 105, 97, 110, 103, 108, 101, 32, 102, 105, 114, 115, 116, 32, 118, 101, 114, 116, 101, 120, 32, 112, 111, 115, 32, 105, 115, 32, 58, 37, 102, 44, 37, 102, 44, 37, 102, 10, 0};

.visible .entry _Z26PgmIntersect_mesh_trianglei(
	.param .u32 _Z26PgmIntersect_mesh_trianglei_param_0
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<205>;
	.reg .b32 	%r<45>;
	.reg .b64 	%rd<69>;


	ld.global.u32 	%r1, [dataInstance+20];
	ld.param.s32 	%rd5, [_Z26PgmIntersect_mesh_trianglei_param_0];
	mov.u32 	%r11, 1;
	mov.u32 	%r12, 12;
	mov.u64 	%rd23, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_id_64, (%r1, %r11, %r12, %rd5, %rd23, %rd23, %rd23);
	// inline asm
	ld.global.u32 	%r4, [dataInstance];
	ld.s32 	%rd10, [%rd4];
	ld.s32 	%rd15, [%rd4+4];
	ld.s32 	%rd20, [%rd4+8];
	// inline asm
	call (%rd9), _rt_buffer_get_id_64, (%r4, %r11, %r12, %rd10, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f17, [%rd9+8];
	ld.f32 	%f18, [%rd9+4];
	ld.f32 	%f19, [%rd9];
	// inline asm
	call (%rd14), _rt_buffer_get_id_64, (%r4, %r11, %r12, %rd15, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f20, [%rd14+8];
	ld.f32 	%f21, [%rd14+4];
	ld.f32 	%f22, [%rd14];
	// inline asm
	call (%rd19), _rt_buffer_get_id_64, (%r4, %r11, %r12, %rd20, %rd23, %rd23, %rd23);
	// inline asm
	sub.f32 	%f23, %f22, %f19;
	sub.f32 	%f24, %f21, %f18;
	sub.f32 	%f25, %f20, %f17;
	ld.f32 	%f26, [%rd19+8];
	ld.f32 	%f27, [%rd19+4];
	ld.f32 	%f28, [%rd19];
	sub.f32 	%f29, %f19, %f28;
	sub.f32 	%f30, %f18, %f27;
	sub.f32 	%f31, %f17, %f26;
	mul.f32 	%f32, %f25, %f30;
	mul.f32 	%f33, %f24, %f31;
	sub.f32 	%f1, %f32, %f33;
	mul.f32 	%f34, %f23, %f31;
	mul.f32 	%f35, %f25, %f29;
	sub.f32 	%f2, %f34, %f35;
	mul.f32 	%f36, %f24, %f29;
	mul.f32 	%f37, %f23, %f30;
	sub.f32 	%f3, %f36, %f37;
	ld.global.f32 	%f38, [dRay+12];
	ld.global.f32 	%f39, [dRay+16];
	mul.f32 	%f40, %f39, %f2;
	fma.rn.f32 	%f41, %f38, %f1, %f40;
	ld.global.f32 	%f42, [dRay+20];
	fma.rn.f32 	%f43, %f42, %f3, %f41;
	rcp.rn.f32 	%f44, %f43;
	ld.global.f32 	%f45, [dRay];
	sub.f32 	%f46, %f19, %f45;
	ld.global.f32 	%f47, [dRay+4];
	sub.f32 	%f48, %f18, %f47;
	ld.global.f32 	%f49, [dRay+8];
	sub.f32 	%f50, %f17, %f49;
	mul.f32 	%f51, %f44, %f46;
	mul.f32 	%f52, %f44, %f48;
	mul.f32 	%f53, %f44, %f50;
	mul.f32 	%f54, %f39, %f53;
	mul.f32 	%f55, %f52, %f42;
	sub.f32 	%f56, %f54, %f55;
	mul.f32 	%f57, %f51, %f42;
	mul.f32 	%f58, %f53, %f38;
	sub.f32 	%f59, %f57, %f58;
	mul.f32 	%f60, %f52, %f38;
	mul.f32 	%f61, %f51, %f39;
	sub.f32 	%f62, %f60, %f61;
	mul.f32 	%f63, %f30, %f59;
	fma.rn.f32 	%f64, %f29, %f56, %f63;
	fma.rn.f32 	%f4, %f31, %f62, %f64;
	mul.f32 	%f65, %f24, %f59;
	fma.rn.f32 	%f66, %f23, %f56, %f65;
	fma.rn.f32 	%f5, %f25, %f62, %f66;
	mul.f32 	%f67, %f2, %f52;
	fma.rn.f32 	%f68, %f1, %f51, %f67;
	fma.rn.f32 	%f6, %f3, %f53, %f68;
	ld.global.f32 	%f69, [dRay+32];
	setp.lt.f32	%p1, %f6, %f69;
	ld.global.f32 	%f70, [dRay+28];
	setp.gt.f32	%p2, %f6, %f70;
	and.pred  	%p3, %p1, %p2;
	setp.ge.f32	%p4, %f4, 0f00000000;
	and.pred  	%p5, %p3, %p4;
	setp.ge.f32	%p6, %f5, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	add.f32 	%f71, %f4, %f5;
	setp.le.f32	%p8, %f71, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB0_6;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	call (%r13), _rt_potential_intersection, (%f6);
	// inline asm
	setp.eq.s32	%p10, %r13, 0;
	@%p10 bra 	BB0_6;

	mul.f32 	%f73, %f2, %f2;
	fma.rn.f32 	%f74, %f1, %f1, %f73;
	fma.rn.f32 	%f75, %f3, %f3, %f74;
	sqrt.rn.f32 	%f76, %f75;
	rcp.rn.f32 	%f77, %f76;
	mul.f32 	%f78, %f3, %f77;
	mul.f32 	%f79, %f2, %f77;
	mul.f32 	%f80, %f1, %f77;
	st.global.v2.f32 	[aInset], {%f80, %f79};
	st.global.f32 	[aInset+8], %f78;
	ld.global.u32 	%r14, [dataInstance+4];
	// inline asm
	call (%rd24), _rt_buffer_get_id_64, (%r14, %r11, %r12, %rd10, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f81, [%rd24+8];
	ld.f32 	%f82, [%rd24+4];
	ld.f32 	%f83, [%rd24];
	// inline asm
	call (%rd29), _rt_buffer_get_id_64, (%r14, %r11, %r12, %rd15, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f84, [%rd29+8];
	ld.f32 	%f85, [%rd29+4];
	ld.f32 	%f86, [%rd29];
	// inline asm
	call (%rd34), _rt_buffer_get_id_64, (%r14, %r11, %r12, %rd20, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f87, [%rd34+8];
	ld.f32 	%f88, [%rd34+4];
	ld.f32 	%f89, [%rd34];
	mul.f32 	%f90, %f5, %f89;
	mul.f32 	%f91, %f5, %f88;
	mul.f32 	%f92, %f5, %f87;
	fma.rn.f32 	%f93, %f4, %f86, %f90;
	fma.rn.f32 	%f94, %f4, %f85, %f91;
	fma.rn.f32 	%f95, %f4, %f84, %f92;
	mov.f32 	%f96, 0f3F800000;
	sub.f32 	%f97, %f96, %f4;
	sub.f32 	%f7, %f97, %f5;
	fma.rn.f32 	%f98, %f7, %f83, %f93;
	fma.rn.f32 	%f99, %f7, %f82, %f94;
	fma.rn.f32 	%f100, %f7, %f81, %f95;
	mul.f32 	%f101, %f99, %f99;
	fma.rn.f32 	%f102, %f98, %f98, %f101;
	fma.rn.f32 	%f103, %f100, %f100, %f102;
	sqrt.rn.f32 	%f104, %f103;
	rcp.rn.f32 	%f105, %f104;
	mul.f32 	%f106, %f105, %f98;
	mul.f32 	%f107, %f105, %f99;
	mul.f32 	%f108, %f105, %f100;
	st.global.f32 	[aInset+20], %f108;
	st.global.f32 	[aInset+16], %f107;
	st.global.f32 	[aInset+12], %f106;
	ld.global.u32 	%r23, [dataInstance+24];
	setp.lt.s32	%p11, %r23, 1;
	@%p11 bra 	BB0_4;

	ld.global.u32 	%r24, [dataInstance+8];
	// inline asm
	call (%rd39), _rt_buffer_get_id_64, (%r24, %r11, %r12, %rd10, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f109, [%rd39+8];
	ld.f32 	%f110, [%rd39+4];
	ld.f32 	%f111, [%rd39];
	// inline asm
	call (%rd44), _rt_buffer_get_id_64, (%r24, %r11, %r12, %rd15, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f112, [%rd44+8];
	ld.f32 	%f113, [%rd44+4];
	ld.f32 	%f114, [%rd44];
	// inline asm
	call (%rd49), _rt_buffer_get_id_64, (%r24, %r11, %r12, %rd20, %rd23, %rd23, %rd23);
	// inline asm
	ld.f32 	%f115, [%rd49+8];
	ld.f32 	%f116, [%rd49+4];
	ld.f32 	%f117, [%rd49];
	mul.f32 	%f118, %f5, %f117;
	mul.f32 	%f119, %f5, %f116;
	mul.f32 	%f120, %f5, %f115;
	fma.rn.f32 	%f121, %f4, %f114, %f118;
	fma.rn.f32 	%f122, %f4, %f113, %f119;
	fma.rn.f32 	%f123, %f4, %f112, %f120;
	fma.rn.f32 	%f124, %f7, %f111, %f121;
	fma.rn.f32 	%f125, %f7, %f110, %f122;
	fma.rn.f32 	%f126, %f7, %f109, %f123;
	mul.f32 	%f127, %f125, %f125;
	fma.rn.f32 	%f128, %f124, %f124, %f127;
	fma.rn.f32 	%f129, %f126, %f126, %f128;
	sqrt.rn.f32 	%f130, %f129;
	rcp.rn.f32 	%f131, %f130;
	mul.f32 	%f132, %f131, %f124;
	mul.f32 	%f133, %f131, %f125;
	mul.f32 	%f134, %f131, %f126;
	mul.f32 	%f135, %f133, %f133;
	fma.rn.f32 	%f136, %f132, %f132, %f135;
	fma.rn.f32 	%f137, %f134, %f134, %f136;
	sqrt.rn.f32 	%f138, %f137;
	rcp.rn.f32 	%f139, %f138;
	mul.f32 	%f202, %f139, %f132;
	mul.f32 	%f203, %f139, %f133;
	mul.f32 	%f204, %f139, %f134;
	bra.uni 	BB0_5;

BB0_4:
	ld.global.f32 	%f140, [dRay+12];
	ld.global.f32 	%f141, [dRay+16];
	ld.global.f32 	%f142, [dRay+20];
	ld.global.v2.f32 	{%f143, %f144}, [aInset+16];
	mul.f32 	%f146, %f143, %f142;
	mul.f32 	%f148, %f144, %f141;
	sub.f32 	%f149, %f148, %f146;
	mul.f32 	%f150, %f144, %f140;
	ld.global.f32 	%f151, [aInset+12];
	mul.f32 	%f152, %f151, %f142;
	sub.f32 	%f153, %f152, %f150;
	mul.f32 	%f154, %f151, %f141;
	mul.f32 	%f155, %f143, %f140;
	sub.f32 	%f156, %f155, %f154;
	mul.f32 	%f157, %f153, %f153;
	fma.rn.f32 	%f158, %f149, %f149, %f157;
	fma.rn.f32 	%f159, %f156, %f156, %f158;
	sqrt.rn.f32 	%f160, %f159;
	rcp.rn.f32 	%f161, %f160;
	mul.f32 	%f202, %f149, %f161;
	mul.f32 	%f203, %f153, %f161;
	mul.f32 	%f204, %f156, %f161;

BB0_5:
	st.global.v2.f32 	[aInset+32], {%f202, %f203};
	st.global.f32 	[aInset+40], %f204;
	ld.global.f32 	%f162, [aInset+20];
	ld.global.f32 	%f163, [aInset+16];
	ld.global.f32 	%f164, [aInset+12];
	st.global.v2.f32 	[aInset+56], {%f164, %f163};
	st.global.f32 	[aInset+64], %f162;
	ld.global.f32 	%f165, [aInset+64];
	mul.f32 	%f166, %f203, %f165;
	ld.global.f32 	%f167, [aInset+60];
	mul.f32 	%f168, %f204, %f167;
	sub.f32 	%f169, %f166, %f168;
	mul.f32 	%f170, %f204, %f164;
	mul.f32 	%f171, %f202, %f165;
	sub.f32 	%f172, %f170, %f171;
	mul.f32 	%f173, %f202, %f167;
	mul.f32 	%f174, %f203, %f164;
	sub.f32 	%f175, %f173, %f174;
	mul.f32 	%f176, %f172, %f172;
	fma.rn.f32 	%f177, %f169, %f169, %f176;
	fma.rn.f32 	%f178, %f175, %f175, %f177;
	sqrt.rn.f32 	%f179, %f178;
	rcp.rn.f32 	%f180, %f179;
	mul.f32 	%f181, %f169, %f180;
	st.global.f32 	[aInset+44], %f181;
	mul.f32 	%f182, %f175, %f180;
	mul.f32 	%f183, %f172, %f180;
	st.global.v2.f32 	[aInset+48], {%f183, %f182};
	ld.global.u32 	%r33, [dataInstance+16];
	mov.u32 	%r41, 8;
	// inline asm
	call (%rd54), _rt_buffer_get_id_64, (%r33, %r11, %r41, %rd10, %rd23, %rd23, %rd23);
	// inline asm
	ld.v2.f32 	{%f184, %f185}, [%rd54];
	// inline asm
	call (%rd59), _rt_buffer_get_id_64, (%r33, %r11, %r41, %rd15, %rd23, %rd23, %rd23);
	// inline asm
	ld.v2.f32 	{%f188, %f189}, [%rd59];
	// inline asm
	call (%rd64), _rt_buffer_get_id_64, (%r33, %r11, %r41, %rd20, %rd23, %rd23, %rd23);
	// inline asm
	ld.v2.f32 	{%f192, %f193}, [%rd64];
	mul.f32 	%f196, %f5, %f192;
	mul.f32 	%f197, %f5, %f193;
	fma.rn.f32 	%f198, %f4, %f188, %f196;
	fma.rn.f32 	%f199, %f4, %f189, %f197;
	fma.rn.f32 	%f200, %f7, %f185, %f199;
	fma.rn.f32 	%f201, %f7, %f184, %f198;
	st.global.v2.f32 	[aInset+24], {%f201, %f200};
	ld.global.u32 	%r44, [dataInstance+40];
	st.global.u32 	[aInset+68], %r44;
	mov.u32 	%r43, 0;
	// inline asm
	call (%r42), _rt_report_intersection, (%r43);
	// inline asm

BB0_6:
	ret;
}

	// .globl	_Z23PgmBounds_mesh_triangleiPf
.visible .entry _Z23PgmBounds_mesh_triangleiPf(
	.param .u32 _Z23PgmBounds_mesh_triangleiPf_param_0,
	.param .u64 _Z23PgmBounds_mesh_triangleiPf_param_1
)
{
	.local .align 8 .b8 	__local_depot1[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .f32 	%f<48>;
	.reg .b32 	%r<26>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<38>;


	mov.u64 	%rd37, __local_depot1;
	cvta.local.u64 	%SP, %rd37;
	ld.param.u32 	%r5, [_Z23PgmBounds_mesh_triangleiPf_param_0];
	ld.param.u64 	%rd2, [_Z23PgmBounds_mesh_triangleiPf_param_1];
	ld.global.u32 	%r1, [dataInstance];
	// inline asm
	call (%r6), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p3, %r6, 0;
	@%p3 bra 	BB1_2;

	add.u64 	%rd3, %SP, 0;
	cvta.to.local.u64 	%rd4, %rd3;
	st.local.u32 	[%rd4], %r1;
	mov.u64 	%rd5, $str;
	cvta.global.u64 	%rd6, %rd5;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 0

BB1_2:
	ld.global.u32 	%r8, [dataInstance+20];
	cvt.s64.s32	%rd8, %r5;
	mov.u32 	%r9, 1;
	mov.u32 	%r10, 12;
	mov.u64 	%rd11, 0;
	// inline asm
	call (%rd7), _rt_buffer_get_id_64, (%r8, %r9, %r10, %rd8, %rd11, %rd11, %rd11);
	// inline asm
	ld.u32 	%r2, [%rd7];
	ld.u32 	%r3, [%rd7+4];
	ld.u32 	%r4, [%rd7+8];
	// inline asm
	call (%r11), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p4, %r11, 0;
	@%p4 bra 	BB1_4;

	add.u64 	%rd12, %SP, 0;
	cvta.to.local.u64 	%rd13, %rd12;
	st.local.v2.u32 	[%rd13], {%r2, %r3};
	st.local.u32 	[%rd13+8], %r4;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 1

BB1_4:
	ld.global.u32 	%r13, [dataInstance];
	cvt.s64.s32	%rd17, %r2;
	// inline asm
	call (%rd16), _rt_buffer_get_id_64, (%r13, %r9, %r10, %rd17, %rd11, %rd11, %rd11);
	// inline asm
	ld.f32 	%f1, [%rd16];
	ld.f32 	%f2, [%rd16+4];
	ld.f32 	%f3, [%rd16+8];
	cvt.s64.s32	%rd22, %r3;
	// inline asm
	call (%rd21), _rt_buffer_get_id_64, (%r13, %r9, %r10, %rd22, %rd11, %rd11, %rd11);
	// inline asm
	ld.f32 	%f6, [%rd21+8];
	ld.f32 	%f5, [%rd21+4];
	ld.f32 	%f4, [%rd21];
	cvt.s64.s32	%rd27, %r4;
	// inline asm
	call (%rd26), _rt_buffer_get_id_64, (%r13, %r9, %r10, %rd27, %rd11, %rd11, %rd11);
	// inline asm
	ld.f32 	%f9, [%rd26+8];
	ld.f32 	%f8, [%rd26+4];
	ld.f32 	%f7, [%rd26];
	// inline asm
	call (%r22), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p5, %r22, 0;
	@%p5 bra 	BB1_6;

	cvt.f64.f32	%fd1, %f1;
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	st.local.f64 	[%rd32], %fd1;
	cvt.f64.f32	%fd2, %f2;
	st.local.f64 	[%rd32+8], %fd2;
	cvt.f64.f32	%fd3, %f3;
	st.local.f64 	[%rd32+16], %fd3;
	mov.u64 	%rd33, $str2;
	cvta.global.u64 	%rd34, %rd33;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 2

BB1_6:
	sub.f32 	%f17, %f9, %f3;
	sub.f32 	%f18, %f5, %f2;
	mul.f32 	%f19, %f18, %f17;
	sub.f32 	%f20, %f8, %f2;
	sub.f32 	%f21, %f6, %f3;
	mul.f32 	%f22, %f21, %f20;
	sub.f32 	%f23, %f19, %f22;
	sub.f32 	%f24, %f7, %f1;
	mul.f32 	%f25, %f21, %f24;
	sub.f32 	%f26, %f4, %f1;
	mul.f32 	%f27, %f26, %f17;
	sub.f32 	%f28, %f25, %f27;
	mul.f32 	%f29, %f26, %f20;
	mul.f32 	%f30, %f18, %f24;
	sub.f32 	%f31, %f29, %f30;
	mul.f32 	%f32, %f28, %f28;
	fma.rn.f32 	%f33, %f23, %f23, %f32;
	fma.rn.f32 	%f34, %f31, %f31, %f33;
	sqrt.rn.f32 	%f16, %f34;
	mov.pred 	%p8, 0;
	setp.leu.f32	%p7, %f16, 0f00000000;
	@%p7 bra 	BB1_8;

	abs.f32 	%f35, %f16;
	setp.neu.f32	%p8, %f35, 0f7F800000;

BB1_8:
	cvta.to.global.u64 	%rd1, %rd2;
	@%p8 bra 	BB1_10;
	bra.uni 	BB1_9;

BB1_10:
	min.f32 	%f36, %f1, %f4;
	min.f32 	%f37, %f36, %f7;
	min.f32 	%f38, %f2, %f5;
	min.f32 	%f39, %f38, %f8;
	min.f32 	%f40, %f3, %f6;
	min.f32 	%f41, %f40, %f9;
	st.global.f32 	[%rd1], %f37;
	st.global.f32 	[%rd1+4], %f39;
	st.global.f32 	[%rd1+8], %f41;
	max.f32 	%f42, %f1, %f4;
	max.f32 	%f43, %f42, %f7;
	max.f32 	%f44, %f2, %f5;
	max.f32 	%f45, %f44, %f8;
	max.f32 	%f46, %f3, %f6;
	max.f32 	%f47, %f46, %f9;
	st.global.f32 	[%rd1+12], %f43;
	st.global.f32 	[%rd1+16], %f45;
	st.global.f32 	[%rd1+20], %f47;
	bra.uni 	BB1_11;

BB1_9:
	mov.u32 	%r24, 2096152002;
	st.global.u32 	[%rd1+8], %r24;
	st.global.u32 	[%rd1+4], %r24;
	st.global.u32 	[%rd1], %r24;
	mov.u32 	%r25, -51331646;
	st.global.u32 	[%rd1+20], %r25;
	st.global.u32 	[%rd1+16], %r25;
	st.global.u32 	[%rd1+12], %r25;

BB1_11:
	ret;
}


