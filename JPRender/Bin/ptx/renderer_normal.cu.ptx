//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z16PgmLaunch_normalv
.global .align 4 .b8 dRay[36];
.global .align 4 .f32 dT;
.global .align 8 .b8 dLd[8];
.global .align 8 .b8 dLi[8];
.global .align 4 .b8 dataContext[8];
.global .align 16 .b8 dataRenderer[224];
.global .align 4 .b8 dataInstance[48];
.global .align 4 .b8 topObject[4];
.global .align 4 .b8 prd_normalRendering[16];
.global .align 8 .b8 aInset[72];
.global .align 4 .b8 GetRandomSeed[4];
.global .align 4 .b8 GetSample1[4];
.global .align 4 .b8 GetSample2[4];
.global .align 4 .b8 GetTriplanNormal[4];
.global .align 4 .b8 GetTexture_diffuse[4];
.global .align 4 .b8 GetTexture_normal[4];
.global .align 4 .b8 _ZN21rti_internal_typeinfo4dRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2dTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLdE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLiE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11dataContextE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataRendererE[8] = {82, 97, 121, 0, 224, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataInstanceE[8] = {82, 97, 121, 0, 48, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo19prd_normalRenderingE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6aInsetE[8] = {82, 97, 121, 0, 72, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetRandomSeedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo16GetTriplanNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo18GetTexture_diffuseE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17GetTexture_normalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typename4dRayE[4] = {82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename2dTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLdE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLiE[6] = {117, 105, 110, 116, 50, 0};
.global .align 16 .b8 _ZN21rti_internal_typename11dataContextE[14] = {83, 68, 97, 116, 97, 95, 67, 111, 110, 116, 101, 120, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataRendererE[15] = {83, 68, 97, 116, 97, 95, 82, 101, 110, 100, 101, 114, 101, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataInstanceE[15] = {83, 68, 97, 116, 97, 95, 73, 110, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename19prd_normalRenderingE[26] = {83, 68, 97, 116, 97, 95, 112, 114, 100, 95, 110, 111, 114, 109, 97, 108, 82, 101, 110, 100, 101, 114, 105, 110, 103, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6aInsetE[13] = {73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetRandomSeedE[37] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 117, 105, 110, 116, 40, 117, 105, 110, 116, 44, 117, 105, 110, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample1E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 49, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample2E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename16GetTriplanNormalE[52] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 78, 111, 114, 40, 105, 110, 116, 44, 99, 111, 110, 115, 116, 32, 80, 111, 115, 38, 44, 99, 111, 110, 115, 116, 32, 78, 111, 114, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename18GetTexture_diffuseE[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 67, 111, 108, 111, 114, 52, 40, 105, 110, 116, 44, 105, 110, 116, 44, 85, 86, 50, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17GetTexture_normalE[60] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 78, 111, 114, 40, 99, 111, 110, 115, 116, 32, 83, 68, 97, 116, 97, 95, 84, 101, 120, 116, 117, 114, 101, 38, 44, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum4dRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2dTE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLiE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11dataContextE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataRendererE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataInstanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum19prd_normalRenderingE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6aInsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetRandomSeedE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample1E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample2E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum16GetTriplanNormalE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum18GetTexture_diffuseE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum17GetTexture_normalE = 4920;
.global .align 16 .b8 _ZN21rti_internal_semantic4dRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic2dTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLdE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLiE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic11dataContextE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataRendererE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataInstanceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic19prd_normalRenderingE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6aInsetE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 73, 110, 115, 101, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13GetRandomSeedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic16GetTriplanNormalE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic18GetTexture_diffuseE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17GetTexture_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4dRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2dTE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLiE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11dataContextE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataRendererE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataInstanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation19prd_normalRenderingE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6aInsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetRandomSeedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation16GetTriplanNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation18GetTexture_diffuseE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17GetTexture_normalE[1];

.visible .entry _Z16PgmLaunch_normalv(

)
{
	.local .align 4 .b8 	__local_depot0[20];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<142>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<19>;


	mov.u64 	%rd18, __local_depot0;
	cvta.local.u64 	%SP, %rd18;
	add.u64 	%rd5, %SP, 16;
	cvta.to.local.u64 	%rd6, %rd5;
	ld.global.u32 	%r7, [dLd];
	ld.global.v2.u32 	{%r8, %r9}, [dLi];
	mad.lo.s32 	%r12, %r7, %r9, %r8;
	ld.global.u32 	%r13, [dataRenderer+28];
	ld.global.u32 	%r2, [GetRandomSeed];
	// inline asm
	call (%rd2), _rt_callable_program_from_id_64, (%r2);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r13;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _);
	call (retval0), 
	%rd2, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 0
	st.local.u32 	[%rd6], %r14;
	ld.global.u32 	%r3, [GetSample2];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r3);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd3, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f30, [retval0+0];
	ld.param.f32	%f31, [retval0+4];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r15, %r16}, [dLi];
	cvt.rn.f32.u32	%f32, %r15;
	cvt.rn.f32.u32	%f33, %r16;
	add.f32 	%f34, %f30, %f32;
	add.f32 	%f35, %f31, %f33;
	ld.global.v2.u32 	{%r19, %r20}, [dLd];
	cvt.rn.f32.u32	%f36, %r19;
	cvt.rn.f32.u32	%f37, %r20;
	div.rn.f32 	%f38, %f34, %f36;
	div.rn.f32 	%f39, %f35, %f37;
	fma.rn.f32 	%f40, %f38, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f41, %f39, 0f40000000, 0fBF800000;
	ld.global.v4.f32 	{%f42, %f43, %f44, %f45}, [dataRenderer+48];
	ld.global.v4.f32 	{%f47, %f48, %f49, %f50}, [dataRenderer+64];
	mul.f32 	%f52, %f41, %f49;
	mul.f32 	%f56, %f41, %f50;
	ld.global.v4.f32 	{%f57, %f58, %f59, %f60}, [dataRenderer+80];
	mul.f32 	%f62, %f41, %f57;
	fma.rn.f32 	%f63, %f45, %f40, %f52;
	fma.rn.f32 	%f64, %f40, %f47, %f56;
	fma.rn.f32 	%f65, %f40, %f48, %f62;
	add.f32 	%f25, %f63, %f58;
	add.f32 	%f26, %f64, %f59;
	add.f32 	%f27, %f65, %f60;
	add.u64 	%rd4, %SP, 0;
	cvta.to.local.u64 	%rd7, %rd4;
	add.s64 	%rd1, %rd7, 12;
	ld.global.v2.f32 	{%f69, %f70}, [dataRenderer+8];
	mov.u16 	%rs2, 0;
	st.local.u8 	[%rd7+12], %rs2;
	mov.u32 	%r23, 0;
	st.local.u32 	[%rd7+8], %r23;
	st.local.u32 	[%rd7+4], %r23;
	st.local.u32 	[%rd7], %r23;
	ld.global.u32 	%r4, [topObject];
	mov.u32 	%r5, 5;
	mov.u32 	%r6, 16;
	// inline asm
	call _rt_trace_64, (%r4, %f42, %f43, %f44, %f25, %f26, %f27, %r5, %f69, %f70, %rd4, %r6);
	// inline asm
	ld.local.u8 	%rs3, [%rd7+12];
	setp.eq.s16	%p1, %rs3, 0;
	ld.global.u8 	%rs1, [dataRenderer+208];
	@%p1 bra 	BB0_7;

	setp.eq.s16	%p2, %rs1, 0;
	ld.local.f32 	%f1, [%rd1+-12];
	@%p2 bra 	BB0_4;

	ld.local.f32 	%f2, [%rd1+-8];
	mul.f32 	%f74, %f2, %f2;
	fma.rn.f32 	%f75, %f1, %f1, %f74;
	ld.local.f32 	%f3, [%rd1+-4];
	fma.rn.f32 	%f76, %f3, %f3, %f75;
	sqrt.rn.f32 	%f77, %f76;
	mov.f32 	%f137, 0f3F800000;
	mov.f32 	%f135, 0f3F000000;
	setp.leu.f32	%p3, %f77, 0f00000000;
	mov.f32 	%f136, %f135;
	@%p3 bra 	BB0_5;

	ld.global.v4.f32 	{%f78, %f79, %f80, %f81}, [dataRenderer+96];
	fma.rn.f32 	%f83, %f78, %f1, 0f00000000;
	fma.rn.f32 	%f85, %f79, %f2, %f83;
	fma.rn.f32 	%f87, %f80, %f3, %f85;
	fma.rn.f32 	%f89, %f81, %f1, 0f00000000;
	ld.global.v4.f32 	{%f90, %f91, %f92, %f93}, [dataRenderer+112];
	fma.rn.f32 	%f95, %f90, %f2, %f89;
	fma.rn.f32 	%f97, %f91, %f3, %f95;
	fma.rn.f32 	%f99, %f92, %f1, 0f00000000;
	fma.rn.f32 	%f101, %f93, %f2, %f99;
	ld.global.f32 	%f102, [dataRenderer+128];
	fma.rn.f32 	%f103, %f102, %f3, %f101;
	mul.f32 	%f104, %f97, %f97;
	fma.rn.f32 	%f105, %f87, %f87, %f104;
	fma.rn.f32 	%f106, %f103, %f103, %f105;
	sqrt.rn.f32 	%f107, %f106;
	rcp.rn.f32 	%f108, %f107;
	fma.rn.f32 	%f109, %f87, %f108, 0f3F800000;
	fma.rn.f32 	%f110, %f97, %f108, 0f3F800000;
	fma.rn.f32 	%f111, %f103, %f108, 0f3F800000;
	mul.f32 	%f135, %f109, 0f3F000000;
	mul.f32 	%f136, %f110, 0f3F000000;
	mul.f32 	%f137, %f111, 0f3F000000;
	bra.uni 	BB0_5;

BB0_7:
	setp.eq.s16	%p5, %rs1, 0;
	selp.f32	%f135, 0f3F800000, 0f00000000, %p5;
	mov.f32 	%f137, 0f3F800000;
	mov.f32 	%f136, %f135;
	mov.f32 	%f141, %f137;
	bra.uni 	BB0_8;

BB0_4:
	add.f32 	%f112, %f1, 0f3F800000;
	ld.local.f32 	%f113, [%rd1+-8];
	add.f32 	%f114, %f113, 0f3F800000;
	ld.local.f32 	%f115, [%rd1+-4];
	add.f32 	%f116, %f115, 0f3F800000;
	mul.f32 	%f135, %f112, 0f3F000000;
	mul.f32 	%f136, %f114, 0f3F000000;
	mul.f32 	%f137, %f116, 0f3F000000;

BB0_5:
	ld.global.u32 	%r1, [dataRenderer+28];
	mov.f32 	%f141, 0f3F800000;
	setp.lt.u32	%p4, %r1, 2;
	@%p4 bra 	BB0_8;

	cvt.rn.f32.u32	%f118, %r1;
	rcp.rn.f32 	%f119, %f118;
	ld.global.u32 	%r24, [dataRenderer+40];
	ld.global.v2.u32 	{%r27, %r28}, [dLi];
	cvt.u64.u32	%rd9, %r27;
	cvt.u64.u32	%rd10, %r28;
	mov.u32 	%r25, 2;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_id_64, (%r24, %r25, %r6, %rd9, %rd10, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f120, %f121, %f122, %f123}, [%rd8];
	sub.f32 	%f128, %f135, %f120;
	sub.f32 	%f129, %f136, %f121;
	sub.f32 	%f130, %f137, %f122;
	mov.f32 	%f131, 0f3F800000;
	sub.f32 	%f132, %f131, %f123;
	fma.rn.f32 	%f135, %f119, %f128, %f120;
	fma.rn.f32 	%f136, %f119, %f129, %f121;
	fma.rn.f32 	%f137, %f119, %f130, %f122;
	fma.rn.f32 	%f141, %f119, %f132, %f123;

BB0_8:
	ld.global.u32 	%r31, [dataRenderer+40];
	ld.global.v2.u32 	{%r34, %r35}, [dLi];
	cvt.u64.u32	%rd14, %r34;
	cvt.u64.u32	%rd15, %r35;
	mov.u32 	%r32, 2;
	mov.u64 	%rd17, 0;
	// inline asm
	call (%rd13), _rt_buffer_get_id_64, (%r31, %r32, %r6, %rd14, %rd15, %rd17, %rd17);
	// inline asm
	st.v4.f32 	[%rd13], {%f135, %f136, %f137, %f141};
	ret;
}

	// .globl	_Z12PgmCH_normalv
.visible .entry _Z12PgmCH_normalv(

)
{
	.local .align 4 .b8 	__local_depot1[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<114>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<17>;


	mov.u64 	%rd16, __local_depot1;
	cvta.local.u64 	%SP, %rd16;
	add.u64 	%rd9, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd9;
	ld.global.u32 	%r1, [dataInstance+32];
	ld.global.s32 	%rd5, [dataInstance+36];
	mov.u32 	%r2, 1;
	mov.u32 	%r3, 320;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd4), _rt_buffer_get_id_64, (%r1, %r2, %r3, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.u32 	%r4, [%rd4+316];
	setp.eq.s32	%p1, %r4, 5;
	@%p1 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_2:
	ld.global.f32 	%f70, [dT];
	ld.global.f32 	%f71, [dRay+12];
	ld.global.f32 	%f72, [dRay+16];
	ld.global.f32 	%f73, [dRay+20];
	ld.global.f32 	%f74, [dRay];
	fma.rn.f32 	%f4, %f70, %f71, %f74;
	ld.global.f32 	%f75, [dRay+4];
	fma.rn.f32 	%f5, %f70, %f72, %f75;
	ld.global.f32 	%f76, [dRay+8];
	fma.rn.f32 	%f6, %f70, %f73, %f76;
	ld.global.f32 	%f68, [aInset+20];
	ld.global.f32 	%f67, [aInset+16];
	ld.global.f32 	%f66, [aInset+12];
	mov.u32 	%r8, 7937;
	mov.f32 	%f69, 0f00000000;
	// inline asm
	call (%f62, %f63, %f64, %f65), _rt_transform_tuple, (%r8, %f66, %f67, %f68, %f69);
	// inline asm
	mul.f32 	%f77, %f63, %f63;
	fma.rn.f32 	%f78, %f62, %f62, %f77;
	fma.rn.f32 	%f79, %f64, %f64, %f78;
	sqrt.rn.f32 	%f80, %f79;
	rcp.rn.f32 	%f81, %f80;
	mul.f32 	%f82, %f62, %f81;
	mul.f32 	%f83, %f63, %f81;
	mul.f32 	%f84, %f64, %f81;
	st.local.f32 	[%rd1+8], %f84;
	st.local.f32 	[%rd1+4], %f83;
	st.local.f32 	[%rd1], %f82;
	ld.u32 	%r9, [%rd4+188];
	setp.eq.s32	%p2, %r9, 0;
	@%p2 bra 	BB1_4;

	ld.u32 	%r11, [%rd4+184];
	ld.f32 	%f85, [%rd4+160];
	mul.f32 	%f86, %f4, %f85;
	mul.f32 	%f87, %f5, %f85;
	mul.f32 	%f88, %f6, %f85;
	add.u64 	%rd13, %SP, 12;
	cvta.to.local.u64 	%rd14, %rd13;
	st.local.f32 	[%rd14], %f86;
	st.local.f32 	[%rd14+4], %f87;
	st.local.f32 	[%rd14+8], %f88;
	ld.global.u32 	%r10, [GetTriplanNormal];
	// inline asm
	call (%rd12), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd9;
	.param .align 4 .b8 retval0[12];
	prototype_3 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b32 _, .param .b64 _, .param .b64 _);
	call (retval0), 
	%rd12, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_3;
	ld.param.f32	%f89, [retval0+0];
	ld.param.f32	%f90, [retval0+4];
	ld.param.f32	%f91, [retval0+8];
	
	//{
	}// Callseq End 3
	ld.f32 	%f92, [%rd4+172];
	add.f32 	%f93, %f92, 0f3F800000;
	ld.local.f32 	%f94, [%rd1];
	sub.f32 	%f95, %f94, %f89;
	ld.local.f32 	%f96, [%rd1+4];
	sub.f32 	%f97, %f96, %f90;
	ld.local.f32 	%f98, [%rd1+8];
	sub.f32 	%f99, %f98, %f91;
	fma.rn.f32 	%f100, %f93, %f95, %f89;
	fma.rn.f32 	%f101, %f93, %f97, %f90;
	fma.rn.f32 	%f102, %f93, %f99, %f91;
	st.local.f32 	[%rd1+8], %f102;
	st.local.f32 	[%rd1+4], %f101;
	st.local.f32 	[%rd1], %f100;

BB1_4:
	ld.local.f32 	%f103, [%rd1];
	ld.local.f32 	%f104, [%rd1+4];
	mul.f32 	%f105, %f104, %f104;
	fma.rn.f32 	%f106, %f103, %f103, %f105;
	ld.local.f32 	%f107, [%rd1+8];
	fma.rn.f32 	%f108, %f107, %f107, %f106;
	sqrt.rn.f32 	%f109, %f108;
	rcp.rn.f32 	%f110, %f109;
	mul.f32 	%f111, %f110, %f103;
	mul.f32 	%f112, %f110, %f104;
	mul.f32 	%f113, %f110, %f107;
	bra.uni 	BB1_5;

BB1_1:
	add.s64 	%rd11, %rd4, 144;
	ld.global.v2.f32 	{%f21, %f22}, [aInset];
	ld.global.v2.f32 	{%f25, %f26}, [aInset+8];
	ld.global.v2.f32 	{%f29, %f30}, [aInset+16];
	ld.global.v2.f32 	{%f33, %f34}, [aInset+24];
	ld.global.v2.f32 	{%f37, %f38}, [aInset+32];
	ld.global.v2.f32 	{%f41, %f42}, [aInset+40];
	ld.global.v2.f32 	{%f45, %f46}, [aInset+48];
	ld.global.v2.f32 	{%f49, %f50}, [aInset+56];
	ld.global.v2.f32 	{%f53, %f54}, [aInset+64];
	mov.b32 	 %r7, %f54;
	ld.global.u32 	%r5, [GetTexture_normal];
	// inline asm
	call (%rd10), _rt_callable_program_from_id_64, (%r5);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f21;
	st.param.f32	[param1+4], %f22;
	st.param.f32	[param1+8], %f25;
	st.param.f32	[param1+12], %f26;
	st.param.f32	[param1+16], %f29;
	st.param.f32	[param1+20], %f30;
	st.param.f32	[param1+24], %f33;
	st.param.f32	[param1+28], %f34;
	st.param.f32	[param1+32], %f37;
	st.param.f32	[param1+36], %f38;
	st.param.f32	[param1+40], %f41;
	st.param.f32	[param1+44], %f42;
	st.param.f32	[param1+48], %f45;
	st.param.f32	[param1+52], %f46;
	st.param.f32	[param1+56], %f49;
	st.param.f32	[param1+60], %f50;
	st.param.f32	[param1+64], %f53;
	st.param.b32	[param1+68], %r7;
	.param .align 4 .b8 retval0[12];
	prototype_2 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd10, 
	(
	param0, 
	param1
	)
	, prototype_2;
	ld.param.f32	%f17, [retval0+0];
	ld.param.f32	%f18, [retval0+4];
	ld.param.f32	%f19, [retval0+8];
	
	//{
	}// Callseq End 2
	mov.u32 	%r6, 7937;
	mov.f32 	%f20, 0f00000000;
	// inline asm
	call (%f13, %f14, %f15, %f16), _rt_transform_tuple, (%r6, %f17, %f18, %f19, %f20);
	// inline asm
	mul.f32 	%f57, %f14, %f14;
	fma.rn.f32 	%f58, %f13, %f13, %f57;
	fma.rn.f32 	%f59, %f15, %f15, %f58;
	sqrt.rn.f32 	%f60, %f59;
	rcp.rn.f32 	%f61, %f60;
	mul.f32 	%f111, %f13, %f61;
	mul.f32 	%f112, %f14, %f61;
	mul.f32 	%f113, %f15, %f61;

BB1_5:
	st.local.f32 	[%rd1+8], %f113;
	st.local.f32 	[%rd1+4], %f112;
	st.local.f32 	[%rd1], %f111;
	st.global.f32 	[prd_normalRendering], %f111;
	st.global.f32 	[prd_normalRendering+4], %f112;
	st.global.f32 	[prd_normalRendering+8], %f113;
	mov.u16 	%rs1, 1;
	st.global.u8 	[prd_normalRendering+12], %rs1;
	ret;
}


