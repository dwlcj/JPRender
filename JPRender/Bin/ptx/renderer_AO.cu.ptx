//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z12PgmLaunch_AOv
.global .align 8 .b8 dLd[8];
.global .align 8 .b8 dLi[8];
.global .align 4 .b8 dRay[36];
.global .align 4 .f32 dT;
.global .align 8 .b8 aInset[72];
.global .align 4 .b8 topObject[4];
.global .align 4 .b8 dataContext[8];
.global .align 16 .b8 dataRenderer[224];
.global .align 4 .b8 dataInstance[48];
.global .align 16 .b8 prdR[144];
.global .align 4 .b8 GetRandomSeed[4];
.global .align 4 .b8 GetSample1[4];
.global .align 4 .b8 GetSample2[4];
.global .align 4 .b8 CosineSampleHemisphere_quicker[4];
.global .align 4 .b8 GetTexture_normal[4];
.global .align 1 .b8 buf_lm_sample_F[1];
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLdE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLiE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4dRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo2dTE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6aInsetE[8] = {82, 97, 121, 0, 72, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11dataContextE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataRendererE[8] = {82, 97, 121, 0, 224, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataInstanceE[8] = {82, 97, 121, 0, 48, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4prdRE[8] = {82, 97, 121, 0, 144, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetRandomSeedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo30CosineSampleHemisphere_quickerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo17GetTexture_normalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename3dLdE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLiE[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .b8 _ZN21rti_internal_typename4dRayE[4] = {82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename2dTE[6] = {102, 108, 111, 97, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename6aInsetE[13] = {73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename11dataContextE[14] = {83, 68, 97, 116, 97, 95, 67, 111, 110, 116, 101, 120, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataRendererE[15] = {83, 68, 97, 116, 97, 95, 82, 101, 110, 100, 101, 114, 101, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataInstanceE[15] = {83, 68, 97, 116, 97, 95, 73, 110, 115, 116, 97, 110, 99, 101, 0};
.global .align 4 .b8 _ZN21rti_internal_typename4prdRE[4] = {80, 82, 68, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetRandomSeedE[37] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 117, 105, 110, 116, 40, 117, 105, 110, 116, 44, 117, 105, 110, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample1E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 49, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample2E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename30CosineSampleHemisphere_quickerE[58] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 68, 105, 114, 40, 99, 111, 110, 115, 116, 32, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 38, 44, 102, 108, 111, 97, 116, 44, 102, 108, 111, 97, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename17GetTexture_normalE[60] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 78, 111, 114, 40, 99, 111, 110, 115, 116, 32, 83, 68, 97, 116, 97, 95, 84, 101, 120, 116, 117, 114, 101, 38, 44, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLiE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4dRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum2dTE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6aInsetE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11dataContextE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataRendererE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataInstanceE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4prdRE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetRandomSeedE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample1E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample2E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum30CosineSampleHemisphere_quickerE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum17GetTexture_normalE = 4920;
.global .align 16 .b8 _ZN21rti_internal_semantic3dLdE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLiE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic4dRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic2dTE[23] = {114, 116, 73, 110, 116, 101, 114, 115, 101, 99, 116, 105, 111, 110, 68, 105, 115, 116, 97, 110, 99, 101, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6aInsetE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 97, 73, 110, 115, 101, 116, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11dataContextE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataRendererE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataInstanceE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic4prdRE[10] = {114, 116, 80, 97, 121, 108, 111, 97, 100, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic13GetRandomSeedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample1E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic30CosineSampleHemisphere_quickerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic17GetTexture_normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLiE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4dRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation2dTE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6aInsetE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11dataContextE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataRendererE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataInstanceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4prdRE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetRandomSeedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation30CosineSampleHemisphere_quickerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation17GetTexture_normalE[1];

.visible .entry _Z12PgmLaunch_AOv(

)
{
	.local .align 16 .b8 	__local_depot0[176];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<305>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<35>;


	mov.u64 	%rd34, __local_depot0;
	cvta.local.u64 	%SP, %rd34;
	add.u64 	%rd5, %SP, 160;
	cvta.to.local.u64 	%rd1, %rd5;
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd7, %rd6;
	ld.global.u32 	%r7, [dLd];
	ld.global.v2.u32 	{%r8, %r9}, [dLi];
	mad.lo.s32 	%r12, %r7, %r9, %r8;
	ld.global.u32 	%r13, [dataRenderer+28];
	ld.global.u32 	%r4, [GetRandomSeed];
	// inline asm
	call (%rd3), _rt_callable_program_from_id_64, (%r4);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r13;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _);
	call (retval0), 
	%rd3, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 0
	st.local.u32 	[%rd7], %r14;
	ld.global.u32 	%r5, [GetSample2];
	// inline asm
	call (%rd4), _rt_callable_program_from_id_64, (%r5);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd4, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f31, [retval0+0];
	ld.param.f32	%f32, [retval0+4];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r15, %r16}, [dLi];
	cvt.rn.f32.u32	%f33, %r15;
	cvt.rn.f32.u32	%f34, %r16;
	add.f32 	%f35, %f31, %f33;
	add.f32 	%f36, %f32, %f34;
	ld.global.v2.u32 	{%r19, %r20}, [dLd];
	cvt.rn.f32.u32	%f37, %r19;
	cvt.rn.f32.u32	%f38, %r20;
	div.rn.f32 	%f39, %f35, %f37;
	div.rn.f32 	%f40, %f36, %f38;
	fma.rn.f32 	%f41, %f39, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f42, %f40, 0f40000000, 0fBF800000;
	neg.f32 	%f43, %f42;
	ld.global.v2.f32 	{%f44, %f45}, [dataRenderer+8];
	add.u64 	%rd8, %SP, 16;
	cvta.to.local.u64 	%rd9, %rd8;
	add.s64 	%rd2, %rd9, 4;
	ld.global.v4.f32 	{%f297, %f298, %f299, %f49}, [dataRenderer+48];
	ld.global.v4.f32 	{%f50, %f51, %f52, %f53}, [dataRenderer+64];
	ld.global.v4.f32 	{%f54, %f55, %f56, %f57}, [dataRenderer+80];
	mov.u32 	%r23, 0;
	st.local.u32 	[%rd9+4], %r23;
	st.local.v2.f32 	[%rd9+8], {%f297, %f298};
	st.local.f32 	[%rd9+16], %f299;
	mul.f32 	%f60, %f43, %f52;
	mul.f32 	%f64, %f43, %f53;
	mul.f32 	%f66, %f43, %f54;
	fma.rn.f32 	%f67, %f41, %f49, %f60;
	fma.rn.f32 	%f68, %f41, %f50, %f64;
	fma.rn.f32 	%f69, %f41, %f51, %f66;
	add.f32 	%f296, %f69, %f57;
	add.f32 	%f295, %f68, %f56;
	add.f32 	%f294, %f67, %f55;
	st.local.v2.f32 	[%rd9+32], {%f294, %f295};
	st.local.f32 	[%rd9+40], %f296;
	ld.local.u32 	%r24, [%rd7];
	st.local.u32 	[%rd9], %r24;
	mov.u32 	%r6, 4;
	mov.u32 	%r64, %r6;
	bra.uni 	BB0_1;

BB0_9:
	ld.local.f32 	%f299, [%rd2+12];
	ld.local.v2.f32 	{%f297, %f298}, [%rd2+4];
	ld.local.v4.f32 	{%f294, %f295, %f296, %f293}, [%rd2+28];

BB0_1:
	mov.u16 	%rs1, 0;
	st.local.u8 	[%rd2+128], %rs1;
	ld.global.u32 	%r25, [topObject];
	mov.u32 	%r27, 144;
	// inline asm
	call _rt_trace_64, (%r25, %f297, %f298, %f299, %f294, %f295, %f296, %r6, %f44, %f45, %rd8, %r27);
	// inline asm
	add.s32 	%r64, %r64, -1;
	setp.gt.s32	%p1, %r64, 0;
	ld.local.u8 	%rs2, [%rd2+128];
	setp.ne.s16	%p2, %rs2, 0;
	and.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_9;

	ld.local.u32 	%r28, [%rd2];
	setp.eq.s32	%p4, %r28, 0;
	mov.f32 	%f300, 0f3F800000;
	@%p4 bra 	BB0_5;

	ld.local.f32 	%f15, [%rd2+124];
	setp.leu.f32	%p5, %f15, 0f358637BD;
	@%p5 bra 	BB0_5;

	ld.local.v2.f32 	{%f115, %f116}, [%rd2+4];
	ld.global.v2.f32 	{%f117, %f118}, [dataRenderer];
	ld.local.v2.f32 	{%f119, %f120}, [%rd2+12];
	ld.local.v2.f32 	{%f121, %f122}, [%rd2+20];
	abs.f32 	%f126, %f120;
	abs.f32 	%f127, %f122;
	setp.gt.f32	%p6, %f126, %f127;
	neg.f32 	%f128, %f121;
	neg.f32 	%f129, %f122;
	selp.f32	%f130, %f128, 0f00000000, %p6;
	selp.f32	%f131, %f120, %f129, %p6;
	selp.f32	%f132, 0f00000000, %f121, %p6;
	mul.f32 	%f133, %f131, %f131;
	fma.rn.f32 	%f134, %f130, %f130, %f133;
	fma.rn.f32 	%f135, %f132, %f132, %f134;
	sqrt.rn.f32 	%f136, %f135;
	rcp.rn.f32 	%f137, %f136;
	mul.f32 	%f138, %f130, %f137;
	mul.f32 	%f139, %f131, %f137;
	mul.f32 	%f140, %f132, %f137;
	mul.f32 	%f141, %f122, %f139;
	mul.f32 	%f142, %f121, %f140;
	sub.f32 	%f143, %f141, %f142;
	mul.f32 	%f144, %f120, %f140;
	mul.f32 	%f145, %f122, %f138;
	sub.f32 	%f146, %f144, %f145;
	mul.f32 	%f147, %f121, %f138;
	mul.f32 	%f148, %f120, %f139;
	sub.f32 	%f149, %f147, %f148;
	mov.u32 	%r49, 1065353216;
	st.local.u32 	[%rd2+132], %r49;
	st.local.u32 	[%rd2+124], %r49;
	ld.global.u32 	%r29, [GetSample2];
	// inline asm
	call (%rd11), _rt_callable_program_from_id_64, (%r29);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .align 8 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd11, 
	(
	param0
	)
	, prototype_2;
	ld.param.f32	%f150, [retval0+0];
	ld.param.f32	%f151, [retval0+4];
	
	//{
	}// Callseq End 2
	st.local.v2.f32 	[%rd1], {%f150, %f151};
	ld.global.u32 	%r30, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd12), _rt_callable_program_from_id_64, (%r30);
	// inline asm
	mov.f32 	%f152, 0f3F800000;
	mov.f32 	%f153, 0f40800000;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 param1;
	st.param.f32	[param1+0], %f152;
	.param .b32 param2;
	st.param.f32	[param2+0], %f153;
	.param .align 4 .b8 retval0[12];
	prototype_3 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd12, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_3;
	ld.param.f32	%f154, [retval0+0];
	ld.param.f32	%f155, [retval0+4];
	ld.param.f32	%f156, [retval0+8];
	
	//{
	}// Callseq End 3
	mul.f32 	%f157, %f138, %f155;
	mul.f32 	%f158, %f139, %f155;
	mul.f32 	%f159, %f140, %f155;
	fma.rn.f32 	%f160, %f143, %f154, %f157;
	fma.rn.f32 	%f161, %f146, %f154, %f158;
	fma.rn.f32 	%f162, %f149, %f154, %f159;
	fma.rn.f32 	%f163, %f120, %f156, %f160;
	fma.rn.f32 	%f164, %f121, %f156, %f161;
	fma.rn.f32 	%f165, %f122, %f156, %f162;
	mul.f32 	%f166, %f164, %f164;
	fma.rn.f32 	%f167, %f163, %f163, %f166;
	fma.rn.f32 	%f168, %f165, %f165, %f167;
	sqrt.rn.f32 	%f169, %f168;
	rcp.rn.f32 	%f170, %f169;
	mul.f32 	%f86, %f170, %f163;
	mul.f32 	%f87, %f170, %f164;
	mul.f32 	%f88, %f170, %f165;
	ld.global.u32 	%r31, [topObject];
	mov.u32 	%r47, 4;
	// inline asm
	call _rt_trace_64, (%r31, %f115, %f116, %f119, %f86, %f87, %f88, %r47, %f117, %f118, %rd8, %r27);
	// inline asm
	ld.local.v4.f32 	{%f171, %f172, %f173, %f174}, [%rd2+124];
	mul.f32 	%f176, %f15, %f171;
	div.rn.f32 	%f178, %f173, %f176;
	min.f32 	%f179, %f178, %f152;
	mov.f32 	%f180, 0f00000000;
	max.f32 	%f181, %f180, %f179;
	add.f32 	%f182, %f181, 0f00000000;
	st.local.u32 	[%rd2+132], %r49;
	st.local.u32 	[%rd2+124], %r49;
	ld.global.u32 	%r34, [GetSample2];
	// inline asm
	call (%rd14), _rt_callable_program_from_id_64, (%r34);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .align 8 .b8 retval0[8];
	prototype_4 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd14, 
	(
	param0
	)
	, prototype_4;
	ld.param.f32	%f183, [retval0+0];
	ld.param.f32	%f184, [retval0+4];
	
	//{
	}// Callseq End 4
	st.local.v2.f32 	[%rd1], {%f183, %f184};
	ld.global.u32 	%r35, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd15), _rt_callable_program_from_id_64, (%r35);
	// inline asm
	mov.f32 	%f185, 0f40000000;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 param1;
	st.param.f32	[param1+0], %f185;
	.param .b32 param2;
	st.param.f32	[param2+0], %f153;
	.param .align 4 .b8 retval0[12];
	prototype_5 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd15, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_5;
	ld.param.f32	%f186, [retval0+0];
	ld.param.f32	%f187, [retval0+4];
	ld.param.f32	%f188, [retval0+8];
	
	//{
	}// Callseq End 5
	mul.f32 	%f189, %f138, %f187;
	mul.f32 	%f190, %f139, %f187;
	mul.f32 	%f191, %f140, %f187;
	fma.rn.f32 	%f192, %f143, %f186, %f189;
	fma.rn.f32 	%f193, %f146, %f186, %f190;
	fma.rn.f32 	%f194, %f149, %f186, %f191;
	fma.rn.f32 	%f195, %f120, %f188, %f192;
	fma.rn.f32 	%f196, %f121, %f188, %f193;
	fma.rn.f32 	%f197, %f122, %f188, %f194;
	mul.f32 	%f198, %f196, %f196;
	fma.rn.f32 	%f199, %f195, %f195, %f198;
	fma.rn.f32 	%f200, %f197, %f197, %f199;
	sqrt.rn.f32 	%f201, %f200;
	rcp.rn.f32 	%f202, %f201;
	mul.f32 	%f94, %f202, %f195;
	mul.f32 	%f95, %f202, %f196;
	mul.f32 	%f96, %f202, %f197;
	ld.global.u32 	%r36, [topObject];
	// inline asm
	call _rt_trace_64, (%r36, %f115, %f116, %f119, %f94, %f95, %f96, %r47, %f117, %f118, %rd8, %r27);
	// inline asm
	ld.local.v4.f32 	{%f203, %f204, %f205, %f206}, [%rd2+124];
	mul.f32 	%f208, %f15, %f203;
	div.rn.f32 	%f210, %f205, %f208;
	min.f32 	%f211, %f210, %f152;
	max.f32 	%f212, %f180, %f211;
	add.f32 	%f213, %f182, %f212;
	st.local.u32 	[%rd2+132], %r49;
	st.local.u32 	[%rd2+124], %r49;
	ld.global.u32 	%r39, [GetSample2];
	// inline asm
	call (%rd17), _rt_callable_program_from_id_64, (%r39);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .align 8 .b8 retval0[8];
	prototype_6 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd17, 
	(
	param0
	)
	, prototype_6;
	ld.param.f32	%f214, [retval0+0];
	ld.param.f32	%f215, [retval0+4];
	
	//{
	}// Callseq End 6
	st.local.v2.f32 	[%rd1], {%f214, %f215};
	ld.global.u32 	%r40, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd18), _rt_callable_program_from_id_64, (%r40);
	// inline asm
	mov.f32 	%f216, 0f40400000;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 param1;
	st.param.f32	[param1+0], %f216;
	.param .b32 param2;
	st.param.f32	[param2+0], %f153;
	.param .align 4 .b8 retval0[12];
	prototype_7 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd18, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_7;
	ld.param.f32	%f217, [retval0+0];
	ld.param.f32	%f218, [retval0+4];
	ld.param.f32	%f219, [retval0+8];
	
	//{
	}// Callseq End 7
	mul.f32 	%f220, %f138, %f218;
	mul.f32 	%f221, %f139, %f218;
	mul.f32 	%f222, %f140, %f218;
	fma.rn.f32 	%f223, %f143, %f217, %f220;
	fma.rn.f32 	%f224, %f146, %f217, %f221;
	fma.rn.f32 	%f225, %f149, %f217, %f222;
	fma.rn.f32 	%f226, %f120, %f219, %f223;
	fma.rn.f32 	%f227, %f121, %f219, %f224;
	fma.rn.f32 	%f228, %f122, %f219, %f225;
	mul.f32 	%f229, %f227, %f227;
	fma.rn.f32 	%f230, %f226, %f226, %f229;
	fma.rn.f32 	%f231, %f228, %f228, %f230;
	sqrt.rn.f32 	%f232, %f231;
	rcp.rn.f32 	%f233, %f232;
	mul.f32 	%f102, %f233, %f226;
	mul.f32 	%f103, %f233, %f227;
	mul.f32 	%f104, %f233, %f228;
	ld.global.u32 	%r41, [topObject];
	// inline asm
	call _rt_trace_64, (%r41, %f115, %f116, %f119, %f102, %f103, %f104, %r47, %f117, %f118, %rd8, %r27);
	// inline asm
	ld.local.v4.f32 	{%f234, %f235, %f236, %f237}, [%rd2+124];
	mul.f32 	%f239, %f15, %f234;
	div.rn.f32 	%f241, %f236, %f239;
	min.f32 	%f242, %f241, %f152;
	max.f32 	%f243, %f180, %f242;
	add.f32 	%f244, %f213, %f243;
	st.local.u32 	[%rd2+132], %r49;
	st.local.u32 	[%rd2+124], %r49;
	ld.global.u32 	%r44, [GetSample2];
	// inline asm
	call (%rd20), _rt_callable_program_from_id_64, (%r44);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .align 8 .b8 retval0[8];
	prototype_8 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd20, 
	(
	param0
	)
	, prototype_8;
	ld.param.f32	%f245, [retval0+0];
	ld.param.f32	%f246, [retval0+4];
	
	//{
	}// Callseq End 8
	st.local.v2.f32 	[%rd1], {%f245, %f246};
	ld.global.u32 	%r45, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd21), _rt_callable_program_from_id_64, (%r45);
	// inline asm
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b32 param1;
	st.param.f32	[param1+0], %f153;
	.param .b32 param2;
	st.param.f32	[param2+0], %f153;
	.param .align 4 .b8 retval0[12];
	prototype_9 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd21, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_9;
	ld.param.f32	%f247, [retval0+0];
	ld.param.f32	%f248, [retval0+4];
	ld.param.f32	%f249, [retval0+8];
	
	//{
	}// Callseq End 9
	mul.f32 	%f250, %f138, %f248;
	mul.f32 	%f251, %f139, %f248;
	mul.f32 	%f252, %f140, %f248;
	fma.rn.f32 	%f253, %f143, %f247, %f250;
	fma.rn.f32 	%f254, %f146, %f247, %f251;
	fma.rn.f32 	%f255, %f149, %f247, %f252;
	fma.rn.f32 	%f256, %f120, %f249, %f253;
	fma.rn.f32 	%f257, %f121, %f249, %f254;
	fma.rn.f32 	%f258, %f122, %f249, %f255;
	mul.f32 	%f259, %f257, %f257;
	fma.rn.f32 	%f260, %f256, %f256, %f259;
	fma.rn.f32 	%f261, %f258, %f258, %f260;
	sqrt.rn.f32 	%f262, %f261;
	rcp.rn.f32 	%f263, %f262;
	mul.f32 	%f110, %f263, %f256;
	mul.f32 	%f111, %f263, %f257;
	mul.f32 	%f112, %f263, %f258;
	ld.global.u32 	%r46, [topObject];
	// inline asm
	call _rt_trace_64, (%r46, %f115, %f116, %f119, %f110, %f111, %f112, %r47, %f117, %f118, %rd8, %r27);
	// inline asm
	ld.local.v4.f32 	{%f264, %f265, %f266, %f267}, [%rd2+124];
	mul.f32 	%f269, %f15, %f264;
	div.rn.f32 	%f271, %f266, %f269;
	min.f32 	%f272, %f271, %f152;
	max.f32 	%f273, %f180, %f272;
	add.f32 	%f274, %f244, %f273;
	mul.f32 	%f300, %f274, 0f3E800000;

BB0_5:
	ld.global.u32 	%r3, [dataRenderer+28];
	setp.lt.u32	%p7, %r3, 2;
	@%p7 bra 	BB0_6;

	cvt.rn.f32.u32	%f276, %r3;
	rcp.rn.f32 	%f277, %f276;
	ld.global.u32 	%r50, [dataRenderer+40];
	ld.global.v2.u32 	{%r53, %r54}, [dLi];
	cvt.u64.u32	%rd25, %r53;
	cvt.u64.u32	%rd26, %r54;
	mov.u32 	%r51, 2;
	mov.u32 	%r52, 16;
	mov.u64 	%rd28, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_id_64, (%r50, %r51, %r52, %rd25, %rd26, %rd28, %rd28);
	// inline asm
	ld.v4.f32 	{%f278, %f279, %f280, %f281}, [%rd24];
	sub.f32 	%f285, %f300, %f278;
	sub.f32 	%f286, %f300, %f279;
	sub.f32 	%f287, %f300, %f280;
	fma.rn.f32 	%f300, %f277, %f285, %f278;
	fma.rn.f32 	%f302, %f277, %f286, %f279;
	fma.rn.f32 	%f303, %f277, %f287, %f280;
	mov.f32 	%f304, 0f3F800000;
	bra.uni 	BB0_8;

BB0_6:
	mov.f32 	%f302, %f300;
	mov.f32 	%f303, %f300;
	mov.f32 	%f304, %f300;

BB0_8:
	ld.global.u32 	%r57, [dataRenderer+40];
	ld.global.v2.u32 	{%r60, %r61}, [dLi];
	cvt.u64.u32	%rd30, %r60;
	cvt.u64.u32	%rd31, %r61;
	mov.u32 	%r58, 2;
	mov.u32 	%r59, 16;
	mov.u64 	%rd33, 0;
	// inline asm
	call (%rd29), _rt_buffer_get_id_64, (%r57, %r58, %r59, %rd30, %rd31, %rd33, %rd33);
	// inline asm
	st.v4.f32 	[%rd29], {%f300, %f302, %f303, %f304};
	ret;
}

	// .globl	_Z8PgmCH_AOv
.visible .entry _Z8PgmCH_AOv(

)
{
	.local .align 16 .b8 	__local_depot1[160];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<32>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<225>;
	.reg .b32 	%r<43>;
	.reg .b64 	%rd<47>;


	mov.u64 	%rd46, __local_depot1;
	cvta.local.u64 	%SP, %rd46;
	add.u64 	%rd10, %SP, 144;
	cvta.to.local.u64 	%rd1, %rd10;
	ld.global.u32 	%r1, [dataInstance+32];
	ld.global.s32 	%rd6, [dataInstance+36];
	mov.u32 	%r2, 1;
	mov.u32 	%r3, 320;
	mov.u64 	%rd9, 0;
	// inline asm
	call (%rd5), _rt_buffer_get_id_64, (%r1, %r2, %r3, %rd6, %rd9, %rd9, %rd9);
	// inline asm
	ld.global.f32 	%f1, [dRay+12];
	ld.global.f32 	%f2, [dT];
	ld.global.f32 	%f3, [dRay+16];
	ld.global.f32 	%f4, [dRay+20];
	ld.global.f32 	%f29, [dRay];
	ld.global.f32 	%f30, [dRay+4];
	ld.global.f32 	%f31, [dRay+8];
	fma.rn.f32 	%f7, %f2, %f4, %f31;
	fma.rn.f32 	%f6, %f2, %f3, %f30;
	fma.rn.f32 	%f5, %f2, %f1, %f29;
	st.global.v2.f32 	[prdR+8], {%f5, %f6};
	st.global.f32 	[prdR+16], %f7;
	ld.u32 	%r4, [%rd5+316];
	setp.eq.s32	%p2, %r4, 3;
	@%p2 bra 	BB1_4;
	bra.uni 	BB1_1;

BB1_4:
	mov.u16 	%rs1, 1;
	st.global.u8 	[prdR+132], %rs1;
	add.u64 	%rd13, %SP, 0;
	cvta.to.local.u64 	%rd14, %rd13;
	neg.f32 	%f79, %f1;
	st.local.f32 	[%rd14+12], %f79;
	neg.f32 	%f80, %f4;
	neg.f32 	%f81, %f3;
	st.local.v2.f32 	[%rd14+16], {%f81, %f80};
	st.local.f32 	[%rd14+40], %f6;
	st.local.f32 	[%rd14+36], %f5;
	st.local.f32 	[%rd14+44], %f7;
	ld.global.f32 	%f65, [aInset+12];
	ld.global.v2.f32 	{%f82, %f83}, [aInset+16];
	mov.u32 	%r11, 7937;
	mov.f32 	%f76, 0f00000000;
	// inline asm
	call (%f61, %f62, %f63, %f64), _rt_transform_tuple, (%r11, %f65, %f82, %f83, %f76);
	// inline asm
	mul.f32 	%f84, %f62, %f62;
	fma.rn.f32 	%f85, %f61, %f61, %f84;
	fma.rn.f32 	%f86, %f63, %f63, %f85;
	sqrt.rn.f32 	%f87, %f86;
	rcp.rn.f32 	%f88, %f87;
	mul.f32 	%f89, %f63, %f88;
	mul.f32 	%f90, %f62, %f88;
	mul.f32 	%f91, %f61, %f88;
	st.local.v2.f32 	[%rd14], {%f91, %f90};
	st.local.f32 	[%rd14+8], %f89;
	ld.global.u32 	%r13, [prdR];
	st.local.u32 	[%rd1], %r13;
	add.s64 	%rd15, %rd5, 144;
	ld.global.u32 	%r14, [aInset+68];
	ld.global.f32 	%f92, [aInset+64];
	ld.global.f32 	%f93, [aInset+60];
	ld.global.f32 	%f94, [aInset+56];
	ld.global.f32 	%f95, [aInset+52];
	ld.global.f32 	%f96, [aInset+48];
	ld.global.f32 	%f97, [aInset+44];
	ld.global.f32 	%f98, [aInset+40];
	ld.global.f32 	%f99, [aInset+36];
	ld.global.f32 	%f100, [aInset+32];
	ld.global.f32 	%f101, [aInset+28];
	ld.global.f32 	%f102, [aInset+24];
	ld.global.f32 	%f103, [aInset+20];
	ld.global.f32 	%f104, [aInset+16];
	ld.global.f32 	%f105, [aInset+12];
	ld.global.f32 	%f106, [aInset+8];
	ld.global.f32 	%f107, [aInset+4];
	ld.global.f32 	%f108, [aInset];
	ld.global.u32 	%r10, [GetTexture_normal];
	// inline asm
	call (%rd11), _rt_callable_program_from_id_64, (%r10);
	// inline asm
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .align 8 .b8 param1[72];
	st.param.f32	[param1+0], %f108;
	st.param.f32	[param1+4], %f107;
	st.param.f32	[param1+8], %f106;
	st.param.f32	[param1+12], %f105;
	st.param.f32	[param1+16], %f104;
	st.param.f32	[param1+20], %f103;
	st.param.f32	[param1+24], %f102;
	st.param.f32	[param1+28], %f101;
	st.param.f32	[param1+32], %f100;
	st.param.f32	[param1+36], %f99;
	st.param.f32	[param1+40], %f98;
	st.param.f32	[param1+44], %f97;
	st.param.f32	[param1+48], %f96;
	st.param.f32	[param1+52], %f95;
	st.param.f32	[param1+56], %f94;
	st.param.f32	[param1+60], %f93;
	st.param.f32	[param1+64], %f92;
	st.param.b32	[param1+68], %r14;
	.param .align 4 .b8 retval0[12];
	prototype_10 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .align 8 .b8 _[72]);
	call (retval0), 
	%rd11, 
	(
	param0, 
	param1
	)
	, prototype_10;
	ld.param.f32	%f73, [retval0+0];
	ld.param.f32	%f74, [retval0+4];
	ld.param.f32	%f75, [retval0+8];
	
	//{
	}// Callseq End 10
	// inline asm
	call (%f69, %f70, %f71, %f72), _rt_transform_tuple, (%r11, %f73, %f74, %f75, %f76);
	// inline asm
	mul.f32 	%f109, %f70, %f70;
	fma.rn.f32 	%f110, %f69, %f69, %f109;
	fma.rn.f32 	%f111, %f71, %f71, %f110;
	sqrt.rn.f32 	%f112, %f111;
	rcp.rn.f32 	%f113, %f112;
	mul.f32 	%f114, %f69, %f113;
	mul.f32 	%f115, %f70, %f113;
	mul.f32 	%f116, %f71, %f113;
	st.local.f32 	[%rd14], %f114;
	st.local.f32 	[%rd14+4], %f115;
	st.local.f32 	[%rd14+8], %f116;
	ld.f32 	%f117, [%rd5+280];
	st.local.f32 	[%rd14+84], %f117;
	ld.global.u32 	%r12, [GetSample1];
	// inline asm
	call (%rd12), _rt_callable_program_from_id_64, (%r12);
	// inline asm
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 retval0;
	prototype_11 : .callprototype (.param .b32 _) _ (.param .b64 _);
	call (retval0), 
	%rd12, 
	(
	param0
	)
	, prototype_11;
	ld.param.f32	%f8, [retval0+0];
	
	//{
	}// Callseq End 11
	ld.local.f32 	%f118, [%rd14];
	ld.local.f32 	%f119, [%rd14+12];
	ld.local.f32 	%f120, [%rd14+4];
	ld.local.f32 	%f121, [%rd14+16];
	mul.f32 	%f122, %f121, %f120;
	fma.rn.f32 	%f123, %f119, %f118, %f122;
	ld.local.f32 	%f124, [%rd14+8];
	ld.local.f32 	%f125, [%rd14+20];
	fma.rn.f32 	%f126, %f125, %f124, %f123;
	abs.f32 	%f127, %f126;
	ld.f32 	%f9, [%rd5+216];
	ld.f32 	%f10, [%rd5+212];
	mov.f32 	%f128, 0f3F800000;
	sub.f32 	%f129, %f128, %f127;
	max.f32 	%f12, %f76, %f129;
	ld.f32 	%f13, [%rd5+208];
	mul.f32 	%f130, %f13, 0f3F000000;
	cvt.rzi.f32.f32	%f131, %f130;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f13;
	abs.f32 	%f14, %f132;
	abs.f32 	%f15, %f12;
	setp.lt.f32	%p4, %f15, 0f00800000;
	mul.f32 	%f133, %f15, 0f4B800000;
	selp.f32	%f134, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f135, %f133, %f15, %p4;
	mov.b32 	 %r15, %f135;
	and.b32  	%r16, %r15, 8388607;
	or.b32  	%r17, %r16, 1065353216;
	mov.b32 	 %f136, %r17;
	shr.u32 	%r18, %r15, 23;
	cvt.rn.f32.u32	%f137, %r18;
	add.f32 	%f138, %f134, %f137;
	setp.gt.f32	%p5, %f136, 0f3FB504F3;
	mul.f32 	%f139, %f136, 0f3F000000;
	add.f32 	%f140, %f138, 0f3F800000;
	selp.f32	%f141, %f139, %f136, %p5;
	selp.f32	%f142, %f140, %f138, %p5;
	add.f32 	%f143, %f141, 0fBF800000;
	add.f32 	%f78, %f141, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f77,%f78;
	// inline asm
	add.f32 	%f144, %f143, %f143;
	mul.f32 	%f145, %f77, %f144;
	mul.f32 	%f146, %f145, %f145;
	mov.f32 	%f147, 0f3C4CAF63;
	mov.f32 	%f148, 0f3B18F0FE;
	fma.rn.f32 	%f149, %f148, %f146, %f147;
	mov.f32 	%f150, 0f3DAAAABD;
	fma.rn.f32 	%f151, %f149, %f146, %f150;
	mul.rn.f32 	%f152, %f151, %f146;
	mul.rn.f32 	%f153, %f152, %f145;
	sub.f32 	%f154, %f143, %f145;
	neg.f32 	%f155, %f145;
	add.f32 	%f156, %f154, %f154;
	fma.rn.f32 	%f157, %f155, %f143, %f156;
	mul.rn.f32 	%f158, %f77, %f157;
	add.f32 	%f159, %f153, %f145;
	sub.f32 	%f160, %f145, %f159;
	add.f32 	%f161, %f153, %f160;
	add.f32 	%f162, %f158, %f161;
	add.f32 	%f163, %f159, %f162;
	sub.f32 	%f164, %f159, %f163;
	add.f32 	%f165, %f162, %f164;
	mov.f32 	%f166, 0f3F317200;
	mul.rn.f32 	%f167, %f142, %f166;
	mov.f32 	%f168, 0f35BFBE8E;
	mul.rn.f32 	%f169, %f142, %f168;
	add.f32 	%f170, %f167, %f163;
	sub.f32 	%f171, %f167, %f170;
	add.f32 	%f172, %f163, %f171;
	add.f32 	%f173, %f165, %f172;
	add.f32 	%f174, %f169, %f173;
	add.f32 	%f175, %f170, %f174;
	sub.f32 	%f176, %f170, %f175;
	add.f32 	%f177, %f174, %f176;
	abs.f32 	%f16, %f13;
	setp.gt.f32	%p6, %f16, 0f77F684DF;
	mul.f32 	%f178, %f13, 0f39000000;
	selp.f32	%f179, %f178, %f13, %p6;
	mul.rn.f32 	%f180, %f179, %f175;
	neg.f32 	%f181, %f180;
	fma.rn.f32 	%f182, %f179, %f175, %f181;
	fma.rn.f32 	%f183, %f179, %f177, %f182;
	fma.rn.f32 	%f184, %f76, %f175, %f183;
	add.rn.f32 	%f185, %f180, %f184;
	neg.f32 	%f186, %f185;
	add.rn.f32 	%f187, %f180, %f186;
	add.rn.f32 	%f188, %f187, %f184;
	mov.b32 	 %r19, %f185;
	setp.eq.s32	%p7, %r19, 1118925336;
	add.s32 	%r20, %r19, -1;
	mov.b32 	 %f189, %r20;
	add.f32 	%f190, %f188, 0f37000000;
	selp.f32	%f191, %f189, %f185, %p7;
	selp.f32	%f17, %f190, %f188, %p7;
	mul.f32 	%f192, %f191, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f193, %f192;
	mov.f32 	%f194, 0fBF317200;
	fma.rn.f32 	%f195, %f193, %f194, %f191;
	mov.f32 	%f196, 0fB5BFBE8E;
	fma.rn.f32 	%f197, %f193, %f196, %f195;
	mul.f32 	%f198, %f197, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f199, %f198;
	add.f32 	%f200, %f193, 0f00000000;
	ex2.approx.f32 	%f201, %f200;
	mul.f32 	%f202, %f199, %f201;
	setp.lt.f32	%p8, %f191, 0fC2D20000;
	selp.f32	%f203, 0f00000000, %f202, %p8;
	setp.gt.f32	%p9, %f191, 0f42D20000;
	selp.f32	%f222, 0f7F800000, %f203, %p9;
	setp.eq.f32	%p10, %f222, 0f7F800000;
	@%p10 bra 	BB1_6;

	fma.rn.f32 	%f222, %f222, %f17, %f222;

BB1_6:
	setp.lt.f32	%p11, %f12, 0f00000000;
	setp.eq.f32	%p12, %f14, 0f3F800000;
	and.pred  	%p1, %p11, %p12;
	mov.b32 	 %r21, %f222;
	xor.b32  	%r22, %r21, -2147483648;
	mov.b32 	 %f204, %r22;
	selp.f32	%f224, %f204, %f222, %p1;
	setp.eq.f32	%p13, %f12, 0f00000000;
	@%p13 bra 	BB1_9;
	bra.uni 	BB1_7;

BB1_9:
	add.f32 	%f206, %f12, %f12;
	mov.b32 	 %r23, %f206;
	selp.b32	%r24, %r23, 0, %p12;
	or.b32  	%r25, %r24, 2139095040;
	setp.lt.f32	%p17, %f13, 0f00000000;
	selp.b32	%r26, %r25, %r24, %p17;
	mov.b32 	 %f224, %r26;
	bra.uni 	BB1_10;

BB1_1:
	ld.f32 	%f32, [%rd5+304];
	st.global.f32 	[prdR+128], %f32;
	ld.global.u32 	%r5, [prdR+4];
	setp.eq.s32	%p3, %r5, 0;
	@%p3 bra 	BB1_3;

	ld.global.f32 	%f33, [dataRenderer+4];
	div.rn.f32 	%f34, %f2, %f33;
	st.global.f32 	[prdR+136], %f34;
	bra.uni 	BB1_21;

BB1_7:
	setp.geu.f32	%p14, %f12, 0f00000000;
	@%p14 bra 	BB1_10;

	cvt.rzi.f32.f32	%f205, %f13;
	setp.neu.f32	%p15, %f205, %f13;
	selp.f32	%f224, 0f7FFFFFFF, %f224, %p15;

BB1_10:
	abs.f32 	%f218, %f13;
	add.f32 	%f207, %f15, %f218;
	mov.b32 	 %r27, %f207;
	setp.lt.s32	%p18, %r27, 2139095040;
	@%p18 bra 	BB1_17;

	abs.f32 	%f220, %f13;
	setp.gtu.f32	%p19, %f15, 0f7F800000;
	setp.gtu.f32	%p20, %f220, 0f7F800000;
	or.pred  	%p21, %p19, %p20;
	@%p21 bra 	BB1_16;
	bra.uni 	BB1_12;

BB1_16:
	add.f32 	%f224, %f13, %f12;
	bra.uni 	BB1_17;

BB1_3:
	ld.global.f32 	%f39, [aInset+12];
	ld.global.v2.f32 	{%f43, %f44}, [aInset+16];
	mov.u32 	%r6, 7937;
	mov.f32 	%f42, 0f00000000;
	// inline asm
	call (%f35, %f36, %f37, %f38), _rt_transform_tuple, (%r6, %f39, %f43, %f44, %f42);
	// inline asm
	mul.f32 	%f45, %f36, %f36;
	fma.rn.f32 	%f46, %f35, %f35, %f45;
	fma.rn.f32 	%f47, %f37, %f37, %f46;
	sqrt.rn.f32 	%f48, %f47;
	rcp.rn.f32 	%f49, %f48;
	mul.f32 	%f50, %f35, %f49;
	mul.f32 	%f51, %f36, %f49;
	mul.f32 	%f52, %f37, %f49;
	mul.f32 	%f53, %f51, %f51;
	fma.rn.f32 	%f54, %f50, %f50, %f53;
	fma.rn.f32 	%f55, %f52, %f52, %f54;
	sqrt.rn.f32 	%f56, %f55;
	rcp.rn.f32 	%f57, %f56;
	mul.f32 	%f58, %f50, %f57;
	st.global.f32 	[prdR+20], %f58;
	mul.f32 	%f59, %f52, %f57;
	mul.f32 	%f60, %f51, %f57;
	st.global.v2.f32 	[prdR+24], {%f60, %f59};
	ld.global.u32 	%r7, [prdR+4];
	add.s32 	%r8, %r7, 1;
	st.global.u32 	[prdR+4], %r8;
	bra.uni 	BB1_21;

BB1_12:
	abs.f32 	%f221, %f13;
	setp.eq.f32	%p22, %f221, 0f7F800000;
	@%p22 bra 	BB1_15;
	bra.uni 	BB1_13;

BB1_15:
	setp.gt.f32	%p25, %f15, 0f3F800000;
	selp.b32	%r31, 2139095040, 0, %p25;
	xor.b32  	%r32, %r31, 2139095040;
	setp.lt.f32	%p26, %f13, 0f00000000;
	selp.b32	%r33, %r32, %r31, %p26;
	mov.b32 	 %f208, %r33;
	setp.eq.f32	%p27, %f12, 0fBF800000;
	selp.f32	%f224, 0f3F800000, %f208, %p27;
	bra.uni 	BB1_17;

BB1_13:
	setp.neu.f32	%p23, %f15, 0f7F800000;
	@%p23 bra 	BB1_17;

	setp.ltu.f32	%p24, %f13, 0f00000000;
	selp.b32	%r28, 0, 2139095040, %p24;
	or.b32  	%r29, %r28, -2147483648;
	selp.b32	%r30, %r29, %r28, %p1;
	mov.b32 	 %f224, %r30;

BB1_17:
	sub.f32 	%f219, %f9, %f10;
	setp.eq.f32	%p28, %f13, 0f00000000;
	setp.eq.f32	%p29, %f12, 0f3F800000;
	or.pred  	%p30, %p29, %p28;
	selp.f32	%f209, 0f3F800000, %f224, %p30;
	fma.rn.f32 	%f210, %f219, %f209, %f10;
	min.f32 	%f211, %f210, %f9;
	max.f32 	%f212, %f10, %f211;
	setp.lt.f32	%p31, %f8, %f212;
	@%p31 bra 	BB1_19;
	bra.uni 	BB1_18;

BB1_19:
	add.u64 	%rd45, %SP, 0;
	mov.u64 	%rd44, 0;
	mov.u32 	%r42, 1;
	add.u64 	%rd43, %SP, 144;
	mov.u64 	%rd34, buf_lm_sample_F;
	cvta.global.u64 	%rd28, %rd34;
	mov.u32 	%r38, 4;
	mov.u64 	%rd29, 2;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r42, %r38, %rd29, %rd44, %rd44, %rd44);
	// inline asm
	ld.u32 	%r39, [%rd27];
	// inline asm
	call (%rd33), _rt_callable_program_from_id_64, (%r39);
	// inline asm
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	prototype_13 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd33, 
	(
	param0, 
	param1
	)
	, prototype_13;
	
	//{
	}// Callseq End 13
	bra.uni 	BB1_20;

BB1_18:
	add.u64 	%rd39, %SP, 0;
	mov.u64 	%rd38, 0;
	mov.u32 	%r41, 1;
	add.u64 	%rd37, %SP, 144;
	mov.u64 	%rd24, buf_lm_sample_F;
	cvta.global.u64 	%rd18, %rd24;
	mov.u32 	%r35, 4;
	mov.u64 	%rd19, 3;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r41, %r35, %rd19, %rd38, %rd38, %rd38);
	// inline asm
	ld.u32 	%r36, [%rd17];
	// inline asm
	call (%rd23), _rt_callable_program_from_id_64, (%r36);
	// inline asm
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd37;
	prototype_12 : .callprototype ()_ (.param .b64 _, .param .b64 _);
	call 
	%rd23, 
	(
	param0, 
	param1
	)
	, prototype_12;
	
	//{
	}// Callseq End 12

BB1_20:
	add.u64 	%rd42, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd42;
	add.s64 	%rd40, %rd41, 12;
	ld.local.f32 	%f213, [%rd40+20];
	ld.local.v2.f32 	{%f214, %f215}, [%rd40+12];
	st.global.v2.f32 	[prdR+32], {%f214, %f215};
	st.global.f32 	[prdR+40], %f213;
	ld.local.u32 	%r40, [%rd1];
	st.global.u32 	[prdR], %r40;

BB1_21:
	ret;
}


