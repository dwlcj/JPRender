//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_52
.address_size 64

	// .globl	_Z18PgmLaunch_radiancev
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.global .align 4 .b8 dRay[36];
.global .align 8 .b8 dLd[8];
.global .align 8 .b8 dLi[8];
.global .align 4 .b8 topObject[4];
.global .align 16 .b8 dataRenderer[224];
.global .align 4 .b8 GetRandomSeed[4];
.global .align 4 .b8 GetSample2[4];
.global .align 4 .b8 CosineSampleHemisphere_quicker[4];
.global .align 4 .b8 GetEnvRadiance[4];
.global .align 4 .b8 ConcentricSampleDisk[4];
.global .align 4 .b8 _ZN21rti_internal_typeinfo4dRayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLdE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo3dLiE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9topObjectE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12dataRendererE[8] = {82, 97, 121, 0, 224, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo13GetRandomSeedE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10GetSample2E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo30CosineSampleHemisphere_quickerE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo14GetEnvRadianceE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo20ConcentricSampleDiskE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 4 .b8 _ZN21rti_internal_typename4dRayE[4] = {82, 97, 121, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLdE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename3dLiE[6] = {117, 105, 110, 116, 50, 0};
.global .align 16 .b8 _ZN21rti_internal_typename9topObjectE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 16 .b8 _ZN21rti_internal_typename12dataRendererE[15] = {83, 68, 97, 116, 97, 95, 82, 101, 110, 100, 101, 114, 101, 114, 0};
.global .align 16 .b8 _ZN21rti_internal_typename13GetRandomSeedE[37] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 117, 105, 110, 116, 40, 117, 105, 110, 116, 44, 117, 105, 110, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename10GetSample2E[41] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 40, 117, 105, 110, 116, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename30CosineSampleHemisphere_quickerE[58] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 68, 105, 114, 40, 99, 111, 110, 115, 116, 32, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 50, 38, 44, 102, 108, 111, 97, 116, 44, 102, 108, 111, 97, 116, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename14GetEnvRadianceE[61] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 40, 105, 110, 116, 44, 105, 110, 116, 44, 99, 111, 110, 115, 116, 32, 78, 111, 114, 38, 44, 102, 108, 111, 97, 116, 44, 67, 111, 108, 111, 114, 52, 38, 41, 62, 0};
.global .align 16 .b8 _ZN21rti_internal_typename20ConcentricSampleDiskE[87] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 118, 111, 105, 100, 40, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 49, 44, 82, 97, 110, 100, 111, 109, 70, 108, 111, 97, 116, 49, 44, 82, 97, 110, 100, 111, 109, 86, 97, 114, 105, 97, 98, 108, 101, 49, 42, 44, 82, 97, 110, 100, 111, 109, 86, 97, 114, 105, 97, 98, 108, 101, 49, 42, 41, 62, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum4dRayE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLdE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum3dLiE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9topObjectE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12dataRendererE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum13GetRandomSeedE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum10GetSample2E = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum30CosineSampleHemisphere_quickerE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum14GetEnvRadianceE = 4920;
.global .align 4 .u32 _ZN21rti_internal_typeenum20ConcentricSampleDiskE = 4920;
.global .align 16 .b8 _ZN21rti_internal_semantic4dRayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLdE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic3dLiE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic9topObjectE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12dataRendererE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic13GetRandomSeedE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic10GetSample2E[1];
.global .align 1 .b8 _ZN21rti_internal_semantic30CosineSampleHemisphere_quickerE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic14GetEnvRadianceE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic20ConcentricSampleDiskE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4dRayE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLdE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation3dLiE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9topObjectE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12dataRendererE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation13GetRandomSeedE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10GetSample2E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation30CosineSampleHemisphere_quickerE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation14GetEnvRadianceE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation20ConcentricSampleDiskE[1];
.global .align 16 .b8 $str[64] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 83, 84, 65, 67, 75, 95, 79, 86, 69, 82, 70, 76, 79, 87, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str1[218] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 100, 105, 109, 101, 110, 115, 105, 111, 110, 97, 108, 105, 116, 121, 32, 58, 32, 37, 100, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 120, 37, 108, 108, 100, 120, 37, 108, 108, 100, 10, 32, 32, 101, 108, 101, 109, 101, 110, 116, 32, 115, 105, 122, 101, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 44, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str2[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str3[46] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 80, 82, 79, 71, 82, 65, 77, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str4[56] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str5[39] = {9, 112, 114, 111, 103, 114, 97, 109, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 112, 114, 111, 103, 114, 97, 109, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str6[40] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 84, 69, 88, 84, 85, 82, 69, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str7[33] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 48, 41, 10, 0};
.global .align 16 .b8 $str8[56] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str9[34] = {9, 116, 101, 120, 116, 117, 114, 101, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 105, 110, 118, 97, 108, 105, 100, 32, 40, 45, 49, 41, 10, 0};
.global .align 16 .b8 $str10[39] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 73, 78, 86, 65, 76, 73, 68, 10, 0};
.global .align 16 .b8 $str11[44] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 101, 113, 117, 97, 108, 32, 116, 111, 32, 82, 84, 95, 66, 85, 70, 70, 69, 82, 95, 73, 68, 95, 78, 85, 76, 76, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str12[55] = {9, 98, 117, 102, 102, 101, 114, 32, 73, 68, 32, 40, 37, 100, 41, 32, 105, 115, 32, 110, 111, 116, 32, 105, 110, 32, 116, 104, 101, 32, 118, 97, 108, 105, 100, 32, 114, 97, 110, 103, 101, 32, 111, 102, 32, 91, 49, 44, 115, 105, 122, 101, 41, 10, 0};
.global .align 16 .b8 $str13[37] = {9, 66, 117, 102, 102, 101, 114, 32, 73, 68, 32, 111, 102, 32, 97, 32, 100, 101, 108, 101, 116, 101, 100, 32, 98, 117, 102, 102, 101, 114, 32, 117, 115, 101, 100, 10, 0};
.global .align 16 .b8 $str14[145] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 68, 69, 88, 95, 79, 85, 84, 95, 79, 70, 95, 66, 79, 85, 78, 68, 83, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 98, 117, 102, 102, 101, 114, 32, 97, 100, 100, 114, 101, 115, 115, 32, 58, 32, 48, 120, 37, 108, 108, 88, 10, 32, 32, 115, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 58, 32, 37, 108, 108, 100, 10, 32, 32, 97, 99, 99, 101, 115, 115, 101, 100, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 108, 108, 100, 10, 0};
.global .align 16 .b8 $str15[179] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 86, 65, 76, 73, 68, 95, 82, 65, 89, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 111, 114, 105, 103, 105, 110, 32, 32, 32, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 100, 105, 114, 101, 99, 116, 105, 111, 110, 32, 58, 32, 37, 102, 32, 37, 102, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 121, 112, 101, 32, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 32, 32, 114, 97, 121, 32, 116, 109, 105, 110, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 32, 32, 114, 97, 121, 32, 116, 109, 97, 120, 32, 32, 32, 32, 32, 32, 58, 32, 37, 102, 10, 0};
.global .align 16 .b8 $str16[84] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 73, 78, 84, 69, 82, 78, 65, 76, 95, 69, 82, 82, 79, 82, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 32, 32, 101, 114, 114, 111, 114, 32, 105, 100, 32, 32, 32, 32, 32, 58, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str17[57] = {67, 97, 117, 103, 104, 116, 32, 82, 84, 95, 69, 88, 67, 69, 80, 84, 73, 79, 78, 95, 85, 83, 69, 82, 43, 37, 100, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};
.global .align 16 .b8 $str18[54] = {67, 97, 117, 103, 104, 116, 32, 117, 110, 107, 110, 111, 119, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 10, 32, 32, 108, 97, 117, 110, 99, 104, 32, 105, 110, 100, 101, 120, 32, 58, 32, 37, 100, 44, 32, 37, 100, 44, 32, 37, 100, 10, 0};

.visible .entry _Z18PgmLaunch_radiancev(

)
{
	.local .align 16 .b8 	__local_depot0[352];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<21>;
	.reg .b16 	%rs<13>;
	.reg .f32 	%f<773>;
	.reg .b32 	%r<148>;
	.reg .b64 	%rd<94>;


	mov.u64 	%rd93, __local_depot0;
	cvta.local.u64 	%SP, %rd93;
	add.u64 	%rd10, %SP, 168;
	cvta.to.local.u64 	%rd1, %rd10;
	add.u64 	%rd11, %SP, 180;
	cvta.to.local.u64 	%rd2, %rd11;
	add.u64 	%rd12, %SP, 192;
	cvta.to.local.u64 	%rd3, %rd12;
	ld.global.u32 	%r8, [dLd];
	ld.global.v2.u32 	{%r9, %r10}, [dLi];
	mad.lo.s32 	%r13, %r8, %r10, %r9;
	ld.global.u32 	%r14, [dataRenderer+28];
	ld.global.u32 	%r6, [GetRandomSeed];
	// inline asm
	call (%rd8), _rt_callable_program_from_id_64, (%r6);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b32 param1;
	st.param.b32	[param1+0], %r14;
	.param .b32 retval0;
	prototype_0 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _);
	call (retval0), 
	%rd8, 
	(
	param0, 
	param1
	)
	, prototype_0;
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 0
	st.local.u32 	[%rd2], %r15;
	ld.global.u32 	%r7, [GetSample2];
	// inline asm
	call (%rd9), _rt_callable_program_from_id_64, (%r7);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .align 8 .b8 retval0[8];
	prototype_1 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd9, 
	(
	param0
	)
	, prototype_1;
	ld.param.f32	%f145, [retval0+0];
	ld.param.f32	%f146, [retval0+4];
	
	//{
	}// Callseq End 1
	ld.global.v2.u32 	{%r16, %r17}, [dLi];
	cvt.rn.f32.u32	%f147, %r16;
	cvt.rn.f32.u32	%f148, %r17;
	add.f32 	%f149, %f145, %f147;
	add.f32 	%f150, %f146, %f148;
	ld.global.v2.u32 	{%r20, %r21}, [dLd];
	cvt.rn.f32.u32	%f151, %r20;
	cvt.rn.f32.u32	%f152, %r21;
	div.rn.f32 	%f153, %f149, %f151;
	div.rn.f32 	%f154, %f150, %f152;
	fma.rn.f32 	%f155, %f153, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f156, %f154, 0f40000000, 0fBF800000;
	ld.global.f32 	%f157, [dataRenderer+60];
	ld.global.v4.f32 	{%f158, %f159, %f160, %f161}, [dataRenderer+64];
	mul.f32 	%f163, %f156, %f160;
	mul.f32 	%f167, %f156, %f161;
	ld.global.v4.f32 	{%f168, %f169, %f170, %f171}, [dataRenderer+80];
	mul.f32 	%f173, %f156, %f168;
	fma.rn.f32 	%f174, %f157, %f155, %f163;
	fma.rn.f32 	%f175, %f155, %f158, %f167;
	fma.rn.f32 	%f176, %f155, %f159, %f173;
	add.f32 	%f177, %f174, %f169;
	add.f32 	%f178, %f175, %f170;
	add.f32 	%f179, %f176, %f171;
	st.local.f32 	[%rd1+8], %f179;
	st.local.f32 	[%rd1+4], %f178;
	st.local.f32 	[%rd1], %f177;
	ld.global.u8 	%rs2, [dataRenderer+176];
	setp.eq.s16	%p1, %rs2, 0;
	@%p1 bra 	BB0_2;

	ld.local.f32 	%f180, [%rd1];
	ld.local.f32 	%f181, [%rd1+4];
	mul.f32 	%f182, %f181, %f181;
	fma.rn.f32 	%f183, %f180, %f180, %f182;
	ld.local.f32 	%f184, [%rd1+8];
	fma.rn.f32 	%f185, %f184, %f184, %f183;
	sqrt.rn.f32 	%f186, %f185;
	mul.f32 	%f187, %f170, %f170;
	fma.rn.f32 	%f188, %f169, %f169, %f187;
	fma.rn.f32 	%f189, %f171, %f171, %f188;
	sqrt.rn.f32 	%f190, %f189;
	ld.global.f32 	%f191, [dataRenderer+172];
	mul.f32 	%f192, %f186, %f191;
	div.rn.f32 	%f193, %f192, %f190;
	rcp.rn.f32 	%f194, %f186;
	mul.f32 	%f195, %f194, %f180;
	mul.f32 	%f196, %f194, %f181;
	mul.f32 	%f197, %f194, %f184;
	ld.global.v4.f32 	{%f198, %f199, %f200, %f201}, [dataRenderer+48];
	st.local.f32 	[%rd1+8], %f197;
	st.local.f32 	[%rd1+4], %f196;
	st.local.f32 	[%rd1], %f195;
	fma.rn.f32 	%f203, %f193, %f195, %f198;
	fma.rn.f32 	%f205, %f193, %f196, %f199;
	fma.rn.f32 	%f207, %f193, %f197, %f200;
	ld.global.u32 	%r24, [GetSample2];
	// inline asm
	call (%rd13), _rt_callable_program_from_id_64, (%r24);
	// inline asm
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .align 8 .b8 retval0[8];
	prototype_2 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd13, 
	(
	param0
	)
	, prototype_2;
	ld.param.f32	%f208, [retval0+0];
	ld.param.f32	%f209, [retval0+4];
	
	//{
	}// Callseq End 2
	ld.global.u32 	%r25, [ConcentricSampleDisk];
	// inline asm
	call (%rd14), _rt_callable_program_from_id_64, (%r25);
	// inline asm
	add.u64 	%rd16, %SP, 336;
	add.s64 	%rd17, %rd16, 4;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f208;
	.param .b32 param1;
	st.param.f32	[param1+0], %f209;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd16;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	prototype_3 : .callprototype ()_ (.param .b32 _, .param .b32 _, .param .b64 _, .param .b64 _);
	call 
	%rd14, 
	(
	param0, 
	param1, 
	param2, 
	param3
	)
	, prototype_3;
	
	//{
	}// Callseq End 3
	cvta.to.local.u64 	%rd18, %rd16;
	ld.global.f32 	%f210, [dataRenderer+168];
	ld.local.v2.f32 	{%f211, %f212}, [%rd18];
	mul.f32 	%f214, %f210, %f211;
	mul.f32 	%f216, %f210, %f212;
	ld.global.v4.f32 	{%f217, %f218, %f219, %f220}, [dataRenderer+48];
	ld.global.v4.f32 	{%f225, %f226, %f227, %f228}, [dataRenderer+64];
	mul.f32 	%f230, %f216, %f227;
	mul.f32 	%f234, %f216, %f228;
	ld.global.f32 	%f235, [dataRenderer+80];
	mul.f32 	%f236, %f216, %f235;
	fma.rn.f32 	%f237, %f214, %f220, %f230;
	fma.rn.f32 	%f238, %f214, %f225, %f234;
	fma.rn.f32 	%f239, %f214, %f226, %f236;
	add.f32 	%f730, %f239, %f219;
	add.f32 	%f731, %f238, %f218;
	add.f32 	%f732, %f237, %f217;
	st.local.v2.f32 	[%rd18], {%f214, %f216};
	st.local.v2.f32 	[%rd3+8], {%f732, %f731};
	st.local.f32 	[%rd3+16], %f730;
	sub.f32 	%f240, %f203, %f732;
	ld.local.f32 	%f241, [%rd3+12];
	sub.f32 	%f242, %f205, %f241;
	ld.local.f32 	%f243, [%rd3+16];
	sub.f32 	%f244, %f207, %f243;
	st.local.f32 	[%rd1], %f240;
	st.local.f32 	[%rd1+8], %f244;
	st.local.f32 	[%rd1+4], %f242;
	bra.uni 	BB0_3;

BB0_2:
	ld.global.v4.f32 	{%f732, %f731, %f730, %f248}, [dataRenderer+48];
	st.local.v2.f32 	[%rd3+8], {%f732, %f731};
	st.local.f32 	[%rd3+16], %f730;

BB0_3:
	add.u64 	%rd19, %SP, 160;
	cvta.to.local.u64 	%rd4, %rd19;
	ld.local.f32 	%f257, [%rd1];
	ld.local.f32 	%f258, [%rd1+4];
	mul.f32 	%f259, %f258, %f258;
	fma.rn.f32 	%f260, %f257, %f257, %f259;
	ld.local.f32 	%f261, [%rd1+8];
	fma.rn.f32 	%f262, %f261, %f261, %f260;
	sqrt.rn.f32 	%f263, %f262;
	rcp.rn.f32 	%f264, %f263;
	mul.f32 	%f729, %f264, %f257;
	mul.f32 	%f728, %f264, %f258;
	mul.f32 	%f727, %f264, %f261;
	st.local.f32 	[%rd1+8], %f727;
	st.local.f32 	[%rd1+4], %f728;
	st.local.f32 	[%rd1], %f729;
	mov.u16 	%rs4, 0;
	st.local.u8 	[%rd3+124], %rs4;
	mov.u32 	%r27, 0;
	st.local.u32 	[%rd3+4], %r27;
	mov.u32 	%r28, 1092616192;
	st.local.u32 	[%rd3+80], %r28;
	mov.u32 	%r1, -1;
	st.local.u32 	[%rd3+112], %r1;
	ld.local.u32 	%r29, [%rd2];
	st.local.u32 	[%rd3], %r29;
	ld.global.v2.f32 	{%f265, %f266}, [dataRenderer+8];
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd20;
	add.u64 	%rd21, %SP, 16;
	cvta.to.local.u64 	%rd6, %rd21;
	mov.f32 	%f724, 0f00000000;
	mov.f32 	%f21, 0f3F800000;
	mov.u16 	%rs12, 1;
	mov.f32 	%f22, %f21;
	mov.f32 	%f23, %f21;
	mov.f32 	%f24, %f21;
	mov.f32 	%f723, %f21;
	mov.f32 	%f725, %f724;
	mov.f32 	%f726, %f724;

BB0_4:
	ld.global.u32 	%r30, [topObject];
	mov.u32 	%r31, 1;
	mov.u32 	%r32, 144;
	// inline asm
	call _rt_trace_64, (%r30, %f732, %f731, %f730, %f729, %f728, %f727, %r31, %f265, %f266, %rd12, %r32);
	// inline asm
	ld.local.v4.f32 	{%f275, %f276, %f277, %f278}, [%rd3+48];
	mul.f32 	%f279, %f23, %f276;
	fma.rn.f32 	%f280, %f24, %f275, %f279;
	fma.rn.f32 	%f281, %f22, %f277, %f280;
	fma.rn.f32 	%f282, %f21, %f278, %f281;
	setp.le.f32	%p2, %f282, 0f358637BD;
	@%p2 bra 	BB0_17;

	mul.f32 	%f283, %f276, 0f3F170A3D;
	fma.rn.f32 	%f284, %f275, 0f3E99999A, %f283;
	fma.rn.f32 	%f285, %f277, 0f3DE147AE, %f284;
	fma.rn.f32 	%f286, %f278, 0f00000000, %f285;
	add.f32 	%f287, %f286, 0f3F800000;
	mov.f32 	%f288, 0f40000000;
	div.rn.f32 	%f289, %f288, %f287;
	mul.f32 	%f743, %f289, %f275;
	mul.f32 	%f742, %f289, %f276;
	mul.f32 	%f740, %f289, %f278;
	mul.f32 	%f741, %f289, %f277;
	st.local.v4.f32 	[%rd3+48], {%f743, %f742, %f741, %f740};
	ld.local.v4.f32 	{%f290, %f291, %f292, %f293}, [%rd3+96];
	mul.f32 	%f295, %f743, %f290;
	mul.f32 	%f297, %f742, %f291;
	mul.f32 	%f299, %f741, %f292;
	mul.f32 	%f301, %f740, %f293;
	fma.rn.f32 	%f726, %f24, %f295, %f726;
	fma.rn.f32 	%f725, %f23, %f297, %f725;
	fma.rn.f32 	%f724, %f22, %f299, %f724;
	fma.rn.f32 	%f723, %f21, %f301, %f723;
	and.b16  	%rs5, %rs12, 255;
	setp.eq.s16	%p3, %rs5, 0;
	@%p3 bra 	BB0_12;
	bra.uni 	BB0_6;

BB0_12:
	setp.ne.s32	%p7, %r1, 3;
	@%p7 bra 	BB0_14;
	bra.uni 	BB0_13;

BB0_6:
	ld.global.u8 	%rs6, [dataRenderer+178];
	setp.eq.s16	%p4, %rs6, 0;
	@%p4 bra 	BB0_13;

	ld.local.f32 	%f47, [%rd3+20];
	ld.local.v2.f32 	{%f305, %f306}, [%rd3+24];
	mul.f32 	%f307, %f305, %f305;
	fma.rn.f32 	%f308, %f47, %f47, %f307;
	fma.rn.f32 	%f309, %f306, %f306, %f308;
	sqrt.rn.f32 	%f310, %f309;
	mov.f32 	%f739, 0f3F800000;
	mov.f32 	%f733, 0f00000000;
	setp.leu.f32	%p5, %f310, 0f00000000;
	mov.f32 	%f734, %f733;
	mov.f32 	%f735, %f739;
	@%p5 bra 	BB0_9;

	ld.global.v4.f32 	{%f311, %f312, %f313, %f314}, [dataRenderer+96];
	fma.rn.f32 	%f316, %f311, %f47, 0f00000000;
	fma.rn.f32 	%f318, %f312, %f305, %f316;
	fma.rn.f32 	%f320, %f313, %f306, %f318;
	fma.rn.f32 	%f322, %f314, %f47, 0f00000000;
	ld.global.v4.f32 	{%f323, %f324, %f325, %f326}, [dataRenderer+112];
	fma.rn.f32 	%f328, %f323, %f305, %f322;
	fma.rn.f32 	%f330, %f324, %f306, %f328;
	fma.rn.f32 	%f332, %f325, %f47, 0f00000000;
	fma.rn.f32 	%f334, %f326, %f305, %f332;
	ld.global.f32 	%f335, [dataRenderer+128];
	fma.rn.f32 	%f336, %f335, %f306, %f334;
	mul.f32 	%f337, %f330, %f330;
	fma.rn.f32 	%f338, %f320, %f320, %f337;
	fma.rn.f32 	%f339, %f336, %f336, %f338;
	sqrt.rn.f32 	%f340, %f339;
	rcp.rn.f32 	%f341, %f340;
	mul.f32 	%f733, %f320, %f341;
	mul.f32 	%f734, %f330, %f341;
	mul.f32 	%f735, %f336, %f341;

BB0_9:
	ld.global.u32 	%r2, [dataRenderer+28];
	setp.lt.u32	%p6, %r2, 2;
	@%p6 bra 	BB0_11;

	cvt.rn.f32.u32	%f343, %r2;
	rcp.rn.f32 	%f344, %f343;
	ld.global.u32 	%r33, [dataRenderer+192];
	ld.global.v2.u32 	{%r39, %r40}, [dLi];
	cvt.u64.u32	%rd24, %r39;
	cvt.u64.u32	%rd25, %r40;
	mov.u32 	%r37, 2;
	mov.u32 	%r38, 16;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd23), _rt_buffer_get_id_64, (%r33, %r37, %r38, %rd24, %rd25, %rd32, %rd32);
	// inline asm
	ld.v4.f32 	{%f345, %f346, %f347, %f348}, [%rd23];
	sub.f32 	%f353, %f733, %f345;
	sub.f32 	%f354, %f734, %f346;
	sub.f32 	%f355, %f735, %f347;
	mov.f32 	%f356, 0f3F800000;
	sub.f32 	%f357, %f356, %f348;
	fma.rn.f32 	%f733, %f344, %f353, %f345;
	fma.rn.f32 	%f734, %f344, %f354, %f346;
	fma.rn.f32 	%f735, %f344, %f355, %f347;
	fma.rn.f32 	%f739, %f344, %f357, %f348;
	ld.global.u32 	%r36, [dataRenderer+196];
	ld.global.v2.u32 	{%r43, %r44}, [dLi];
	cvt.u64.u32	%rd29, %r43;
	cvt.u64.u32	%rd30, %r44;
	// inline asm
	call (%rd28), _rt_buffer_get_id_64, (%r36, %r37, %r38, %rd29, %rd30, %rd32, %rd32);
	// inline asm
	ld.v4.f32 	{%f358, %f359, %f360, %f361}, [%rd28];
	ld.local.v4.f32 	{%f366, %f367, %f368, %f369}, [%rd3+64];
	sub.f32 	%f371, %f366, %f358;
	sub.f32 	%f373, %f367, %f359;
	sub.f32 	%f375, %f368, %f360;
	sub.f32 	%f377, %f369, %f361;
	fma.rn.f32 	%f378, %f344, %f377, %f361;
	fma.rn.f32 	%f379, %f344, %f375, %f360;
	fma.rn.f32 	%f380, %f344, %f373, %f359;
	fma.rn.f32 	%f381, %f344, %f371, %f358;
	st.local.v4.f32 	[%rd3+64], {%f381, %f380, %f379, %f378};

BB0_11:
	ld.global.u32 	%r47, [dataRenderer+192];
	ld.global.v2.u32 	{%r53, %r54}, [dLi];
	cvt.u64.u32	%rd34, %r53;
	cvt.u64.u32	%rd35, %r54;
	mov.u32 	%r51, 2;
	mov.u32 	%r52, 16;
	mov.u64 	%rd42, 0;
	// inline asm
	call (%rd33), _rt_buffer_get_id_64, (%r47, %r51, %r52, %rd34, %rd35, %rd42, %rd42);
	// inline asm
	st.v4.f32 	[%rd33], {%f733, %f734, %f735, %f739};
	ld.global.u32 	%r50, [dataRenderer+196];
	ld.global.v2.u32 	{%r57, %r58}, [dLi];
	cvt.u64.u32	%rd39, %r57;
	cvt.u64.u32	%rd40, %r58;
	// inline asm
	call (%rd38), _rt_buffer_get_id_64, (%r50, %r51, %r52, %rd39, %rd40, %rd42, %rd42);
	// inline asm
	ld.local.v4.f32 	{%f382, %f383, %f384, %f385}, [%rd3+64];
	ld.local.v4.f32 	{%f743, %f742, %f741, %f740}, [%rd3+48];
	st.v4.f32 	[%rd38], {%f382, %f383, %f384, %f385};

BB0_13:
	mul.f32 	%f24, %f24, %f743;
	mul.f32 	%f23, %f23, %f742;
	mul.f32 	%f22, %f22, %f741;
	mul.f32 	%f21, %f21, %f740;

BB0_14:
	ld.local.u8 	%rs7, [%rd3+124];
	setp.ne.s16	%p8, %rs7, 0;
	@%p8 bra 	BB0_17;

	ld.local.f32 	%f394, [%rd3+116];
	mul.f32 	%f395, %f24, %f394;
	mul.f32 	%f396, %f23, %f394;
	mul.f32 	%f397, %f22, %f394;
	mul.f32 	%f398, %f21, %f394;
	ld.local.f32 	%f399, [%rd3+20];
	ld.local.v4.f32 	{%f400, %f401, %f402, %f403}, [%rd3+32];
	ld.local.v2.f32 	{%f405, %f406}, [%rd3+24];
	mul.f32 	%f408, %f405, %f401;
	fma.rn.f32 	%f410, %f399, %f400, %f408;
	fma.rn.f32 	%f413, %f406, %f402, %f410;
	abs.f32 	%f414, %f413;
	mul.f32 	%f415, %f395, %f414;
	mul.f32 	%f416, %f396, %f414;
	mul.f32 	%f417, %f397, %f414;
	mul.f32 	%f418, %f398, %f414;
	ld.local.f32 	%f419, [%rd3+120];
	rcp.rn.f32 	%f420, %f419;
	mul.f32 	%f24, %f415, %f420;
	mul.f32 	%f23, %f416, %f420;
	mul.f32 	%f22, %f417, %f420;
	mul.f32 	%f21, %f418, %f420;
	mul.f32 	%f421, %f23, 0f3F170A3D;
	fma.rn.f32 	%f422, %f24, 0f3E99999A, %f421;
	fma.rn.f32 	%f423, %f22, 0f3DE147AE, %f422;
	fma.rn.f32 	%f424, %f21, 0f00000000, %f423;
	ld.global.f32 	%f425, [dataRenderer+180];
	setp.lt.f32	%p9, %f424, %f425;
	@%p9 bra 	BB0_17;

	ld.local.v4.f32 	{%f729, %f728, %f727, %f429}, [%rd3+32];
	ld.local.f32 	%f730, [%rd3+16];
	ld.local.v2.f32 	{%f732, %f731}, [%rd3+8];
	ld.local.u32 	%r1, [%rd3+112];
	ld.local.u32 	%r61, [%rd3+4];
	st.local.f32 	[%rd1+8], %f727;
	st.local.f32 	[%rd1+4], %f728;
	st.local.f32 	[%rd1], %f729;
	add.s32 	%r62, %r61, 1;
	st.local.u32 	[%rd3+4], %r62;
	ld.global.u32 	%r63, [dataRenderer+164];
	setp.le.u32	%p10, %r62, %r63;
	mov.u16 	%rs12, %rs4;
	@%p10 bra 	BB0_4;

BB0_17:
	ld.global.u32 	%r64, [dataRenderer+164];
	ld.local.u32 	%r65, [%rd3+4];
	setp.le.u32	%p11, %r65, %r64;
	@%p11 bra 	BB0_19;

	add.u64 	%rd90, %SP, 0;
	add.u64 	%rd89, %SP, 168;
	ld.global.u32 	%r67, [dataRenderer+188];
	ld.global.u32 	%r68, [dataRenderer+160];
	ld.local.f32 	%f432, [%rd3+80];
	ld.global.u32 	%r66, [GetEnvRadiance];
	// inline asm
	call (%rd43), _rt_callable_program_from_id_64, (%r66);
	// inline asm
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r67;
	.param .b32 param1;
	st.param.b32	[param1+0], %r68;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd89;
	.param .b32 param3;
	st.param.f32	[param3+0], %f432;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	.param .b32 retval0;
	prototype_4 : .callprototype (.param .b32 _) _ (.param .b32 _, .param .b32 _, .param .b64 _, .param .b32 _, .param .b64 _);
	call (retval0), 
	%rd43, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	)
	, prototype_4;
	ld.param.f32	%f433, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.local.v4.f32 	{%f434, %f435, %f436, %f437}, [%rd5];
	mul.f32 	%f439, %f433, %f434;
	mul.f32 	%f441, %f433, %f435;
	mul.f32 	%f443, %f433, %f436;
	mul.f32 	%f445, %f433, %f437;
	fma.rn.f32 	%f726, %f24, %f439, %f726;
	fma.rn.f32 	%f725, %f23, %f441, %f725;
	fma.rn.f32 	%f724, %f22, %f443, %f724;
	fma.rn.f32 	%f723, %f21, %f445, %f723;

BB0_19:
	ld.global.u32 	%r69, [dataRenderer+28];
	cvt.rn.f32.u32	%f446, %r69;
	rcp.rn.f32 	%f110, %f446;
	setp.lt.u32	%p12, %r69, 2;
	@%p12 bra 	BB0_21;

	ld.global.u32 	%r70, [dataRenderer+32];
	ld.global.v2.u32 	{%r73, %r74}, [dLi];
	cvt.u64.u32	%rd47, %r73;
	cvt.u64.u32	%rd48, %r74;
	mov.u32 	%r71, 2;
	mov.u32 	%r72, 16;
	mov.u64 	%rd50, 0;
	// inline asm
	call (%rd46), _rt_buffer_get_id_64, (%r70, %r71, %r72, %rd47, %rd48, %rd50, %rd50);
	// inline asm
	ld.v4.f32 	{%f447, %f448, %f449, %f450}, [%rd46];
	sub.f32 	%f455, %f726, %f447;
	sub.f32 	%f456, %f725, %f448;
	sub.f32 	%f457, %f724, %f449;
	sub.f32 	%f458, %f723, %f450;
	fma.rn.f32 	%f726, %f110, %f455, %f447;
	fma.rn.f32 	%f725, %f110, %f456, %f448;
	fma.rn.f32 	%f724, %f110, %f457, %f449;
	fma.rn.f32 	%f723, %f110, %f458, %f450;

BB0_21:
	ld.global.u32 	%r77, [dataRenderer+32];
	ld.global.v2.u32 	{%r80, %r81}, [dLi];
	cvt.u64.u32	%rd52, %r80;
	cvt.u64.u32	%rd53, %r81;
	mov.u32 	%r78, 2;
	mov.u32 	%r79, 16;
	mov.u64 	%rd55, 0;
	// inline asm
	call (%rd51), _rt_buffer_get_id_64, (%r77, %r78, %r79, %rd52, %rd53, %rd55, %rd55);
	// inline asm
	st.v4.f32 	[%rd51], {%f726, %f725, %f724, %f723};
	ld.global.u8 	%rs9, [dataRenderer+44];
	setp.eq.s16	%p13, %rs9, 0;
	mov.f32 	%f772, 0f3F800000;
	@%p13 bra 	BB0_30;

	add.u64 	%rd92, %SP, 180;
	cvta.to.local.u64 	%rd91, %rd92;
	mov.u32 	%r143, 0;
	add.u64 	%rd87, %SP, 180;
	ld.global.u32 	%r84, [GetSample2];
	// inline asm
	call (%rd56), _rt_callable_program_from_id_64, (%r84);
	// inline asm
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .align 8 .b8 retval0[8];
	prototype_5 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd56, 
	(
	param0
	)
	, prototype_5;
	ld.param.f32	%f460, [retval0+0];
	ld.param.f32	%f461, [retval0+4];
	
	//{
	}// Callseq End 5
	ld.global.v2.u32 	{%r86, %r87}, [dLi];
	cvt.rn.f32.u32	%f462, %r86;
	cvt.rn.f32.u32	%f463, %r87;
	add.f32 	%f464, %f460, %f462;
	add.f32 	%f465, %f461, %f463;
	ld.global.v2.u32 	{%r90, %r91}, [dLd];
	cvt.rn.f32.u32	%f466, %r90;
	cvt.rn.f32.u32	%f467, %r91;
	div.rn.f32 	%f468, %f464, %f466;
	div.rn.f32 	%f469, %f465, %f467;
	fma.rn.f32 	%f470, %f468, 0f40000000, 0fBF800000;
	fma.rn.f32 	%f471, %f469, 0f40000000, 0fBF800000;
	neg.f32 	%f472, %f471;
	ld.global.v2.f32 	{%f473, %f474}, [dataRenderer+8];
	add.s64 	%rd7, %rd6, 4;
	ld.global.v4.f32 	{%f767, %f768, %f769, %f478}, [dataRenderer+48];
	ld.global.v4.f32 	{%f479, %f480, %f481, %f482}, [dataRenderer+64];
	ld.global.v4.f32 	{%f483, %f484, %f485, %f486}, [dataRenderer+80];
	st.local.u32 	[%rd6+4], %r143;
	st.local.v2.f32 	[%rd6+8], {%f767, %f768};
	st.local.f32 	[%rd6+16], %f769;
	mul.f32 	%f489, %f472, %f481;
	mul.f32 	%f493, %f472, %f482;
	mul.f32 	%f495, %f472, %f483;
	fma.rn.f32 	%f496, %f470, %f478, %f489;
	fma.rn.f32 	%f497, %f470, %f479, %f493;
	fma.rn.f32 	%f498, %f470, %f480, %f495;
	add.f32 	%f766, %f498, %f486;
	add.f32 	%f765, %f497, %f485;
	add.f32 	%f764, %f496, %f484;
	st.local.v2.f32 	[%rd6+32], {%f764, %f765};
	st.local.f32 	[%rd6+40], %f766;
	ld.local.u32 	%r95, [%rd91];
	st.local.u32 	[%rd6], %r95;
	mov.u32 	%r85, 4;
	mov.u32 	%r147, %r85;
	bra.uni 	BB0_23;

BB0_31:
	ld.local.f32 	%f769, [%rd7+12];
	ld.local.v2.f32 	{%f767, %f768}, [%rd7+4];
	ld.local.v4.f32 	{%f764, %f765, %f766, %f711}, [%rd7+28];

BB0_23:
	mov.u32 	%r144, 144;
	st.local.u8 	[%rd7+128], %rs4;
	ld.global.u32 	%r96, [topObject];
	// inline asm
	call _rt_trace_64, (%r96, %f767, %f768, %f769, %f764, %f765, %f766, %r85, %f473, %f474, %rd21, %r144);
	// inline asm
	add.s32 	%r147, %r147, -1;
	setp.gt.s32	%p14, %r147, 0;
	ld.local.u8 	%rs11, [%rd7+128];
	setp.ne.s16	%p15, %rs11, 0;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	BB0_31;

	ld.local.u32 	%r99, [%rd7];
	setp.eq.s32	%p17, %r99, 0;
	mov.f32 	%f772, 0f3F800000;
	@%p17 bra 	BB0_27;

	ld.local.f32 	%f133, [%rd7+124];
	setp.leu.f32	%p18, %f133, 0f358637BD;
	@%p18 bra 	BB0_27;

	add.u64 	%rd88, %SP, 160;
	mov.u32 	%r145, 144;
	ld.local.v2.f32 	{%f544, %f545}, [%rd7+4];
	ld.global.v2.f32 	{%f546, %f547}, [dataRenderer];
	ld.local.v2.f32 	{%f548, %f549}, [%rd7+12];
	ld.local.v2.f32 	{%f550, %f551}, [%rd7+20];
	abs.f32 	%f555, %f549;
	abs.f32 	%f556, %f551;
	setp.gt.f32	%p19, %f555, %f556;
	neg.f32 	%f557, %f550;
	neg.f32 	%f558, %f551;
	selp.f32	%f559, %f557, 0f00000000, %p19;
	selp.f32	%f560, %f549, %f558, %p19;
	selp.f32	%f561, 0f00000000, %f550, %p19;
	mul.f32 	%f562, %f560, %f560;
	fma.rn.f32 	%f563, %f559, %f559, %f562;
	fma.rn.f32 	%f564, %f561, %f561, %f563;
	sqrt.rn.f32 	%f565, %f564;
	rcp.rn.f32 	%f566, %f565;
	mul.f32 	%f567, %f559, %f566;
	mul.f32 	%f568, %f560, %f566;
	mul.f32 	%f569, %f561, %f566;
	mul.f32 	%f570, %f551, %f568;
	mul.f32 	%f571, %f550, %f569;
	sub.f32 	%f572, %f570, %f571;
	mul.f32 	%f573, %f549, %f569;
	mul.f32 	%f574, %f551, %f567;
	sub.f32 	%f575, %f573, %f574;
	mul.f32 	%f576, %f550, %f567;
	mul.f32 	%f577, %f549, %f568;
	sub.f32 	%f578, %f576, %f577;
	mov.u32 	%r120, 1065353216;
	st.local.u32 	[%rd7+132], %r120;
	st.local.u32 	[%rd7+124], %r120;
	ld.global.u32 	%r100, [GetSample2];
	// inline asm
	call (%rd59), _rt_callable_program_from_id_64, (%r100);
	// inline asm
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .align 8 .b8 retval0[8];
	prototype_6 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd59, 
	(
	param0
	)
	, prototype_6;
	ld.param.f32	%f579, [retval0+0];
	ld.param.f32	%f580, [retval0+4];
	
	//{
	}// Callseq End 6
	st.local.v2.f32 	[%rd4], {%f579, %f580};
	ld.global.u32 	%r101, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd60), _rt_callable_program_from_id_64, (%r101);
	// inline asm
	mov.f32 	%f581, 0f3F800000;
	mov.f32 	%f582, 0f40800000;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 param1;
	st.param.f32	[param1+0], %f581;
	.param .b32 param2;
	st.param.f32	[param2+0], %f582;
	.param .align 4 .b8 retval0[12];
	prototype_7 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd60, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_7;
	ld.param.f32	%f583, [retval0+0];
	ld.param.f32	%f584, [retval0+4];
	ld.param.f32	%f585, [retval0+8];
	
	//{
	}// Callseq End 7
	mul.f32 	%f586, %f567, %f584;
	mul.f32 	%f587, %f568, %f584;
	mul.f32 	%f588, %f569, %f584;
	fma.rn.f32 	%f589, %f572, %f583, %f586;
	fma.rn.f32 	%f590, %f575, %f583, %f587;
	fma.rn.f32 	%f591, %f578, %f583, %f588;
	fma.rn.f32 	%f592, %f549, %f585, %f589;
	fma.rn.f32 	%f593, %f550, %f585, %f590;
	fma.rn.f32 	%f594, %f551, %f585, %f591;
	mul.f32 	%f595, %f593, %f593;
	fma.rn.f32 	%f596, %f592, %f592, %f595;
	fma.rn.f32 	%f597, %f594, %f594, %f596;
	sqrt.rn.f32 	%f598, %f597;
	rcp.rn.f32 	%f599, %f598;
	mul.f32 	%f515, %f599, %f592;
	mul.f32 	%f516, %f599, %f593;
	mul.f32 	%f517, %f599, %f594;
	ld.global.u32 	%r102, [topObject];
	mov.u32 	%r118, 4;
	// inline asm
	call _rt_trace_64, (%r102, %f544, %f545, %f548, %f515, %f516, %f517, %r118, %f546, %f547, %rd21, %r145);
	// inline asm
	ld.local.v4.f32 	{%f600, %f601, %f602, %f603}, [%rd7+124];
	mul.f32 	%f605, %f133, %f600;
	div.rn.f32 	%f607, %f602, %f605;
	min.f32 	%f608, %f607, %f581;
	mov.f32 	%f609, 0f00000000;
	max.f32 	%f610, %f609, %f608;
	add.f32 	%f611, %f610, 0f00000000;
	st.local.u32 	[%rd7+132], %r120;
	st.local.u32 	[%rd7+124], %r120;
	ld.global.u32 	%r105, [GetSample2];
	// inline asm
	call (%rd62), _rt_callable_program_from_id_64, (%r105);
	// inline asm
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .align 8 .b8 retval0[8];
	prototype_8 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd62, 
	(
	param0
	)
	, prototype_8;
	ld.param.f32	%f612, [retval0+0];
	ld.param.f32	%f613, [retval0+4];
	
	//{
	}// Callseq End 8
	st.local.v2.f32 	[%rd4], {%f612, %f613};
	ld.global.u32 	%r106, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd63), _rt_callable_program_from_id_64, (%r106);
	// inline asm
	mov.f32 	%f614, 0f40000000;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 param1;
	st.param.f32	[param1+0], %f614;
	.param .b32 param2;
	st.param.f32	[param2+0], %f582;
	.param .align 4 .b8 retval0[12];
	prototype_9 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd63, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_9;
	ld.param.f32	%f615, [retval0+0];
	ld.param.f32	%f616, [retval0+4];
	ld.param.f32	%f617, [retval0+8];
	
	//{
	}// Callseq End 9
	mul.f32 	%f618, %f567, %f616;
	mul.f32 	%f619, %f568, %f616;
	mul.f32 	%f620, %f569, %f616;
	fma.rn.f32 	%f621, %f572, %f615, %f618;
	fma.rn.f32 	%f622, %f575, %f615, %f619;
	fma.rn.f32 	%f623, %f578, %f615, %f620;
	fma.rn.f32 	%f624, %f549, %f617, %f621;
	fma.rn.f32 	%f625, %f550, %f617, %f622;
	fma.rn.f32 	%f626, %f551, %f617, %f623;
	mul.f32 	%f627, %f625, %f625;
	fma.rn.f32 	%f628, %f624, %f624, %f627;
	fma.rn.f32 	%f629, %f626, %f626, %f628;
	sqrt.rn.f32 	%f630, %f629;
	rcp.rn.f32 	%f631, %f630;
	mul.f32 	%f523, %f631, %f624;
	mul.f32 	%f524, %f631, %f625;
	mul.f32 	%f525, %f631, %f626;
	ld.global.u32 	%r107, [topObject];
	// inline asm
	call _rt_trace_64, (%r107, %f544, %f545, %f548, %f523, %f524, %f525, %r118, %f546, %f547, %rd21, %r145);
	// inline asm
	ld.local.v4.f32 	{%f632, %f633, %f634, %f635}, [%rd7+124];
	mul.f32 	%f637, %f133, %f632;
	div.rn.f32 	%f639, %f634, %f637;
	min.f32 	%f640, %f639, %f581;
	max.f32 	%f641, %f609, %f640;
	add.f32 	%f642, %f611, %f641;
	st.local.u32 	[%rd7+132], %r120;
	st.local.u32 	[%rd7+124], %r120;
	ld.global.u32 	%r110, [GetSample2];
	// inline asm
	call (%rd65), _rt_callable_program_from_id_64, (%r110);
	// inline asm
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .align 8 .b8 retval0[8];
	prototype_10 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd65, 
	(
	param0
	)
	, prototype_10;
	ld.param.f32	%f643, [retval0+0];
	ld.param.f32	%f644, [retval0+4];
	
	//{
	}// Callseq End 10
	st.local.v2.f32 	[%rd4], {%f643, %f644};
	ld.global.u32 	%r111, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd66), _rt_callable_program_from_id_64, (%r111);
	// inline asm
	mov.f32 	%f645, 0f40400000;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 param1;
	st.param.f32	[param1+0], %f645;
	.param .b32 param2;
	st.param.f32	[param2+0], %f582;
	.param .align 4 .b8 retval0[12];
	prototype_11 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd66, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_11;
	ld.param.f32	%f646, [retval0+0];
	ld.param.f32	%f647, [retval0+4];
	ld.param.f32	%f648, [retval0+8];
	
	//{
	}// Callseq End 11
	mul.f32 	%f649, %f567, %f647;
	mul.f32 	%f650, %f568, %f647;
	mul.f32 	%f651, %f569, %f647;
	fma.rn.f32 	%f652, %f572, %f646, %f649;
	fma.rn.f32 	%f653, %f575, %f646, %f650;
	fma.rn.f32 	%f654, %f578, %f646, %f651;
	fma.rn.f32 	%f655, %f549, %f648, %f652;
	fma.rn.f32 	%f656, %f550, %f648, %f653;
	fma.rn.f32 	%f657, %f551, %f648, %f654;
	mul.f32 	%f658, %f656, %f656;
	fma.rn.f32 	%f659, %f655, %f655, %f658;
	fma.rn.f32 	%f660, %f657, %f657, %f659;
	sqrt.rn.f32 	%f661, %f660;
	rcp.rn.f32 	%f662, %f661;
	mul.f32 	%f531, %f662, %f655;
	mul.f32 	%f532, %f662, %f656;
	mul.f32 	%f533, %f662, %f657;
	ld.global.u32 	%r112, [topObject];
	// inline asm
	call _rt_trace_64, (%r112, %f544, %f545, %f548, %f531, %f532, %f533, %r118, %f546, %f547, %rd21, %r145);
	// inline asm
	ld.local.v4.f32 	{%f663, %f664, %f665, %f666}, [%rd7+124];
	mul.f32 	%f668, %f133, %f663;
	div.rn.f32 	%f670, %f665, %f668;
	min.f32 	%f671, %f670, %f581;
	max.f32 	%f672, %f609, %f671;
	add.f32 	%f673, %f642, %f672;
	st.local.u32 	[%rd7+132], %r120;
	st.local.u32 	[%rd7+124], %r120;
	ld.global.u32 	%r115, [GetSample2];
	// inline asm
	call (%rd68), _rt_callable_program_from_id_64, (%r115);
	// inline asm
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .align 8 .b8 retval0[8];
	prototype_12 : .callprototype (.param .align 8 .b8 _[8]) _ (.param .b64 _);
	call (retval0), 
	%rd68, 
	(
	param0
	)
	, prototype_12;
	ld.param.f32	%f674, [retval0+0];
	ld.param.f32	%f675, [retval0+4];
	
	//{
	}// Callseq End 12
	st.local.v2.f32 	[%rd4], {%f674, %f675};
	ld.global.u32 	%r116, [CosineSampleHemisphere_quicker];
	// inline asm
	call (%rd69), _rt_callable_program_from_id_64, (%r116);
	// inline asm
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b32 param1;
	st.param.f32	[param1+0], %f582;
	.param .b32 param2;
	st.param.f32	[param2+0], %f582;
	.param .align 4 .b8 retval0[12];
	prototype_13 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b64 _, .param .b32 _, .param .b32 _);
	call (retval0), 
	%rd69, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_13;
	ld.param.f32	%f676, [retval0+0];
	ld.param.f32	%f677, [retval0+4];
	ld.param.f32	%f678, [retval0+8];
	
	//{
	}// Callseq End 13
	mul.f32 	%f679, %f567, %f677;
	mul.f32 	%f680, %f568, %f677;
	mul.f32 	%f681, %f569, %f677;
	fma.rn.f32 	%f682, %f572, %f676, %f679;
	fma.rn.f32 	%f683, %f575, %f676, %f680;
	fma.rn.f32 	%f684, %f578, %f676, %f681;
	fma.rn.f32 	%f685, %f549, %f678, %f682;
	fma.rn.f32 	%f686, %f550, %f678, %f683;
	fma.rn.f32 	%f687, %f551, %f678, %f684;
	mul.f32 	%f688, %f686, %f686;
	fma.rn.f32 	%f689, %f685, %f685, %f688;
	fma.rn.f32 	%f690, %f687, %f687, %f689;
	sqrt.rn.f32 	%f691, %f690;
	rcp.rn.f32 	%f692, %f691;
	mul.f32 	%f539, %f692, %f685;
	mul.f32 	%f540, %f692, %f686;
	mul.f32 	%f541, %f692, %f687;
	ld.global.u32 	%r117, [topObject];
	// inline asm
	call _rt_trace_64, (%r117, %f544, %f545, %f548, %f539, %f540, %f541, %r118, %f546, %f547, %rd21, %r145);
	// inline asm
	ld.local.v4.f32 	{%f693, %f694, %f695, %f696}, [%rd7+124];
	mul.f32 	%f698, %f133, %f693;
	div.rn.f32 	%f700, %f695, %f698;
	min.f32 	%f701, %f700, %f581;
	max.f32 	%f702, %f609, %f701;
	add.f32 	%f703, %f673, %f702;
	mul.f32 	%f772, %f703, 0f3E800000;

BB0_27:
	ld.global.u32 	%r121, [dataRenderer+28];
	setp.lt.u32	%p20, %r121, 2;
	@%p20 bra 	BB0_29;

	ld.global.u32 	%r122, [dataRenderer+36];
	ld.global.v2.u32 	{%r125, %r126}, [dLi];
	cvt.u64.u32	%rd73, %r125;
	cvt.u64.u32	%rd74, %r126;
	mov.u32 	%r124, 4;
	// inline asm
	call (%rd72), _rt_buffer_get_id_64, (%r122, %r78, %r124, %rd73, %rd74, %rd55, %rd55);
	// inline asm
	ld.f32 	%f704, [%rd72];
	sub.f32 	%f705, %f772, %f704;
	fma.rn.f32 	%f772, %f110, %f705, %f704;

BB0_29:
	ld.global.u32 	%r129, [dataRenderer+36];
	ld.global.v2.u32 	{%r132, %r133}, [dLi];
	cvt.u64.u32	%rd78, %r132;
	cvt.u64.u32	%rd79, %r133;
	mov.u32 	%r131, 4;
	// inline asm
	call (%rd77), _rt_buffer_get_id_64, (%r129, %r78, %r131, %rd78, %rd79, %rd55, %rd55);
	// inline asm
	st.f32 	[%rd77], %f772;

BB0_30:
	ld.global.u32 	%r136, [dataRenderer+40];
	ld.global.v2.u32 	{%r139, %r140}, [dLi];
	cvt.u64.u32	%rd83, %r139;
	cvt.u64.u32	%rd84, %r140;
	// inline asm
	call (%rd82), _rt_buffer_get_id_64, (%r136, %r78, %r79, %rd83, %rd84, %rd55, %rd55);
	// inline asm
	mul.f32 	%f712, %f723, %f772;
	mul.f32 	%f713, %f724, %f772;
	mul.f32 	%f714, %f725, %f772;
	mul.f32 	%f715, %f726, %f772;
	st.v4.f32 	[%rd82], {%f715, %f714, %f713, %f712};
	ret;
}

	// .globl	_Z12PgmExceptionv
.visible .entry _Z12PgmExceptionv(

)
{
	.local .align 16 .b8 	__local_depot1[208];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<43>;
	.reg .f32 	%f<21>;
	.reg .b32 	%r<97>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<102>;


	mov.u64 	%rd101, __local_depot1;
	cvta.local.u64 	%SP, %rd101;
	ld.global.u32 	%r39, [dataRenderer+40];
	ld.global.v2.u32 	{%r43, %r44}, [dLi];
	cvt.u64.u32	%rd18, %r43;
	cvt.u64.u32	%rd19, %r44;
	mov.u32 	%r40, 2;
	mov.u32 	%r41, 16;
	mov.u64 	%rd21, 0;
	// inline asm
	call (%rd17), _rt_buffer_get_id_64, (%r39, %r40, %r41, %rd18, %rd19, %rd21, %rd21);
	// inline asm
	ld.global.v4.f32 	{%f1, %f2, %f3, %f4}, [dataRenderer+144];
	st.v4.f32 	[%rd17], {%f1, %f2, %f3, %f4};
	// inline asm
	call (%r42), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p1, %r42, 1020;
	@%p1 bra 	BB1_63;

	ld.global.u64 	%rd1, [dLd];
	cvt.u32.u64	%r47, %rd1;
	cvt.rn.f32.u32	%f9, %r47;
	mul.f32 	%f10, %f9, 0f3F000000;
	cvt.rzi.u32.f32	%r48, %f10;
	ld.global.u64 	%rd2, [dLi];
	cvt.u32.u64	%r49, %rd2;
	setp.ne.s32	%p2, %r48, %r49;
	@%p2 bra 	BB1_63;

	shr.u64 	%rd22, %rd2, 32;
	cvt.u32.u64	%r50, %rd22;
	shr.u64 	%rd23, %rd1, 32;
	cvt.u32.u64	%r51, %rd23;
	cvt.rn.f32.u32	%f11, %r51;
	mul.f32 	%f12, %f11, 0f3F000000;
	cvt.rzi.u32.f32	%r52, %f12;
	setp.ne.s32	%p3, %r52, %r50;
	@%p3 bra 	BB1_63;

	// inline asm
	call (%r53), _rt_get_exception_code, ();
	// inline asm
	setp.eq.s32	%p4, %r53, 1020;
	add.u64 	%rd24, %SP, 184;
	cvta.to.local.u64 	%rd25, %rd24;
	add.s64 	%rd3, %rd25, 4;
	@%p4 bra 	BB1_61;
	bra.uni 	BB1_4;

BB1_61:
	ld.volatile.global.u32 	%r36, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r37, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r38, [_ZN21rti_internal_register14reg_rayIndex_zE];
	// inline asm
	call (%r94), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p42, %r94, 0;
	@%p42 bra 	BB1_63;

	st.local.u32 	[%rd25], %r36;
	st.local.u32 	[%rd3], %r37;
	st.local.u32 	[%rd3+4], %r38;
	mov.u64 	%rd97, $str;
	cvta.global.u64 	%rd98, %rd97;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd98;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r95, [retval0+0];
	
	//{
	}// Callseq End 32
	bra.uni 	BB1_63;

BB1_4:
	setp.eq.s32	%p5, %r53, 1021;
	@%p5 bra 	BB1_55;
	bra.uni 	BB1_5;

BB1_55:
	ld.volatile.global.u32 	%r30, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r31, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r32, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r33, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd8, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u32 	%r34, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u64 	%rd9, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	mov.u64 	%rd100, 1;
	setp.lt.u32	%p39, %r30, 2;
	mov.u64 	%rd99, %rd100;
	@%p39 bra 	BB1_57;

	ld.volatile.global.u64 	%rd99, [_ZN21rti_internal_register24reg_exception_64_detail2E];

BB1_57:
	setp.lt.u32	%p40, %r30, 3;
	@%p40 bra 	BB1_59;

	ld.volatile.global.u64 	%rd100, [_ZN21rti_internal_register24reg_exception_64_detail3E];

BB1_59:
	ld.volatile.global.u32 	%r35, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u64 	%rd14, [_ZN21rti_internal_register24reg_exception_64_detail4E];
	ld.volatile.global.u64 	%rd15, [_ZN21rti_internal_register24reg_exception_64_detail5E];
	ld.volatile.global.u64 	%rd16, [_ZN21rti_internal_register24reg_exception_64_detail6E];
	// inline asm
	call (%r92), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p41, %r92, 0;
	@%p41 bra 	BB1_63;

	add.u64 	%rd91, %SP, 96;
	cvta.to.local.u64 	%rd92, %rd91;
	st.local.v2.u32 	[%rd92], {%r31, %r32};
	st.local.u32 	[%rd92+8], %r33;
	st.local.u32 	[%rd92+24], %r34;
	st.local.u32 	[%rd92+56], %r35;
	st.local.u64 	[%rd92+16], %rd8;
	st.local.u64 	[%rd92+32], %rd9;
	st.local.u64 	[%rd92+40], %rd99;
	st.local.u64 	[%rd92+48], %rd100;
	st.local.u64 	[%rd92+64], %rd14;
	st.local.u64 	[%rd92+72], %rd15;
	st.local.u64 	[%rd92+80], %rd16;
	mov.u64 	%rd93, $str1;
	cvta.global.u64 	%rd94, %rd93;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd91;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r93, [retval0+0];
	
	//{
	}// Callseq End 31

BB1_63:
	ret;

BB1_5:
	setp.eq.s32	%p6, %r53, 1006;
	@%p6 bra 	BB1_44;
	bra.uni 	BB1_6;

BB1_44:
	// inline asm
	call (%r83), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p32, %r83, 0;
	@%p32 bra 	BB1_46;

	mov.u64 	%rd76, $str2;
	cvta.global.u64 	%rd77, %rd76;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd77;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r84, [retval0+0];
	
	//{
	}// Callseq End 27

BB1_46:
	ld.volatile.global.u32 	%r85, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p33, %r85, 0;
	@%p33 bra 	BB1_53;

	setp.eq.s32	%p34, %r85, 1;
	@%p34 bra 	BB1_51;
	bra.uni 	BB1_48;

BB1_51:
	ld.volatile.global.u32 	%r29, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r88), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p37, %r88, 0;
	@%p37 bra 	BB1_63;

	add.u64 	%rd82, %SP, 88;
	cvta.to.local.u64 	%rd83, %rd82;
	st.local.u32 	[%rd83], %r29;
	mov.u64 	%rd84, $str4;
	cvta.global.u64 	%rd85, %rd84;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r89, [retval0+0];
	
	//{
	}// Callseq End 29
	bra.uni 	BB1_63;

BB1_6:
	setp.eq.s32	%p7, %r53, 1007;
	@%p7 bra 	BB1_33;
	bra.uni 	BB1_7;

BB1_33:
	// inline asm
	call (%r74), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p25, %r74, 0;
	@%p25 bra 	BB1_35;

	mov.u64 	%rd61, $str6;
	cvta.global.u64 	%rd62, %rd61;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 23

BB1_35:
	ld.volatile.global.u32 	%r76, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p26, %r76, 0;
	@%p26 bra 	BB1_42;

	setp.eq.s32	%p27, %r76, 1;
	@%p27 bra 	BB1_40;
	bra.uni 	BB1_37;

BB1_40:
	ld.volatile.global.u32 	%r27, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r79), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p30, %r79, 0;
	@%p30 bra 	BB1_63;

	add.u64 	%rd68, %SP, 72;
	cvta.to.local.u64 	%rd69, %rd68;
	st.local.u32 	[%rd69], %r27;
	mov.u64 	%rd70, $str8;
	cvta.global.u64 	%rd71, %rd70;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 25
	bra.uni 	BB1_63;

BB1_7:
	setp.eq.s32	%p8, %r53, 1018;
	@%p8 bra 	BB1_22;
	bra.uni 	BB1_8;

BB1_22:
	// inline asm
	call (%r65), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p18, %r65, 0;
	@%p18 bra 	BB1_24;

	mov.u64 	%rd48, $str10;
	cvta.global.u64 	%rd49, %rd48;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r66, [retval0+0];
	
	//{
	}// Callseq End 19

BB1_24:
	ld.volatile.global.u32 	%r67, [_ZN21rti_internal_register21reg_exception_detail1E];
	setp.eq.s32	%p19, %r67, 0;
	@%p19 bra 	BB1_31;

	setp.eq.s32	%p20, %r67, 1;
	@%p20 bra 	BB1_29;
	bra.uni 	BB1_26;

BB1_29:
	ld.volatile.global.u32 	%r25, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r70), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p23, %r70, 0;
	@%p23 bra 	BB1_63;

	add.u64 	%rd54, %SP, 56;
	cvta.to.local.u64 	%rd55, %rd54;
	st.local.u32 	[%rd55], %r25;
	mov.u64 	%rd56, $str12;
	cvta.global.u64 	%rd57, %rd56;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd57;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r71, [retval0+0];
	
	//{
	}// Callseq End 21
	bra.uni 	BB1_63;

BB1_53:
	// inline asm
	call (%r90), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p38, %r90, 0;
	@%p38 bra 	BB1_63;

	mov.u64 	%rd86, $str3;
	cvta.global.u64 	%rd87, %rd86;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r91, [retval0+0];
	
	//{
	}// Callseq End 30
	bra.uni 	BB1_63;

BB1_48:
	setp.ne.s32	%p35, %r85, 2;
	@%p35 bra 	BB1_63;

	// inline asm
	call (%r86), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p36, %r86, 0;
	@%p36 bra 	BB1_63;

	mov.u64 	%rd79, $str5;
	cvta.global.u64 	%rd80, %rd79;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r87, [retval0+0];
	
	//{
	}// Callseq End 28
	bra.uni 	BB1_63;

BB1_8:
	setp.eq.s32	%p9, %r53, 1019;
	@%p9 bra 	BB1_20;
	bra.uni 	BB1_9;

BB1_20:
	ld.volatile.global.u32 	%r63, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r22, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r23, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r24, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u64 	%rd5, [_ZN21rti_internal_register24reg_exception_64_detail0E];
	ld.volatile.global.u64 	%rd6, [_ZN21rti_internal_register24reg_exception_64_detail1E];
	ld.volatile.global.u64 	%rd7, [_ZN21rti_internal_register24reg_exception_64_detail2E];
	// inline asm
	call (%r62), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p17, %r62, 0;
	@%p17 bra 	BB1_63;

	add.u64 	%rd44, %SP, 16;
	cvta.to.local.u64 	%rd45, %rd44;
	st.local.v2.u32 	[%rd45], {%r22, %r23};
	st.local.u32 	[%rd45+8], %r24;
	st.local.u64 	[%rd45+16], %rd5;
	st.local.u64 	[%rd45+24], %rd6;
	st.local.u64 	[%rd45+32], %rd7;
	mov.u64 	%rd46, $str14;
	cvta.global.u64 	%rd47, %rd46;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd44;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r64, [retval0+0];
	
	//{
	}// Callseq End 18
	bra.uni 	BB1_63;

BB1_42:
	ld.volatile.global.u32 	%r28, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r81), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p31, %r81, 0;
	@%p31 bra 	BB1_63;

	add.u64 	%rd72, %SP, 80;
	cvta.to.local.u64 	%rd73, %rd72;
	st.local.u32 	[%rd73], %r28;
	mov.u64 	%rd74, $str7;
	cvta.global.u64 	%rd75, %rd74;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd75;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd72;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r82, [retval0+0];
	
	//{
	}// Callseq End 26
	bra.uni 	BB1_63;

BB1_37:
	setp.ne.s32	%p28, %r76, 2;
	@%p28 bra 	BB1_63;

	ld.volatile.global.u32 	%r26, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r77), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p29, %r77, 0;
	@%p29 bra 	BB1_63;

	add.u64 	%rd64, %SP, 64;
	cvta.to.local.u64 	%rd65, %rd64;
	st.local.u32 	[%rd65], %r26;
	mov.u64 	%rd66, $str9;
	cvta.global.u64 	%rd67, %rd66;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd67;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r78, [retval0+0];
	
	//{
	}// Callseq End 24
	bra.uni 	BB1_63;

BB1_9:
	setp.eq.s32	%p10, %r53, 1022;
	@%p10 bra 	BB1_18;
	bra.uni 	BB1_10;

BB1_18:
	ld.volatile.global.u32 	%r10, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r11, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r12, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r13, [_ZN21rti_internal_register21reg_exception_detail0E];
	ld.volatile.global.u32 	%r14, [_ZN21rti_internal_register21reg_exception_detail1E];
	ld.volatile.global.u32 	%r15, [_ZN21rti_internal_register21reg_exception_detail2E];
	ld.volatile.global.u32 	%r16, [_ZN21rti_internal_register21reg_exception_detail3E];
	ld.volatile.global.u32 	%r17, [_ZN21rti_internal_register21reg_exception_detail4E];
	ld.volatile.global.u32 	%r18, [_ZN21rti_internal_register21reg_exception_detail5E];
	ld.volatile.global.u32 	%r19, [_ZN21rti_internal_register21reg_exception_detail6E];
	ld.volatile.global.u32 	%r20, [_ZN21rti_internal_register21reg_exception_detail7E];
	ld.volatile.global.u32 	%r21, [_ZN21rti_internal_register21reg_exception_detail8E];
	// inline asm
	call (%r60), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p16, %r60, 0;
	@%p16 bra 	BB1_63;

	mov.b32 	 %f13, %r13;
	cvt.f64.f32	%fd1, %f13;
	mov.b32 	 %f14, %r14;
	cvt.f64.f32	%fd2, %f14;
	mov.b32 	 %f15, %r15;
	cvt.f64.f32	%fd3, %f15;
	mov.b32 	 %f16, %r16;
	cvt.f64.f32	%fd4, %f16;
	mov.b32 	 %f17, %r17;
	cvt.f64.f32	%fd5, %f17;
	mov.b32 	 %f18, %r18;
	cvt.f64.f32	%fd6, %f18;
	mov.b32 	 %f19, %r20;
	cvt.f64.f32	%fd7, %f19;
	mov.b32 	 %f20, %r21;
	cvt.f64.f32	%fd8, %f20;
	add.u64 	%rd40, %SP, 96;
	cvta.to.local.u64 	%rd41, %rd40;
	st.local.v2.u32 	[%rd41], {%r10, %r11};
	st.local.u32 	[%rd41+8], %r12;
	st.local.u32 	[%rd41+64], %r19;
	st.local.f64 	[%rd41+16], %fd1;
	st.local.f64 	[%rd41+24], %fd2;
	st.local.f64 	[%rd41+32], %fd3;
	st.local.f64 	[%rd41+40], %fd4;
	st.local.f64 	[%rd41+48], %fd5;
	st.local.f64 	[%rd41+56], %fd6;
	st.local.f64 	[%rd41+72], %fd7;
	st.local.f64 	[%rd41+80], %fd8;
	mov.u64 	%rd42, $str15;
	cvta.global.u64 	%rd43, %rd42;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r61, [retval0+0];
	
	//{
	}// Callseq End 17
	bra.uni 	BB1_63;

BB1_31:
	// inline asm
	call (%r72), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p24, %r72, 0;
	@%p24 bra 	BB1_63;

	mov.u64 	%rd58, $str11;
	cvta.global.u64 	%rd59, %rd58;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r73, [retval0+0];
	
	//{
	}// Callseq End 22
	bra.uni 	BB1_63;

BB1_26:
	setp.ne.s32	%p21, %r67, 2;
	@%p21 bra 	BB1_63;

	// inline asm
	call (%r68), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p22, %r68, 0;
	@%p22 bra 	BB1_63;

	mov.u64 	%rd51, $str13;
	cvta.global.u64 	%rd52, %rd51;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r69, [retval0+0];
	
	//{
	}// Callseq End 20
	bra.uni 	BB1_63;

BB1_10:
	setp.eq.s32	%p11, %r53, 1023;
	add.u64 	%rd26, %SP, 0;
	cvta.to.local.u64 	%rd27, %rd26;
	add.s64 	%rd4, %rd27, 4;
	@%p11 bra 	BB1_16;
	bra.uni 	BB1_11;

BB1_16:
	ld.volatile.global.u32 	%r6, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r7, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r8, [_ZN21rti_internal_register14reg_rayIndex_zE];
	ld.volatile.global.u32 	%r9, [_ZN21rti_internal_register21reg_exception_detail0E];
	// inline asm
	call (%r58), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p15, %r58, 0;
	@%p15 bra 	BB1_63;

	st.local.u32 	[%rd27], %r6;
	st.local.u32 	[%rd4], %r7;
	st.local.v2.u32 	[%rd4+4], {%r8, %r9};
	mov.u64 	%rd38, $str16;
	cvta.global.u64 	%rd39, %rd38;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 16
	bra.uni 	BB1_63;

BB1_11:
	add.s32 	%r2, %r53, -1024;
	setp.lt.u32	%p12, %r2, 64512;
	ld.volatile.global.u32 	%r3, [_ZN21rti_internal_register14reg_rayIndex_xE];
	ld.volatile.global.u32 	%r4, [_ZN21rti_internal_register14reg_rayIndex_yE];
	ld.volatile.global.u32 	%r5, [_ZN21rti_internal_register14reg_rayIndex_zE];
	@%p12 bra 	BB1_14;
	bra.uni 	BB1_12;

BB1_14:
	// inline asm
	call (%r56), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p14, %r56, 0;
	@%p14 bra 	BB1_63;

	add.s32 	%r96, %r53, -1024;
	st.local.u32 	[%rd27], %r96;
	st.local.u32 	[%rd4], %r3;
	st.local.v2.u32 	[%rd4+4], {%r4, %r5};
	mov.u64 	%rd34, $str17;
	cvta.global.u64 	%rd35, %rd34;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 15
	bra.uni 	BB1_63;

BB1_12:
	// inline asm
	call (%r54), _rt_print_active, ();
	// inline asm
	setp.eq.s32	%p13, %r54, 0;
	@%p13 bra 	BB1_63;

	st.local.u32 	[%rd25], %r3;
	st.local.u32 	[%rd3], %r4;
	st.local.u32 	[%rd3+4], %r5;
	mov.u64 	%rd30, $str18;
	cvta.global.u64 	%rd31, %rd30;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r55, [retval0+0];
	
	//{
	}// Callseq End 14
	bra.uni 	BB1_63;
}


